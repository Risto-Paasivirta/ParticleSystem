{"version":3,"sources":["components/EffectsConfigurationPanel/ModuleProperty/NumberProperty.js","components/EffectsConfigurationPanel/ModuleProperty/PositionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/RangeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ColorPaletteProperty.js","components/EffectsConfigurationPanel/ModuleProperty/EasingFunctionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ShapeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BurstListProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BooleanProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ModuleProperty.js","components/EffectsConfigurationPanel/Module.js","components/EffectsConfigurationPanel/TextureSelector.js","components/EffectsConfigurationPanel/Effect.js","components/EffectsConfigurationPanel/EffectsConfigurationPanel.js","components/ProjectToolbar.js","../../modular-particle-system/release/module.js","../../modular-particle-system/release/destructors/alphaDestructor.js","../../modular-particle-system/release/destructors/lifeTimeDestructor.js","../../modular-particle-system/release/serialization/moduleSerialization.js","../../modular-particle-system/release/utilities.js","../../modular-particle-system/release/shapes/circle.js","../../modular-particle-system/release/shapes/rectangle.js","../../modular-particle-system/release/shapes/triangle.js","../../modular-particle-system/release/shapes/shape.js","../../modular-particle-system/release/destructors/outsideBoundsDestructor.js","../../modular-particle-system/release/particle.js","../../modular-particle-system/release/generators/generator.js","../../modular-particle-system/release/generators/pointGenerator.js","../../modular-particle-system/release/initializers/alphaRange.js","../../modular-particle-system/release/initializers/lifeTimeRange.js","../../modular-particle-system/release/initializers/randomAngleVelocity.js","../../modular-particle-system/release/initializers/randomScale.js","../../modular-particle-system/release/initializers/randomColor.js","../../modular-particle-system/release/initializers/randomRotationalVelocity.js","../../modular-particle-system/release/initializers/randomVelocity.js","../../modular-particle-system/release/easing.js","../../modular-particle-system/release/modifiers/alphaOverLifetime.js","../../modular-particle-system/release/modifiers/deaccelerationOverLifetime.js","../../modular-particle-system/release/modifiers/gravity.js","../../modular-particle-system/release/generators/circleLoadingGenerator.js","../../modular-particle-system/release/generators/shapeGenerator.js","../../modular-particle-system/release/modifiers/gravityWithCenter.js","../../modular-particle-system/release/initializers/randomRotation.js","../../modular-particle-system/release/serialization/moduleRegistry.js","../../modular-particle-system/release/particleEffect.js","../../modular-particle-system/release/particleSystem.js","components/ParticleSandbox.js","components/Editor.js","other/utils.js","reportWebVitals.js","index.js"],"names":["NumberProperty","props","value","name","propertyInfo","onChange","tooltip","min","max","step","className","title","type","e","newValue","Number","target","console","warn","PositionProperty","x","y","RangeProperty","ColorPaletteProperty","within256range","num","length","map","color","i","r","newPropertyValue","g","b","onClick","splice","EasingFunctionProperty","easingFunctions","useContext","globalStateContext","selectedEasingFunction","easingFunction","ShapeProperty","BurstListProperty","sort","a","time","burst","count","undefined","repeat","BooleanProperty","checked","ModuleProperty","nKey","key","Error","Module","module","updateModule","removeModule","moveModuleUp","moveModuleDown","particleModules","moduleInfo","find","info","moduleTypeId","localeCompare","moduleType","Object","entries","properties","iProperty","updatedModule","TextureSelector","selectedTextures","updateTextures","availableTextures","selectedTextureName","iTexture","textureName","Effect","effect","updateEffect","removeEffect","textures","updatedTextures","updatedEffect","newModule","modules","unshift","iModule","indexOf","EffectsConfigurationPanel","effects","updateEffects","updatedEffects","iEffect","ProjectToolbar","restart","saveToFile","loadFromFile","loadPreset","presetEffects","useState","presetsVisible","setPresetsVisible","presetEffect","data","style","backgroundImage","thumbnail","label","particleEffect","this","active","dt","AlphaDestructor","len","particles","particle","alpha","destroyParticle","object","hideWarnings","LifeTimeDestructor","timeLived","lifeTime","loadSerializedProperty","deserializeValue","deserializedValue","deserializePrimitiveDataType","serializedPrimitiveDataType","lerp","clamp","Math","randomInRange","random","vec2","subtract","multiply","v","sqrt","pow","normalize","lerpColor","factor","aLab","rgbToLab","bLab","lerpLab","l","lerbRGB","labToRgb","rgb","z","lab","circleLogic","getRandomPosition","shape","angle","PI","radius","center","cos","sin","getRandomEdgePosition","containsPosition","position","rectangleLogic","v1","v2","width","abs","height","randomEdgeLength","minX","minY","maxX","maxY","triangleLogic","r1","r2","s1","v3","d1","sign","d2","d3","p1","p2","p3","deserializeShape","serializedShape","selectShapeLogic","OutsideBoundsDestructor","bounds","Particle","velocity","rotation","rotationalVelocity","scale","destroyed","texture","ParticleGenerator","arguments","interval","_timer","bursts","_updateCounter","tPrev","tNow","forEach","burstTimestamp","ceil","generateParticle","PointGenerator","addParticle","AlphaRange","handleParticleAdd","addParticleListeners","push","LifeTimeRange","RandomAngleVelocity","angleRad","RandomScale","RandomColor","palette","interpolate","randomPalettePosition","iPaletteStart","floor","colorA","colorB","round","RandomRotationalVelocity","RandomVelocity","randomX","randomY","EasingFunctions","linear","easeOutSine","easeOutCubic","easeOutExpo","easeOutCirc","easeOutBack","c1","easeOutElastic","c4","serializeEasing","entry","deserializeEasing","serializedEasing","AlphaOverLifetime","easing","_alphaOverLifetime_initialAlpha","initialAlpha","DeaccelerationOverLifetime","_velocityOverLifetime_initialVelocity","xPrev","xNow","animationPrev","animationNow","initialVelocity","deacceleration","Gravity","strength","CircleLoadingGenerator","nextParticleAngle","angleStep","ShapeGenerator","edgesOnly","getRandomPositionInsideShape","GravityWithCenter","maxPullStrengthDistance","maxPullStrengthMultiplier","minPullStrengthDistance","minPullStrengthMultiplier","toCenter","particleDistance","pullStrengthMultiplier","pullStrength","pullDirection","RandomRotation","moduleTypeRegistry","ParticleEffect","particleSystem","isInitialized","destroyParticleListeners","init","update","clbk","ParticleSystem","addParticleEffectListeners","removeParticleEffectListeners","toObject","options","effectObject","_a","addParticleEffect","moduleObject","moduleTypeReference","fromObject","ParticleSandbox","renderer","setRenderer","visibleParticlesCount","setVisibleParticlesCount","runTime","setRunTime","useEffect","container","document","getElementById","app","PIXI","resizeTo","backgroundAlpha","appendChild","view","clientHeight","unusedSprites","activeSprites","Map","effectInfo","sprite","pop","blendMode","ADD","anchor","stage","addChild","visible","set","handleParticleDestroy","get","delete","registerParticleEffect","updateRendering","tint","rgb2hex","TextureCache","reset","Array","from","keys","destroy","particleEffects","runTimeCounter","ticker","elapsedMS","particlesCount","reduce","prev","cur","add","remove","fill","_","id","toFixed","globalState","createContext","defaultParticleSystemConf","loadParticleEffectDefaults","particleModulesInfo","effectResult","moduleResult","propertyKey","defaultValue","error","toLowerCase","JSON","parse","Editor","setEffects","loading","setLoading","promiseCoreLibraryConfig","fetch","then","json","coreLibraryConfig","log","promiseSpriteSheets","spriteSheetNames","loader","shared","resources","spritesheet","load","Promise","resolve","onComplete","once","values","resource","promisePresetEffects","all","refLoadFileInput","useRef","Provider","obj","filename","blob","Blob","stringify","url","URL","createObjectURL","elem","createElement","href","download","body","click","removeChild","downloadObject","particleSystemData","fileInput","current","ref","accept","file","files","Response","loadedParticleSystem","alert","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fab848d1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NumberProperty.css\";\n\nconst NumberProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"number-layout field\">\n      <span className=\"number-name\" title={tooltip}>\n        {name}\n      </span>\n      <input\n        className=\"number-field\"\n        type={\"number\"}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={(e) => {\n          let newValue;\n          try {\n            newValue = Number(e.target.value);\n          } catch (e) {\n            console.warn(`NumberProperty could not parse Number`);\n          }\n          onChange(newValue);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default NumberProperty;\n","import React from \"react\";\nimport \"./PositionProperty.css\";\n\nconst PositionProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"field position-div\">\n      <span title={name}>{name}</span>\n      <div className=\"position-child-div\">\n        <span>X</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.x}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (min)`);\n            }\n            onChange({ x: newValue, y: value.y });\n          }}\n        ></input>\n      </div>\n      <div className=\"position-child-div\">\n        <span>Y</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.y}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (max)`);\n            }\n            onChange({ x: value.x, y: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionProperty;\n","import React from \"react\";\nimport \"./RangeProperty.css\";\n\nconst RangeProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"field range-div\">\n      <span title={tooltip}>{name}</span>\n      <div className=\"range-child-div\">\n        <span>min</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.min}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (min)`);\n            }\n            onChange({ min: newValue, max: value.max });\n          }}\n        ></input>\n      </div>\n      <div className=\"range-child-div\">\n        <span>max</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.max}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (max)`);\n            }\n            onChange({ min: value.min, max: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default RangeProperty;\n","import React from \"react\";\nimport \"./ColorPaletteProperty.css\";\n\nconst ColorPaletteProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n\n  const within256range = (num) => {\n    if (num > 255) return 255;\n    if (num < 0) return 0;\n\n    return num;\n  };\n\n  return (\n    <div className=\"colorPalette-div field\">\n      <span>{name}</span>\n      <div className=\"colorPalette-nested-div\">\n        {value.length > 0 && (\n          <table className=\"colorPalette-table\">\n            <thead>\n              <tr>\n                <th>r</th>\n                <th>g</th>\n                <th>b</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value.map((color, i) => (\n                <tr key={`row-color-${i}`}>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.r * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          if (e.target.value > 255) e.target.value = 255;\n                          if (e.target.value < 0) e.target.value = 0;\n                          newValue = Number(e.target.value) / 255;\n                        } catch (e) {\n                          console.warn(\n                            `ColorPaletteProperty could not parse Number`\n                          );\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          r: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.g * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          g: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.b * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          b: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <div\n                      className=\"colorPalette-remove-color\"\n                      onClick={() => {\n                        const newValue = [...value];\n                        newValue.splice(i, 1);\n                        onChange(newValue);\n                      }}\n                    ></div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        <div\n          className=\"colorPalette-add-color\"\n          onClick={() => {\n            const newValue = [...value, { r: 1, g: 1, b: 1 }];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPaletteProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./EasingFunctionProperty.css\";\n\nconst EasingFunctionProperty = (props) => {\n  const { name, value, onChange } = props;\n  const { easingFunctions } = useContext(globalStateContext);\n\n  return (\n    <div className=\"easingFunction-div field\">\n      <span className=\"easingFunction-name\">{name}</span>\n      <select\n        className=\"easingFunction-dropdown\"\n        value={value}\n        onChange={(e) => {\n          const selectedEasingFunction = e.target.value;\n          onChange(selectedEasingFunction);\n        }}\n      >\n        {easingFunctions.map((easingFunction) => (\n          <option key={easingFunction} className=\"easingFunction-option\">\n            {easingFunction}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default EasingFunctionProperty;\n","import React from \"react\";\nimport \"./ShapeProperty.css\";\n\nconst ShapeProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"shape-div field\">\n      <span>{name}</span>\n      <span>Shape*</span>\n    </div>\n  );\n};\n\nexport default ShapeProperty;\n","import React from \"react\";\nimport \"./BurstListProperty.css\";\n\nconst BurstListProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"burstListProperty-div field\">\n      <span>{name}</span>\n      <div className=\"burstListProperty-nested-div\">\n        {value.length > 0 && (\n          <table className=\"burstListProperty-table\">\n            <thead>\n              <tr>\n                <th>time</th>\n                <th>count</th>\n                <th>repeat</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value\n                .sort((a, b) => a.time - b.time)\n                .map((burst, i) => (\n                  <tr key={`burst-row-${i}`}>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.time}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            time: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.count}\n                        min={0}\n                        step={10}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            count: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.repeat !== undefined ? burst.repeat : 0}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                            if (newValue === 0) newValue = undefined;\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            repeat: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <div\n                        className=\"burstListProperty-remove-burst\"\n                        onClick={() => {\n                          const newValue = [...value];\n                          newValue.splice(i, 1);\n                          onChange(newValue);\n                        }}\n                      ></div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n        <div\n          className=\"burstListProperty-add-burst\"\n          onClick={() => {\n            const newValue = [\n              ...value,\n              { time: 0, count: 20, repeat: undefined },\n            ];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default BurstListProperty;\n","import React from \"react\";\nimport \"./BooleanProperty.css\";\n\nconst BooleanProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"boolean-div field\">\n      <span>{name}</span>\n      <input\n        className=\"boolean-field\"\n        checked={value}\n        type={\"checkbox\"}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default BooleanProperty;\n","import React from \"react\";\nimport \"./ModuleProperty.css\";\nimport NumberProperty from \"./NumberProperty\";\nimport PositionProperty from \"./PositionProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport ColorPaletteProperty from \"./ColorPaletteProperty\";\nimport EasingFunctionProperty from \"./EasingFunctionProperty\";\nimport ShapeProperty from \"./ShapeProperty\";\nimport BurstListProperty from \"./BurstListProperty\";\nimport BooleanProperty from \"./BooleanProperty\";\n\nconst ModuleProperty = (props) => {\n  const { propertyInfo, nKey } = props;\n\n  switch (propertyInfo.type) {\n    case \"Number\":\n      return <NumberProperty {...props} key={nKey} />;\n    case \"Position\":\n      return <PositionProperty {...props} key={nKey} />;\n    case \"Range\":\n      return <RangeProperty {...props} key={nKey} />;\n    case \"Color[]\":\n      return <ColorPaletteProperty {...props} key={nKey} />;\n    case \"EasingFunction\":\n      return <EasingFunctionProperty {...props} key={nKey} />;\n    case \"Shape\":\n      return <ShapeProperty {...props} key={nKey} />;\n    case \"Burst[]\":\n      return <BurstListProperty {...props} key={nKey} />;\n    case \"Boolean\":\n      return <BooleanProperty {...props} key={nKey} />;\n    default:\n      throw new Error(\n        `Unidentified module property type: ${propertyInfo.type}`\n      );\n  }\n};\n\nexport default ModuleProperty;\n","import React, { useContext } from \"react\";\nimport \"./Module.css\";\nimport { globalStateContext } from \"../Editor\";\nimport ModuleProperty from \"./ModuleProperty/ModuleProperty\";\n\nconst Module = (props) => {\n  const {\n    module,\n    nKey,\n    updateModule,\n    removeModule,\n    moveModuleUp,\n    moveModuleDown,\n  } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  const moduleInfo = particleModules.find(\n    (info) => info.moduleTypeId === module.moduleTypeId\n  );\n  if (!moduleInfo) {\n    throw new Error(`Unidentified module: ${module.moduleTypeId}`);\n  }\n\n  return (\n    <div className=\"module\">\n      <div className=\"module-title-layout field\">\n        <select\n          className=\"module-typeDropdown\"\n          value={module.moduleTypeId}\n          onChange={(e) => {\n            const value = e.target.value;\n            const updatedModule = { moduleTypeId: value };\n            updateModule(updatedModule);\n          }}\n        >\n          {particleModules\n            .sort((a, b) => a.moduleTypeId.localeCompare(b.moduleTypeId))\n            .map((moduleType, i) => (\n              <option value={moduleType.moduleTypeId} key={`module-${i}`}>\n                {moduleType.moduleTypeId}\n              </option>\n            ))}\n        </select>\n        <div className=\"module-moveContainer\">\n          <div\n            className=\"module-move module-moveUp\"\n            title=\"Move module up\"\n            onClick={() => {\n              moveModuleUp();\n            }}\n          ></div>\n          <div\n            className=\"module-move module-moveDown\"\n            title=\"Move module down\"\n            onClick={() => {\n              moveModuleDown();\n            }}\n          ></div>\n        </div>\n        <div className=\"module-remove\" onClick={() => removeModule()}></div>\n      </div>\n      <div className=\"module-properties\">\n        {Object.entries(moduleInfo.properties).map(\n          ([key, propertyInfo], iProperty) => (\n            <ModuleProperty\n              name={key}\n              value={module[key]}\n              propertyInfo={propertyInfo}\n              key={`${nKey}_property${iProperty}`}\n              nKey={`${nKey}_property${iProperty}`}\n              onChange={(value) => {\n                const updatedModule = { ...module };\n                updatedModule[key] = value;\n                updateModule(updatedModule);\n              }}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Module;\n","import React, { useContext } from \"react\";\nimport \"./TextureSelector.css\";\nimport { globalStateContext } from \"../Editor\";\n\nconst TextureSelector = (props) => {\n  const { selectedTextures, updateTextures } = props;\n  const { availableTextures } = useContext(globalStateContext);\n  return (\n    <select\n      className=\"textureSelector-dropdown field\"\n      onChange={(e) => {\n        const selectedTextureName = e.target.value;\n        updateTextures([selectedTextureName]);\n      }}\n      value={selectedTextures[0]}\n    >\n      {Object.entries(availableTextures)\n        .sort((a, b) => a[0].localeCompare(b[0]))\n        .map(([textureName, textureValue], iTexture) => (\n          <option\n            className=\"textureSelector-option\"\n            key={`texture-${iTexture}`}\n          >\n            {textureName}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nexport default TextureSelector;\n","import React, { useContext } from \"react\";\nimport \"./Effect.css\";\nimport Module from \"./Module\";\nimport { globalStateContext } from \"../Editor\";\nimport TextureSelector from \"./TextureSelector\";\n\nconst Effect = (props) => {\n  const { effect, title, nKey, updateEffect, removeEffect } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  return (\n    <div className=\"effect\">\n      <div className=\"effect-titleDiv\">\n        <span className=\"effect-title\">{title}</span>\n        <div\n          className=\"effect-remove\"\n          onClick={() => {\n            removeEffect();\n          }}\n        ></div>\n      </div>\n      <div className=\"effect-properties\">\n        <TextureSelector\n          selectedTextures={effect.textures}\n          updateTextures={(updatedTextures) => {\n            const updatedEffect = { ...effect, textures: updatedTextures };\n            updateEffect(updatedEffect);\n          }}\n        />\n        <div\n          className=\"effect-addModuleDiv field\"\n          onClick={() => {\n            const newModule = {\n              moduleTypeId: particleModules[0].moduleTypeId,\n            };\n            const updatedEffect = { ...effect };\n            updatedEffect.modules.unshift(newModule);\n            updateEffect(updatedEffect);\n          }}\n        >\n          <div className=\"effect-addModule\"></div>\n          <span>Add module</span>\n        </div>\n        {effect.modules.map((module, iModule) => (\n          <Module\n            module={module}\n            key={`${nKey}_module${iModule}`}\n            nKey={`${nKey}_module${iModule}`}\n            updateModule={(updatedModule) => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules[iModule] = updatedModule;\n              updateEffect(updatedEffect);\n            }}\n            removeModule={() => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(\n                updatedEffect.modules.indexOf(module),\n                1\n              );\n              updateEffect(updatedEffect);\n            }}\n            moveModuleUp={() => {\n              if (iModule <= 0) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule - 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n            moveModuleDown={() => {\n              if (iModule >= effect.modules.length - 1) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule + 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Effect;\n","import React from \"react\";\nimport \"./EffectsConfigurationPanel.css\";\nimport Effect from \"./Effect\";\n\nconst EffectsConfigurationPanel = (props) => {\n  const { effects, updateEffects } = props;\n\n  return (\n    <div className=\"effectsConfigurationPanel\">\n      <div\n        className=\"effectsConfigurationPanel-addDiv field\"\n        onClick={() => {\n          const newEffect = {\n            textures: [\"generic/ball.png\"],\n            modules: [],\n          };\n          const updatedEffects = [...effects];\n          updatedEffects.unshift(newEffect);\n          updateEffects(updatedEffects);\n        }}\n      >\n        <div className=\"effectsConfigurationPanel-add\"></div>\n        Add effect\n      </div>\n      <span className=\"effectsConfigurationPanel-titleEffects\"></span>\n      {effects.map((effect, iEffect) => (\n        <Effect\n          effect={effect}\n          title={`Effect ${iEffect + 1}`}\n          key={`effect${iEffect}`}\n          nKey={`effect${iEffect}`}\n          updateEffect={(updatedEffect) => {\n            const updatedEffects = [...effects];\n            updatedEffects[iEffect] = updatedEffect;\n            updateEffects(updatedEffects);\n          }}\n          removeEffect={() => {\n            const updatedEffects = [...effects];\n            updatedEffects.splice(updatedEffects.indexOf(effect), 1);\n            updateEffects(updatedEffects);\n          }}\n        />\n      ))}\n      <div className=\"effectsConfigurationPanel-footer\"></div>\n    </div>\n  );\n};\n\nexport default EffectsConfigurationPanel;\n","import React, { useState, useContext } from \"react\";\nimport \"./ProjectToolbar.css\";\nimport { globalStateContext } from \"./Editor\";\n\nconst ProjectToolbar = (props) => {\n  const { restart, saveToFile, loadFromFile, loadPreset } = props;\n\n  const { presetEffects } = useContext(globalStateContext);\n\n  const [presetsVisible, setPresetsVisible] = useState(false);\n\n  return (\n    <div className=\"projectToolbar\">\n      <div className=\"projectToolbar-gap\"></div>\n      <div className=\"projectToolBar-buttons\">\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-restart\"\n          onClick={() => restart()}\n        >\n          <span className=\"projectToolbar-button\">Restart</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-saveToFile\"\n          onClick={() => saveToFile()}\n        >\n          <span className=\"projectToolbar-button\">Save to file</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadPreset\"\n          onClick={() => {\n            setPresetsVisible(!presetsVisible);\n          }}\n        >\n          <span className=\"projectToolbar-button\">Load preset</span>\n          <div\n            className={`projectToolbar-preset-container${\n              presetsVisible ? \" projectToolbar-preset-container-visible\" : \"\"\n            }`}\n          >\n            {presetsVisible &&\n              presetEffects.map((presetEffect, i) => (\n                <div\n                  className=\"projectToolBar-preset-item\"\n                  key={`preset-${i}`}\n                  onClick={() => {\n                    loadPreset(presetEffect.data);\n                    setPresetsVisible(false);\n                  }}\n                >\n                  <div\n                    className=\"projectToolBar-preset-thumbnail\"\n                    style={{\n                      backgroundImage:\n                        presetEffect.thumbnail &&\n                        `url(presetThumbnails/${presetEffect.thumbnail})`,\n                    }}\n                  />\n                  <span className=\"projectToolBar-preset-label\">\n                    {presetEffect.label}\n                  </span>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadFromFile\"\n          onClick={() => loadFromFile()}\n        >\n          <span className=\"projectToolbar-button\">Load from file</span>\n        </div>\n      </div>\n      <div className=\"projectToolbar-gap\"></div>\n    </div>\n  );\n};\n\nexport default ProjectToolbar;\n","export class Module {\n    constructor(particleEffect) {\n        /**\n         * Modules with `active === true` will have frequent calls to `update()` method.\n         */\n        this.active = true;\n        this.particleEffect = particleEffect;\n    }\n    init() { }\n    update(dt) { }\n}\n","import { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose color alpha value is less or equal to 0\n *\n * @module\n * @category    Destructor\n */\nexport class AlphaDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.alpha <= 0) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaDestructor.moduleTypeId = \"AlphaDestructor\";\n","import { Module } from '../module.js';\n/**\n * @module\n * @category    Destructor\n */\nexport class LifeTimeDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.timeLived >= particle.lifeTime) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeDestructor.moduleTypeId = \"LifeTimeDestructor\";\n","export const loadSerializedProperty = (object, moduleType, module, key, deserializeValue, hideWarnings) => {\n    const value = object[key];\n    if (value === undefined) {\n        if (!hideWarnings)\n            console.warn(`Missing module property ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    const deserializedValue = deserializeValue(value);\n    if (deserializedValue === undefined) {\n        if (!hideWarnings)\n            console.warn(`Module property could not be deserialized ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    module[key] = deserializedValue;\n};\n/**\n * Function for satisfying types when deserializing a primitive data type.\n *\n * Examples of primitive data types:\n * - `property = 1.0`\n * - `property = 'hello'`\n * - `property = { x: 1.0, something: 'text' }`\n * - `property = [ 0.0, 1.0 ]`\n *\n * @param serializedPrimitiveDataType\n * @returns\n */\nexport const deserializePrimitiveDataType = (serializedPrimitiveDataType) => {\n    return serializedPrimitiveDataType;\n};\n","export const lerp = (x, y, a) => x * (1 - a) + y * a;\nexport const clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nexport const invlerp = (x, y, a) => clamp((a - x) / (y - x));\nexport const range = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n/**\n * Get random number between range [min, max].\n * @param min\n * @param max\n * @returns\n */\nexport const randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Collection of utilities for `{ x: number, y: number }` data structures.\n */\nexport const vec2 = {\n    /**\n     * Subtract two vectors.\n     * @param a     Vector\n     * @param b     Position\n     * @return      `{ x: a.x - b.x, y: a.y - b.x }`\n     */\n    subtract: (a, b) => {\n        return { x: a.x - b.x, y: a.y - b.y };\n    },\n    /**\n     * Multiply vector with a number.\n     * @param a     Vector\n     * @param b     Number\n     * @return      `{ x: a.x * b, y: a.y * b }`\n     */\n    multiply: (a, b) => {\n        return { x: a.x * b, y: a.y * b };\n    },\n    /**\n     * Get length of vector.\n     * @param v     Vector\n     * @return      Length of vector\n     */\n    length: (v) => {\n        return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\n    },\n    /**\n     * Get normalized vector.\n     * @param v     Vector\n     * @returns     Normalized vector (same direction but length = 1).\n     */\n    normalize: (v) => {\n        const length = vec2.length(v);\n        return length === 0 ? { x: 0, y: 0 } : { x: v.x / length, y: v.y / length };\n    },\n};\n/**\n * Interpolate between two colors.\n *\n * The color interpolation is done linearly in LAB color space.\n *\n * @param   a       Color 1.\n * @param   b       Color 2.\n * @param   factor  Ratio between colors 1 and 2 that will be used for the returned color.\n * @returns         Interpolated Color.\n */\nexport const lerpColor = (a, b, factor) => {\n    const aLab = rgbToLab(a);\n    const bLab = rgbToLab(b);\n    const lerpLab = {\n        l: lerp(aLab.l, bLab.l, factor),\n        a: lerp(aLab.a, bLab.a, factor),\n        b: lerp(aLab.b, bLab.b, factor),\n    };\n    const lerbRGB = labToRgb(lerpLab);\n    return {\n        r: lerbRGB.r,\n        g: lerbRGB.g,\n        b: lerbRGB.b,\n    };\n};\n/**\n * Function that transforms a RGB color to LAB.\n */\nconst rgbToLab = (rgb) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let r = rgb.r, g = rgb.g, b = rgb.b, x, y, z;\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    return { l: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n};\n/**\n * Function that transforms a LAB color to RGB.\n */\nconst labToRgb = (lab) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let y = (lab.l + 16) / 116, x = lab.a / 500 + y, z = y - lab.b / 200, r, g, b;\n    x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n    y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n    z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.204 + z * 1.057;\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n    return {\n        r: Math.max(0, Math.min(1, r)),\n        g: Math.max(0, Math.min(1, g)),\n        b: Math.max(0, Math.min(1, b)),\n    };\n};\n","import { vec2 } from '../utilities.js';\nexport const circleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = Math.sqrt(Math.random()) * shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const distFromCenter = vec2.length(vec2.subtract(position, shape.center));\n        return distFromCenter <= shape.radius;\n    },\n};\n","import { randomInRange } from '../utilities.js';\nexport const rectangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        return {\n            x: shape.v1.x + Math.random() * (shape.v2.x - shape.v1.x),\n            y: shape.v1.y + Math.random() * (shape.v2.y - shape.v1.y),\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const width = Math.abs(shape.v1.x - shape.v2.x);\n        const height = Math.abs(shape.v1.y - shape.v2.y);\n        const edgeLength = width * 2 + height * 2;\n        const randomEdgeLength = randomInRange(0, edgeLength);\n        // going from bottom left counter-clockwise\n        if (randomEdgeLength < height) {\n            return {\n                x: shape.v1.x,\n                y: shape.v1.y + randomEdgeLength,\n            };\n        }\n        else if (randomEdgeLength < width + height) {\n            return {\n                x: shape.v1.x + randomEdgeLength - height,\n                y: shape.v1.y + height,\n            };\n        }\n        else if (randomEdgeLength < 2 * height + width) {\n            return {\n                x: shape.v1.x + width,\n                y: shape.v1.y + randomEdgeLength - (height + width),\n            };\n        }\n        else {\n            return {\n                x: shape.v1.x + randomEdgeLength - (2 * height + width),\n                y: shape.v1.y,\n            };\n        }\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const minX = Math.min(shape.v1.x, shape.v2.x);\n        const minY = Math.min(shape.v1.y, shape.v2.y);\n        const maxX = Math.max(shape.v1.x, shape.v2.x);\n        const maxY = Math.max(shape.v1.y, shape.v2.y);\n        return position.x >= minX && position.x <= maxX && position.y >= minY && position.y <= maxY;\n    },\n};\n","export const triangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const s1 = Math.sqrt(r1);\n        return {\n            x: shape.v1.x * (1.0 - s1) + shape.v2.x * (1.0 - r2) * s1 + shape.v3.x * r2 * s1,\n            y: shape.v1.y * (1.0 - s1) + shape.v2.y * (1.0 - r2) * s1 + shape.v3.y * r2 * s1,\n        };\n        //alternative version that might be faster, something to benchmark for you\n        /*\n        const s = Math.abs(r1 - r2);\n        const t = 0.5 * (r1 + r2 - s);\n        const u = 1 - 0.5 * (s + r1 + r2);\n\n        return {\n            x: s * shape.v1.x + t * shape.v2.x + u * shape.v3.x,\n            y: s * shape.v1.y + t * shape.v2.y + u * shape.v3.y,\n        };\n        */\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        // Source: https://stackoverflow.com/a/2049593/9288063\n        const d1 = sign(position, shape.v1, shape.v2);\n        const d2 = sign(position, shape.v2, shape.v3);\n        const d3 = sign(position, shape.v3, shape.v1);\n        const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n        const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n        return !(has_neg && has_pos);\n    },\n    getRandomEdgePosition: function (shape) {\n        throw new Error(\"Function not implemented.\");\n    },\n};\n/**\n * Internal convenience function used in `containsPosition` implementation.\n *\n * Source: https://stackoverflow.com/a/2049593/9288063\n */\nconst sign = (p1, p2, p3) => {\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n};\n","import { circleLogic } from './circle.js';\nimport { rectangleLogic } from './rectangle.js';\nimport { triangleLogic } from './triangle.js';\nexport const serializeShape = (shape) => {\n    // Shapes are just primitive data types, can be serialized as they are.\n    return shape;\n};\nexport const deserializeShape = (serializedShape) => {\n    // Shapes are just primitive data types, can be deserialized as they are.\n    return serializedShape;\n};\nexport const getRandomPositionInsideShape = (shape) => {\n    return selectShapeLogic(shape).getRandomPosition(shape);\n};\nexport const getRandomPositionOnEdge = (shape) => {\n    return selectShapeLogic(shape).getRandomEdgePosition(shape);\n};\nexport const shapeContainsPosition = (shape, position) => {\n    return selectShapeLogic(shape).containsPosition(shape, position);\n};\nconst selectShapeLogic = (shape) => {\n    switch (shape.type) {\n        case \"triangle\":\n            return triangleLogic;\n        case \"rectangle\":\n            return rectangleLogic;\n        case \"circle\":\n            return circleLogic;\n    }\n};\n","import { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { deserializeShape, serializeShape, shapeContainsPosition } from '../shapes/shape.js';\nimport { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose center location is outside generic bounds.\n *\n * ```ts\n *  // Example usage\n *  const destructor = new OutsideBoundsDestructor(particleSystem);\n *  destructor.bounds = {\n *      type: \"triangle\",\n *      v1: { x: 100, y: 400 },\n *      v2: { x: 300, y: 400 },\n *      v3: { x: 200, y: 0 },\n *  };\n *  particleSystem.modules.push(destructor);\n * ```\n *\n * @module\n * @category    Destructor\n * bounds {\n *      @tooltip        TODO\n *      @type           Shape\n * }\n */\nexport class OutsideBoundsDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        if (!this.bounds) {\n            return;\n        }\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (!shapeContainsPosition(this.bounds, particle.position)) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: OutsideBoundsDestructor.moduleTypeId,\n            bounds: this.bounds && serializeShape(this.bounds),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new OutsideBoundsDestructor(particleEffect);\n        loadSerializedProperty(object, OutsideBoundsDestructor, module, \"bounds\", deserializeShape, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nOutsideBoundsDestructor.moduleTypeId = \"OutsideBoundsDestructor\";\n","export class Particle {\n    constructor() {\n        /**\n         * Unspecified unit. Depends on separate graphics implementation\n         */\n        this.position = { x: 0, y: 0 };\n        /**\n         * Unspecified units per second. Depends on separate graphics implementation\n         */\n        this.velocity = { x: 0, y: 0 };\n        /**\n         * [0, 1]\n         */\n        this.color = { r: 1, g: 1, b: 1 };\n        /**\n         * [0, 1]\n         */\n        this.alpha = 1.0;\n        /**\n         * Radians\n         */\n        this.rotation = 0;\n        /**\n         * Radians per second\n         */\n        this.rotationalVelocity = 0;\n        /**\n         * Seconds\n         */\n        this.timeLived = 0;\n        /**\n         * Seconds\n         */\n        this.lifeTime = 2;\n        this.scale = 0.1;\n        this.destroyed = false;\n        this.texture = \"\";\n    }\n}\n","import { Module } from '../module.js';\nexport class ParticleGenerator extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Interval between generated particles as milliseconds\n         * (as long as `Generator.active === true`)\n         */\n        this.interval = 0.1;\n        this._timer = 0;\n        /**\n         * List of timestamps when a batch of particles can be generated.\n         *\n         * `time` is seconds since the particle effect was created,\n         * and `count` is number of particles to generate.\n         *\n         * Optional `repeat` property can be supplied to supply a second interval which the batch is automatically repeated with afterwards.\n         */\n        this.bursts = [];\n        this._updateCounter = 0;\n    }\n    update(dt) {\n        const tPrev = this._updateCounter;\n        const tNow = this._updateCounter + dt;\n        // Trigger all bursts that are between tPrev and tNow\n        this.bursts.forEach((burst) => {\n            const burstTimestamp = burst.repeat === undefined || burst.repeat <= 0 || burst.time > tPrev\n                ? burst.time\n                : burst.time + burst.repeat * Math.ceil((tPrev - burst.time) / burst.repeat);\n            if (burstTimestamp >= tPrev && burstTimestamp <= tNow) {\n                for (let i = 0; i < burst.count; i += 1) {\n                    this.generateParticle();\n                }\n            }\n        });\n        this._updateCounter = tNow;\n        if (this.interval <= 0) {\n            return;\n        }\n        this._timer += dt;\n        while (this._timer >= this.interval) {\n            this._timer -= this.interval;\n            this.generateParticle();\n        }\n    }\n}\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\n/**\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * position {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n */\nexport class PointGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.position = { x: 0, y: 0 };\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.position.x;\n        particle.position.y = this.position.y;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: PointGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            position: this.position,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new PointGenerator(particleEffect);\n        loadSerializedProperty(object, PointGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"position\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nPointGenerator.moduleTypeId = \"PointGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module which overrides `Particle.color.a` property from a configurable random value range.\n *\n * Range can be configured with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   1\n * }\n */\nexport class AlphaRange extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.min = 0;\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.max = 1;\n        this.handleParticleAdd = (particle) => {\n            particle.alpha = randomInRange(this.min, this.max);\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaRange(particleEffect);\n        loadSerializedProperty(object, AlphaRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, AlphaRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaRange.moduleTypeId = \"AlphaRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   1.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   5.0\n * }\n */\nexport class LifeTimeRange extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 1.5;\n        this.max = 2.5;\n        this.handleParticleAdd = (particle) => {\n            particle.lifeTime = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeRange(particleEffect);\n        loadSerializedProperty(object, LifeTimeRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, LifeTimeRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeRange.moduleTypeId = \"LifeTimeRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random velocity to each particle along a random direction.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class RandomAngleVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Minimum velocity\n         */\n        this.min = 0;\n        /**\n         * Maximum velocity\n         */\n        this.max = 100;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = Math.random() * 2 * Math.PI;\n            const velocity = randomInRange(this.min, this.max);\n            particle.velocity.x = Math.cos(angleRad) * velocity;\n            particle.velocity.y = Math.sin(angleRad) * velocity;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomAngleVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomAngleVelocity(particleEffect);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomAngleVelocity.moduleTypeId = \"RandomAngleVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns a random scale to each particle upon its creation.\n *\n * Scale range can be customized with properties: `min` and `max`.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   0.5\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   1.5\n * }\n */\nexport class RandomScale extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 0.5;\n        this.max = 1.5;\n        this.handleParticleAdd = (particle) => {\n            particle.scale = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomScale.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomScale(particleEffect);\n        loadSerializedProperty(object, RandomScale, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomScale, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomScale.moduleTypeId = \"RandomScale\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerpColor } from '../utilities.js';\n/**\n * Module that assigns each particle a random color.\n *\n * Color range can be customized to some degree using `palette` property.\n *\n * It is a array of Colors. Any interpolated step between the colors in this array can be assigned to particles.\n * For example, the following configuration results in particles varying from Red to Green colors:\n *\n * ```ts\n *  const color = new RandomColor(effect)\n *  color.palette = [\n *      { r: 1, g: 0, b: 0 },\n *      { r: 0, g: 1, b: 0 }\n *  ]\n * ```\n *\n * Color interpolation can be disabled by setting `interpolate` to `false`.\n *\n * @module\n * @category    Initializer\n * palette {\n *      @tooltip        TODO\n *      @type           Color[]\n *      @defaultValue   [{ \"r\": 1, \"g\": 0, \"b\": 0 }, { \"r\": 0, \"g\": 1, \"b\": 0 }, { \"r\": 0, \"g\": 0, \"b\": 1 }]\n * }\n * interpolate {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   true\n * }\n */\nexport class RandomColor extends Module {\n    constructor() {\n        super(...arguments);\n        this.palette = [\n            { r: 1, g: 0, b: 0 },\n            { r: 0, g: 1, b: 0 },\n            { r: 0, g: 0, b: 1 },\n        ];\n        this.interpolate = true;\n        this.handleParticleAdd = (particle) => {\n            if (this.interpolate && this.palette.length >= 2) {\n                const randomPalettePosition = Math.random() * (this.palette.length - 1);\n                const iPaletteStart = Math.floor(randomPalettePosition);\n                const colorA = this.palette[iPaletteStart];\n                const colorB = this.palette[iPaletteStart + 1];\n                particle.color = lerpColor(colorA, colorB, randomPalettePosition - iPaletteStart);\n            }\n            else if (this.palette.length >= 1) {\n                particle.color = this.palette[Math.round(Math.random() * (this.palette.length - 1))];\n            }\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomColor.moduleTypeId,\n            palette: this.palette,\n            interpolate: this.interpolate,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomColor(particleEffect);\n        loadSerializedProperty(object, RandomColor, module, \"palette\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomColor, module, \"interpolate\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomColor.moduleTypeId = \"RandomColor\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns each particle random _rotational velocity_.\n * This causes the particle to continuously rotate with a static speed along its lifetime.\n *\n * Rotational velocity range can be customized with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   -5.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   5.0\n * }\n */\nexport class RandomRotationalVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotational velocity as **Radians per second**\n         */\n        this.min = -2 * Math.PI;\n        /**\n         * Max rotational velocity as **Radians per second**\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            particle.rotationalVelocity = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotationalVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotationalVelocity(particleEffect);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotationalVelocity.moduleTypeId = \"RandomRotationalVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * randomX {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n * randomY {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n */\nexport class RandomVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        this.randomX = { min: -100, max: 100 };\n        this.randomY = { min: -100, max: 100 };\n        this.handleParticleAdd = (particle) => {\n            particle.velocity.x = lerp(this.randomX.min, this.randomX.max, Math.random());\n            particle.velocity.y = lerp(this.randomY.min, this.randomY.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomVelocity.moduleTypeId,\n            randomX: this.randomX,\n            randomY: this.randomY,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomVelocity(particleEffect);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomX\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomY\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomVelocity.moduleTypeId = \"RandomVelocity\";\n","// Easing functions for animations\n// See https://easings.net/#\n/**\n * Collection of all implemented _Easing functions_.\n */\nexport const EasingFunctions = {\n    /**\n     * @easingFunction\n     */\n    linear: ((x) => {\n        return x;\n    }),\n    /**\n     * https://easings.net/#easeOutSine\n     *\n     * @easingFunction\n     */\n    easeOutSine: ((x) => {\n        return Math.sin((x * Math.PI) / 2);\n    }),\n    /**\n     * https://easings.net/#easeOutCubic\n     *\n     * @easingFunction\n     */\n    easeOutCubic: ((x) => {\n        return 1 - Math.pow(1 - x, 3);\n    }),\n    /**\n     * https://easings.net/#easeOutExpo\n     *\n     * @easingFunction\n     */\n    easeOutExpo: ((x) => {\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n    }),\n    /**\n     * https://easings.net/#easeOutCirc\n     *\n     * @easingFunction\n     */\n    easeOutCirc: ((x) => {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }),\n    /**\n     * https://easings.net/#easeOutBack\n     *\n     * @easingFunction\n     */\n    easeOutBack: ((x) => {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    }),\n    /**\n     * https://easings.net/#easeOutElastic\n     *\n     * @easingFunction\n     */\n    easeOutElastic: ((x) => {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    }),\n};\n/**\n * Serialize easing function to a primitive data type that can be later deserialized.\n */\nexport const serializeEasing = (easingFunction) => {\n    const entry = Object.entries(EasingFunctions).find((entry) => entry[1] === easingFunction);\n    if (!entry) {\n        throw new Error(`serializeEasing supplied value is not an EasingFunction`);\n    }\n    // Return key in EasingFunctions. For example \"linear\", \"easeOutElastic\", etc.\n    return entry[0];\n};\n/**\n * Deserialize an easing function that was serialized using `serializeEasing`.\n */\nexport const deserializeEasing = (serializedEasing) => {\n    if (typeof serializedEasing !== \"string\")\n        return undefined;\n    const easingFunction = Object.entries(EasingFunctions).find((entry) => entry[0] === serializedEasing);\n    return easingFunction ? easingFunction[1] : undefined;\n};\n","import { deserializeEasing, EasingFunctions, serializeEasing } from '../easing.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { clamp } from '../utilities.js';\nimport { Module } from '../module.js';\n/**\n * Module that decays particles alpha over their lifetime.\n *\n * Alpha animation can be customized with `easing` property.\n *\n * This module modifies `Particle.alpha` property and can not be combined with any other modifier that does so.\n * It can however be combined with modules that alter the alpha during initialization, but these modules must be defined before `AlphaOverLifetime`!\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class AlphaOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of alpha.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._alphaOverLifetime_initialAlpha = particle.alpha;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            const initialAlpha = particle._alphaOverLifetime_initialAlpha;\n            const alpha = initialAlpha - initialAlpha * this.easing(clamp(particle.timeLived / particle.lifeTime, 0, 1));\n            particle.alpha = alpha;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaOverLifetime.moduleTypeId,\n            easing: serializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaOverLifetime(particleEffect);\n        loadSerializedProperty(object, AlphaOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaOverLifetime.moduleTypeId = \"AlphaOverLifetime\";\n","import { EasingFunctions, deserializeEasing } from '../easing.js';\nimport { Module } from '../module.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { vec2 } from '../utilities.js';\n/**\n * Module that deaccelerates particle velocity over its lifetime.\n *\n * The direction of the deacceleration is based on the initial velocity of each particle.\n * For this reason, you should ensure that the module that initializes particle velocity is listed BEFORE this module!\n *\n * Deacceleration animation can be customized with `easing` property.\n *\n * This module modifies `Particle.velocity` property, but does not reassign it so this can be combined with other modules which affect particle velocity.\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class DeaccelerationOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of velocity.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._velocityOverLifetime_initialVelocity = {\n                x: particle.velocity.x,\n                y: particle.velocity.y,\n            };\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            // NOTE: Velocity difference for each frame is calculated to avoid completely reassigning particle velocity.\n            // This is great because it allows combining deacceleration module with other velocity affecting modules.\n            const xPrev = (particle.timeLived - dt) / particle.lifeTime;\n            const xNow = particle.timeLived / particle.lifeTime;\n            const animationPrev = this.easing(xPrev);\n            const animationNow = this.easing(xNow);\n            const initialVelocity = particle._velocityOverLifetime_initialVelocity;\n            const deacceleration = vec2.multiply(initialVelocity, animationNow - animationPrev);\n            particle.velocity.x -= deacceleration.x;\n            particle.velocity.y -= deacceleration.y;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: DeaccelerationOverLifetime.moduleTypeId,\n            easing: deserializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new DeaccelerationOverLifetime(particleEffect);\n        loadSerializedProperty(object, DeaccelerationOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nDeaccelerationOverLifetime.moduleTypeId = \"DeaccelerationOverLifetime\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class Gravity extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n    }\n    update(dt) {\n        // pull particles down at a constant speed depending on configured strength.\n        this.particleEffect.particles.forEach((particle) => {\n            particle.velocity.y += this.strength * dt;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: Gravity.moduleTypeId,\n            strength: this.strength,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new Gravity(particleEffect);\n        loadSerializedProperty(object, Gravity, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravity.moduleTypeId = \"Gravity\";\n","import { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * Generator module that creates particles along the exterior of a circular area.\n *\n * Each particle is generated next to each other, so that when particles are regularly generated they move around the circle.\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * radius {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   50\n * }\n * nextParticleAngle {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   0\n * }\n * angleStep {\n *      @tooltip        Radians\n *      @type           Number\n *      @defaultValue   0.5\n * }\n */\nexport class CircleLoadingGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n        /**\n         * The angle at which the next particle will be generated at.\n         *\n         * Unit is in _radians_.\n         */\n        this.nextParticleAngle = 0;\n        /**\n         * The angle that is incremented between each generated particle.\n         *\n         * Unit is in _radians_.\n         */\n        this.angleStep = 0.5;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.center.x + Math.cos(this.nextParticleAngle) * this.radius;\n        particle.position.y = this.center.y + Math.sin(this.nextParticleAngle) * this.radius;\n        this.nextParticleAngle += this.angleStep;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleLoadingGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            center: this.center,\n            radius: this.radius,\n            nextParticleAngle: this.nextParticleAngle,\n            angleStep: this.angleStep,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleLoadingGenerator(particleEffect);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"radius\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"nextParticleAngle\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"angleStep\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleLoadingGenerator.moduleTypeId = \"CircleLoadingGenerator\";\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { deserializeShape, getRandomPositionInsideShape, getRandomPositionOnEdge, serializeShape, } from '../shapes/shape.js';\n/**\n * Module that can be used to generate particles with an initial position inside a generic _Shape_.\n *\n * Shape is assigned via `ShapeGenerator.shape` property, for example:\n *\n * ```ts\n *  const generator = new ShapeGenerator(particleEffect)\n *  generator.shape = {\n *      type: 'rectangle',\n *      v1: { x: 100, y: 100 },\n *      v2: { x: 300, y: 500 }\n *  }\n * ```\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * shape {\n *      @tooltip        TODO\n *      @type           Shape\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * edgesOnly {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   false\n * }\n */\nexport class ShapeGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.edgesOnly = false;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        if (this.shape) {\n            if (this.edgesOnly) {\n                particle.position = getRandomPositionOnEdge(this.shape);\n            }\n            else {\n                particle.position = getRandomPositionInsideShape(this.shape);\n            }\n        }\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: ShapeGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            shape: this.shape ? serializeShape(this.shape) : undefined,\n            edgesOnly: this.edgesOnly,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new ShapeGenerator(particleEffect);\n        loadSerializedProperty(object, ShapeGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"shape\", deserializeShape, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"edgesOnly\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nShapeGenerator.moduleTypeId = \"ShapeGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { clamp, lerp, vec2 } from '../utilities.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * minPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   0.2\n * }\n * maxPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   1.0\n * }\n * minPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   500\n * }\n * maxPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   100\n * }\n */\nexport class GravityWithCenter extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n        /**\n         * Center of gravity. Pulls particles towards that location with varying strength\n         * based on how close the particle is to the location (closer = stronger pull).\n         * The pull strength can be further configured with properties: `maxPullStrengthDistance`, `maxPullStrengthMultiplier`, `minPullStrengthDistance` and `minPullStrengthMultiplier`\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `maxPullStrengthMultiplier`\n         */\n        this.maxPullStrengthDistance = 100;\n        /**\n         * `strength` multiplier that is used when particle is `maxPullStrengthDistance` away from `center`.\n         */\n        this.maxPullStrengthMultiplier = 1;\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `minPullStrengthMultiplier`\n         */\n        this.minPullStrengthDistance = 500;\n        /**\n         * `strength` multiplier that is used when particle is `minPullStrengthDistance` away from `center`.\n         */\n        this.minPullStrengthMultiplier = 0.25;\n    }\n    update(dt) {\n        const center = this.center;\n        // Pull particles towards the gravity center, with varying strength based on how close the particles are to the location (closer = stronger pull)\n        this.particleEffect.particles.forEach((particle) => {\n            const toCenter = vec2.subtract(center, particle.position);\n            const particleDistance = vec2.length(toCenter);\n            const pullStrengthMultiplier = lerp(this.minPullStrengthMultiplier, this.maxPullStrengthMultiplier, clamp((particleDistance - this.minPullStrengthDistance) /\n                (this.maxPullStrengthDistance - this.minPullStrengthDistance), 0, 1));\n            const pullStrength = dt * this.strength * pullStrengthMultiplier;\n            const pullDirection = vec2.normalize(toCenter);\n            particle.velocity.x += pullDirection.x * pullStrength;\n            particle.velocity.y += pullDirection.y * pullStrength;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: GravityWithCenter.moduleTypeId,\n            strength: this.strength,\n            center: this.center,\n            maxPullStrengthDistance: this.maxPullStrengthDistance,\n            maxPullStrengthMultiplier: this.maxPullStrengthMultiplier,\n            minPullStrengthDistance: this.minPullStrengthDistance,\n            minPullStrengthMultiplier: this.minPullStrengthMultiplier,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new GravityWithCenter(particleEffect);\n        loadSerializedProperty(object, GravityWithCenter, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravityWithCenter.moduleTypeId = \"GravityWithCenter\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random initial rotation to each particle.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   6.2832\n * }\n */\nexport class RandomRotation extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotation as radians.\n         */\n        this.min = 0;\n        /**\n         * Max rotation as radians.\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = randomInRange(this.min, this.max);\n            particle.rotation = angleRad;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotation.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotation(particleEffect);\n        loadSerializedProperty(object, RandomRotation, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotation, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotation.moduleTypeId = \"RandomRotation\";\n","import { AlphaDestructor } from '../destructors/alphaDestructor.js';\nimport { LifeTimeDestructor } from '../destructors/lifeTimeDestructor.js';\nimport { OutsideBoundsDestructor } from '../destructors/outsideBoundsDestructor.js';\nimport { PointGenerator } from '../generators/pointGenerator.js';\nimport { AlphaRange } from '../initializers/alphaRange.js';\nimport { LifeTimeRange } from '../initializers/lifeTimeRange.js';\nimport { RandomAngleVelocity } from '../initializers/randomAngleVelocity.js';\nimport { RandomScale } from '../initializers/randomScale.js';\nimport { RandomColor } from '../initializers/randomColor.js';\nimport { RandomRotationalVelocity } from '../initializers/randomRotationalVelocity.js';\nimport { RandomVelocity } from '../initializers/randomVelocity.js';\nimport { AlphaOverLifetime } from '../modifiers/alphaOverLifetime.js';\nimport { DeaccelerationOverLifetime } from '../modifiers/deaccelerationOverLifetime.js';\nimport { Gravity } from '../modifiers/gravity.js';\nimport { CircleLoadingGenerator } from '../generators/circleLoadingGenerator.js';\nimport { ShapeGenerator } from '../generators/shapeGenerator.js';\nimport { GravityWithCenter } from '../modifiers/gravityWithCenter.js';\nimport { RandomRotation } from '../initializers/randomRotation.js';\n/**\n * This list should contain all Modules in the library.\n *\n * It is required for deserializing Modules from JS objects.\n */\nexport const moduleTypeRegistry = [\n    AlphaDestructor,\n    LifeTimeDestructor,\n    OutsideBoundsDestructor,\n    PointGenerator,\n    AlphaRange,\n    LifeTimeRange,\n    RandomAngleVelocity,\n    RandomVelocity,\n    AlphaOverLifetime,\n    DeaccelerationOverLifetime,\n    Gravity,\n    RandomScale,\n    RandomColor,\n    RandomRotationalVelocity,\n    CircleLoadingGenerator,\n    ShapeGenerator,\n    GravityWithCenter,\n    RandomRotation,\n];\n","export class ParticleEffect {\n    /**\n     * **NOTE: ParticleEffects should be created with `ParticleSystem.addParticleEffect()` instead of using the constructor directly**\n     */\n    constructor(particleSystem) {\n        this.modules = [];\n        this.particles = [];\n        this.isInitialized = false;\n        /**\n         * List of texture names that are randomly assigned to particles of this effect.\n         */\n        this.textures = [];\n        this.addParticleListeners = [];\n        this.destroyParticleListeners = [];\n        this.particleSystem = particleSystem;\n    }\n    init() {\n        this.modules.forEach((module) => {\n            module.init();\n        });\n    }\n    update(dt) {\n        const len = this.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particles[i];\n            particle.timeLived += dt;\n            particle.position.x += particle.velocity.x * dt;\n            particle.position.y += particle.velocity.y * dt;\n            particle.rotation += particle.rotationalVelocity * dt;\n        }\n        this.modules.forEach((module) => {\n            if (module.active) {\n                module.update(dt);\n            }\n        });\n        // Remove destroyed particles\n        for (let i = 0; i < this.particles.length; i += 1) {\n            const particle = this.particles[i];\n            if (particle.destroyed) {\n                this.particles.splice(i, 1);\n                i -= 1;\n            }\n        }\n    }\n    addParticle(particle) {\n        this.particles.push(particle);\n        if (this.textures.length > 0) {\n            // Assign particle texture.\n            particle.texture = this.textures[Math.round(Math.random() * (this.textures.length - 1))];\n        }\n        this.addParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    /**\n     * Destroy a particle, removing it from further updates.\n     *\n     * This can be safely called while iterating over `particles`, the array is not modified immediately.\n     */\n    destroyParticle(particle) {\n        // Modifying particle arrays can be heavy, better mark particles that should be removed and modify array just once during update.\n        particle.destroyed = true;\n        this.destroyParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n}\n","import { moduleTypeRegistry } from \"./serialization/moduleRegistry\";\nimport { ParticleEffect } from \"./particleEffect\";\nexport class ParticleSystem {\n    constructor() {\n        this.effects = [];\n        this.addParticleEffectListeners = [];\n        this.removeParticleEffectListeners = [];\n    }\n    update(dt) {\n        this.effects.forEach((effect) => {\n            if (!effect.isInitialized) {\n                effect.init();\n                effect.isInitialized = true;\n            }\n            effect.update(dt);\n        });\n    }\n    addParticleEffect() {\n        const particleEffect = new ParticleEffect(this);\n        this.effects.push(particleEffect);\n        this.addParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        return particleEffect;\n    }\n    removeParticleEffect(particleEffect) {\n        const i = this.effects.indexOf(particleEffect);\n        if (i <= 0) {\n            this.effects.splice(i, 1);\n            this.removeParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        }\n    }\n    /**\n     * Wrap the properties of the whole particle system into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            effects: this.effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules.map((module) => module.toObject()),\n            })),\n        };\n    }\n    static fromObject(object, options) {\n        const hideWarnings = (options === null || options === void 0 ? void 0 : options.hideWarnings) || false;\n        const particleSystem = new ParticleSystem();\n        const effectObjects = object.effects;\n        effectObjects.forEach((effectObject) => {\n            var _a;\n            const effect = particleSystem.addParticleEffect();\n            effect.textures = effectObject.textures;\n            (_a = effectObject.modules) === null || _a === void 0 ? void 0 : _a.forEach((moduleObject) => {\n                const moduleTypeReference = moduleTypeRegistry.find((moduleType) => moduleType.moduleTypeId === moduleObject.moduleTypeId);\n                if (!moduleTypeReference) {\n                    // The module type can't be identified. This probably means that the particle system was saved with a different library version than the active one.\n                    if (!hideWarnings)\n                        console.warn(`ParticleSystem.fromObject unidentified module type: \"${moduleObject.moduleTypeId}\"`);\n                    return;\n                }\n                const module = moduleTypeReference.fromObject(effect, moduleObject, hideWarnings);\n                effect.modules.push(module);\n            });\n        });\n        return particleSystem;\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./ParticleSandbox.css\";\nimport * as PIXI from \"pixi.js\";\nimport { ParticleSystem } from \"modular-particle-system/particleSystem\";\n\nconst ParticleSandbox = (props) => {\n  const { effects } = props;\n\n  const [renderer, setRenderer] = useState(undefined);\n\n  const [visibleParticlesCount, setVisibleParticlesCount] = useState(0);\n\n  const [runTime, setRunTime] = useState(0);\n\n  useEffect(() => {\n    const container = document.getElementById(\"particleSandbox\");\n    const app = new PIXI.Application({\n      resizeTo: container,\n      backgroundAlpha: 0,\n    });\n    container.appendChild(app.view);\n    app.view.height = container.clientHeight;\n    // #region PIXI Renderer\n\n    const unusedSprites = [];\n    const activeSprites = new Map();\n    const registerParticleEffect = (particleEffect, effectInfo) => {\n      particleEffect.addParticleListeners.push((particle) =>\n        handleParticleAdd(effectInfo, particle)\n      );\n      particleEffect.destroyParticleListeners.push((particle) =>\n        handleParticleDestroy(particle)\n      );\n    };\n    const handleParticleAdd = (effectInfo, particle) => {\n      // Get sprite for rendering particle.\n      let sprite = unusedSprites.pop();\n      if (!sprite) {\n        // No sprites, make a new one.\n        sprite = new PIXI.Sprite();\n        sprite.blendMode = PIXI.BLEND_MODES.ADD;\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        app.stage.addChild(sprite);\n      }\n      // Prepare sprite for rendering.\n      sprite.visible = true;\n\n      // Save the relation between the particle and sprite.\n      activeSprites.set(particle, sprite);\n    };\n    const handleParticleDestroy = (particle) => {\n      // Get sprite that is used to render the destroyed particle.\n      const sprite = activeSprites.get(particle);\n      if (sprite) {\n        // Remove sprite from rendering.\n        sprite.visible = false;\n        // Remove sprite and particle from list of active sprites.\n        activeSprites.delete(particle);\n        // Add sprite to list of unused sprites.\n        unusedSprites.push(sprite);\n      }\n    };\n    const updateRendering = () => {\n      const width = app.view.width;\n      const height = app.view.height;\n      const center = { x: width / 2, y: height / 2 };\n\n      activeSprites.forEach((sprite, particle) => {\n        sprite.x = center.x + particle.position.x;\n        sprite.y = center.y + particle.position.y;\n        sprite.scale.x = particle.scale;\n        sprite.scale.y = particle.scale;\n        sprite.alpha = particle.alpha;\n        sprite.tint = PIXI.utils.rgb2hex([\n          particle.color.r,\n          particle.color.g,\n          particle.color.b,\n        ]);\n        sprite.rotation = particle.rotation;\n        sprite.texture = PIXI.utils.TextureCache[particle.texture];\n      });\n    };\n    const reset = () => {\n      const allParticles = Array.from(activeSprites.keys());\n      allParticles.forEach(handleParticleDestroy);\n    };\n    // #endregion\n\n    setRenderer({ app, registerParticleEffect, updateRendering, reset });\n\n    return () => {\n      app.destroy(true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!renderer) {\n      return;\n    }\n    const { app, updateRendering, registerParticleEffect, reset } = renderer;\n\n    reset();\n\n    const particleSystem = ParticleSystem.fromObject(\n      {\n        effects,\n      },\n      { hideWarnings: true }\n    );\n    const particleEffects = particleSystem.effects;\n\n    particleEffects.forEach((particleEffect, i) =>\n      registerParticleEffect(particleEffect, effects[i])\n    );\n\n    let runTimeCounter = 0;\n    const update = () => {\n      const dt = app.ticker.elapsedMS / 1000;\n      runTimeCounter += dt;\n      setRunTime(runTimeCounter);\n      particleSystem.update(dt);\n      updateRendering();\n\n      const particlesCount = particleEffects.reduce(\n        (prev, cur) => prev + cur.particles.length,\n        0\n      );\n      setVisibleParticlesCount(particlesCount);\n    };\n    app.ticker?.add(update);\n\n    return () => {\n      app.ticker?.remove(update);\n    };\n  }, [effects, renderer]);\n\n  return (\n    <div className=\"particleSandbox\">\n      <div className=\"particleSandbox-gridColumns\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridColumn\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-gridRows\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridRow\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-canvas\" id=\"particleSandbox\"></div>\n      <div className={`particleSandbox-stats`}>\n        <span>{`Run time ${runTime.toFixed(2)}`}</span>\n        <span>{`Particles ${visibleParticlesCount}`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ParticleSandbox;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport EffectsConfigurationPanel from \"./EffectsConfigurationPanel/EffectsConfigurationPanel\";\nimport ProjectToolbar from \"./ProjectToolbar\";\nimport ParticleSandbox from \"./ParticleSandbox\";\nimport \"./Editor.css\";\nimport * as PIXI from \"pixi.js\";\nimport { downloadObject } from \"../other/utils\";\n\nconst globalState = {\n  particleModules: [],\n  easingFunctions: [],\n  /**\n   * Object where key = name of sprite and value = PIXI.js Texture\n   */\n  availableTextures: {},\n  presetEffects: [],\n};\nexport const globalStateContext = createContext(globalState);\n\nconst Editor = (props) => {\n  const [effects, setEffects] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const { particleModules } = useContext(globalStateContext);\n\n  useEffect(() => {\n    // Load config files.\n    const promiseCoreLibraryConfig = fetch(\"config.modularParticleSystem.json\")\n      .then((r) => r.json())\n      .then((coreLibraryConfig) => {\n        console.log(\"loaded core library config\");\n        const { particleModules, easingFunctions } = coreLibraryConfig;\n        globalState.particleModules = particleModules;\n        globalState.easingFunctions = easingFunctions;\n\n        setEffects(\n          defaultParticleSystemConf.map((effect) =>\n            loadParticleEffectDefaults(effect, particleModules)\n          )\n        );\n      });\n\n    const promiseSpriteSheets = fetch(\"config.spritesheets.json\")\n      .then((r) => r.json())\n      .then((spriteSheetNames) => {\n        console.log(\"loaded spritesheet names\");\n        const loader = PIXI.Loader.shared;\n        if (!loader.resources.spritesheet) {\n          spriteSheetNames.forEach((name) => {\n            loader.add(name, `sprites/${name}`);\n          });\n          loader.load();\n\n          return new Promise((resolve) => {\n            loader.onComplete.once((_, resources) => {\n              console.log(\"loaded spritesheets\");\n              const availableTexturesList = Object.values(resources).map(\n                (resource) => resource.textures\n              );\n              const availableTextures = availableTexturesList.reduce(\n                (prev, cur) => ({ ...prev, ...cur }),\n                {}\n              );\n\n              globalState.availableTextures = availableTextures;\n\n              resolve();\n            });\n          });\n        }\n      });\n\n    const promisePresetEffects = fetch(\"config.presetParticleEffects.json\")\n      .then((r) => r.json())\n      .then((presetEffects) => {\n        console.log(\"loaded preset effects\");\n        globalState.presetEffects = presetEffects;\n      });\n\n    Promise.all([\n      promiseCoreLibraryConfig,\n      promiseSpriteSheets,\n      promisePresetEffects,\n    ]).then((_) => {\n      setLoading(false);\n    });\n  }, []);\n\n  const refLoadFileInput = useRef(null);\n\n  return loading ? (\n    <div className=\"editor-loading\">Loading...</div>\n  ) : (\n    <globalStateContext.Provider value={globalState}>\n      <div className=\"editor\">\n        <ProjectToolbar\n          restart={() => {\n            setEffects([...effects]);\n          }}\n          saveToFile={() => {\n            const particleSystemObject = {\n              effects: effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules,\n              })),\n            };\n            downloadObject(particleSystemObject, \"particleSystem.json\");\n          }}\n          loadPreset={(particleSystemData) => {\n            setEffects(particleSystemData.effects);\n          }}\n          loadFromFile={() => {\n            const fileInput = refLoadFileInput.current;\n            if (!fileInput) return;\n            fileInput.click();\n          }}\n        />\n        <div className=\"editor-workspace\">\n          <ParticleSandbox effects={effects} />\n          <EffectsConfigurationPanel\n            effects={effects}\n            updateEffects={(updatedEffects) => {\n              updatedEffects = updatedEffects.map((effect) =>\n                loadParticleEffectDefaults(effect, particleModules)\n              );\n              setEffects(updatedEffects);\n            }}\n          />\n        </div>\n      </div>\n      <input\n        className=\"editor-fileInput\"\n        type={\"file\"}\n        ref={refLoadFileInput}\n        accept={\".json\"}\n        onChange={async (e) => {\n          try {\n            const file = e.target.files[0];\n            const loadedParticleSystem = await new Response(file).json();\n            setEffects(loadedParticleSystem.effects);\n          } catch (e) {\n            alert(`Unexpected error while loading file.\\n${e.message}`);\n          }\n        }}\n      />\n    </globalStateContext.Provider>\n  );\n};\n\nconst defaultParticleSystemConf = [\n  {\n    textures: [\"generic/ball.png\"],\n    modules: [\n      {\n        moduleTypeId: \"PointGenerator\",\n      },\n      {\n        moduleTypeId: \"RandomAngleVelocity\",\n        min: 50,\n        max: 100,\n      },\n      {\n        moduleTypeId: \"RandomScale\",\n        min: 0.5,\n        max: 0.8,\n      },\n      {\n        moduleTypeId: \"RandomColor\",\n      },\n      {\n        moduleTypeId: \"LifeTimeRange\",\n      },\n      {\n        moduleTypeId: \"AlphaOverLifetime\",\n      },\n      {\n        moduleTypeId: \"LifeTimeDestructor\",\n      },\n    ],\n  },\n];\n\nconst loadParticleEffectDefaults = (effect, particleModulesInfo) => {\n  // Assign any missing properties to their defaultValue\n  // Show warning for any missing defaultValues\n\n  const effectResult = { textures: effect.textures, modules: [] };\n  effect.modules.forEach((module) => {\n    const moduleResult = { ...module };\n    const moduleInfo = particleModulesInfo.find(\n      (info) => info.moduleTypeId === module.moduleTypeId\n    );\n    Object.entries(moduleInfo.properties).forEach(\n      ([propertyKey, propertyInfo]) => {\n        const curValue = moduleResult[propertyKey];\n        if (curValue !== undefined) return;\n        if (!(\"defaultValue\" in propertyInfo)) {\n          console.warn(\n            `Missing property @defaultValue ${module.moduleTypeId}: ${propertyKey}`\n          );\n          return;\n        }\n\n        let defaultValue = propertyInfo.defaultValue;\n        // defaultValue info is always parsed as strings\n        // Casting to the proper JS data type is important here so that \"save to file\" works correctly.\n\n        if (propertyInfo.type === \"Number\") {\n          try {\n            defaultValue = Number(defaultValue);\n          } catch (e) {\n            console.error(`Number defaultValue parsing error ${defaultValue}`);\n          }\n        } else if (propertyInfo.type === \"Boolean\") {\n          defaultValue = defaultValue.toLowerCase() === \"true\" ? true : false;\n        } else if (propertyInfo.type === \"EasingFunction\") {\n          // Load default value as string\n          if (typeof defaultValue !== \"string\")\n            throw new Error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n        } else if (\n          propertyInfo.type === \"Range\" ||\n          propertyInfo.type === \"Burst[]\" ||\n          propertyInfo.type === \"Position\" ||\n          propertyInfo.type === \"Color[]\"\n        ) {\n          try {\n            defaultValue = JSON.parse(defaultValue);\n          } catch (e) {\n            console.error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n          }\n        } else {\n          throw new Error(`Unhandled defaultValue type: ${propertyInfo.type}`);\n        }\n\n        moduleResult[propertyKey] = defaultValue;\n      }\n    );\n    effectResult.modules.push(moduleResult);\n  });\n  return effectResult;\n};\n\nexport default Editor;\n","export const downloadObject = (obj, filename) => {\n  var blob = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  var url = URL.createObjectURL(blob);\n  var elem = document.createElement(\"a\");\n  elem.href = url;\n  elem.download = filename;\n  document.body.appendChild(elem);\n  elem.click();\n  document.body.removeChild(elem);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/Editor\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}