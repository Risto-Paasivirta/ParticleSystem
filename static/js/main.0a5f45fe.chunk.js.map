{"version":3,"sources":["components/EffectsConfigurationPanel/ModuleProperty/NumberProperty.js","components/EffectsConfigurationPanel/ModuleProperty/PositionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/RangeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ColorPaletteProperty.js","components/EffectsConfigurationPanel/ModuleProperty/EasingFunctionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ShapeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BurstListProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BooleanProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ModuleProperty.js","components/EffectsConfigurationPanel/Module.js","components/EffectsConfigurationPanel/TextureSelector.js","components/EffectsConfigurationPanel/Effect.js","components/EffectsConfigurationPanel/EffectsConfigurationPanel.js","components/ProjectToolbar.js","../../modular-particle-system/release/module.js","../../modular-particle-system/release/destructors/alphaDestructor.js","../../modular-particle-system/release/destructors/lifeTimeDestructor.js","../../modular-particle-system/release/serialization/moduleSerialization.js","../../modular-particle-system/release/utilities.js","../../modular-particle-system/release/shapes/circle.js","../../modular-particle-system/release/shapes/rectangle.js","../../modular-particle-system/release/shapes/triangle.js","../../modular-particle-system/release/shapes/shape.js","../../modular-particle-system/release/destructors/outsideBoundsDestructor.js","../../modular-particle-system/release/particle.js","../../modular-particle-system/release/generators/generator.js","../../modular-particle-system/release/generators/pointGenerator.js","../../modular-particle-system/release/initializers/alphaRange.js","../../modular-particle-system/release/initializers/lifeTimeRange.js","../../modular-particle-system/release/initializers/randomAngleVelocity.js","../../modular-particle-system/release/initializers/randomScale.js","../../modular-particle-system/release/initializers/randomColor.js","../../modular-particle-system/release/initializers/randomRotationalVelocity.js","../../modular-particle-system/release/initializers/randomVelocity.js","../../modular-particle-system/release/easing.js","../../modular-particle-system/release/modifiers/alphaOverLifetime.js","../../modular-particle-system/release/modifiers/deaccelerationOverLifetime.js","../../modular-particle-system/release/modifiers/gravity.js","../../modular-particle-system/release/generators/circleLoadingGenerator.js","../../modular-particle-system/release/generators/shapeGenerator.js","../../modular-particle-system/release/modifiers/gravityWithCenter.js","../../modular-particle-system/release/initializers/randomRotation.js","../../modular-particle-system/release/serialization/moduleRegistry.js","../../modular-particle-system/release/particleEffect.js","../../modular-particle-system/release/particleSystem.js","components/ParticleSandbox.js","components/Editor.js","other/utils.js","reportWebVitals.js","index.js"],"names":["NumberProperty","props","value","name","propertyInfo","onChange","tooltip","min","max","step","className","title","type","e","newValue","Number","target","console","warn","PositionProperty","x","y","RangeProperty","ColorPaletteProperty","within256range","num","length","map","color","i","r","newPropertyValue","g","b","onClick","splice","EasingFunctionProperty","easingFunctions","useContext","globalStateContext","selectedEasingFunction","easingFunction","ShapeProperty","shapes","shape","find","el","selectedShape","defaultValue","JSON","parse","error","Array","from","Object","entries","filter","entry","BurstListProperty","sort","a","time","burst","count","undefined","repeat","BooleanProperty","checked","ModuleProperty","toLowerCase","Error","Module","module","nKey","updateModule","removeModule","moveModuleUp","moveModuleDown","particleModules","moduleInfo","info","moduleTypeId","moduleCategories","Set","moduleType","category","item","localeCompare","moduleCategory","label","i2","properties","iProperty","key","updatedModule","TextureSelector","selectedTextures","updateTextures","availableTextures","selectedTextureName","iTexture","textureName","Effect","effect","updateEffect","removeEffect","textures","updatedTextures","updatedEffect","newModule","modules","unshift","iModule","indexOf","EffectsConfigurationPanel","effects","updateEffects","updatedEffects","iEffect","ProjectToolbar","restart","saveToFile","loadFromFile","loadPreset","presetEffects","useState","presetsVisible","setPresetsVisible","presetEffect","data","style","backgroundImage","thumbnail","particleEffect","this","active","dt","AlphaDestructor","len","particles","particle","alpha","destroyParticle","object","hideWarnings","LifeTimeDestructor","timeLived","lifeTime","loadSerializedProperty","deserializeValue","deserializedValue","deserializePrimitiveDataType","serializedPrimitiveDataType","lerp","clamp","Math","randomInRange","random","vec2","subtract","multiply","v","sqrt","pow","normalize","lerpColor","factor","aLab","rgbToLab","bLab","lerpLab","l","lerbRGB","labToRgb","rgb","z","lab","circleLogic","getRandomPosition","angle","PI","radius","center","cos","sin","getRandomEdgePosition","containsPosition","position","rectangleLogic","v1","v2","width","abs","height","randomEdgeLength","minX","minY","maxX","maxY","triangleLogic","r1","r2","s1","v3","d1","sign","d2","d3","p1","p2","p3","deserializeShape","serializedShape","selectShapeLogic","OutsideBoundsDestructor","bounds","Particle","velocity","rotation","rotationalVelocity","scale","destroyed","texture","ParticleGenerator","arguments","interval","_timer","bursts","_updateCounter","tPrev","tNow","forEach","burstTimestamp","ceil","generateParticle","PointGenerator","addParticle","AlphaRange","handleParticleAdd","addParticleListeners","push","LifeTimeRange","RandomAngleVelocity","angleRad","RandomScale","RandomColor","palette","interpolate","randomPalettePosition","iPaletteStart","floor","colorA","colorB","round","RandomRotationalVelocity","RandomVelocity","randomX","randomY","EasingFunctions","linear","easeOutSine","easeOutCubic","easeOutExpo","easeOutCirc","easeOutBack","c1","easeOutElastic","c4","serializeEasing","deserializeEasing","serializedEasing","AlphaOverLifetime","easing","_alphaOverLifetime_initialAlpha","initialAlpha","DeaccelerationOverLifetime","_velocityOverLifetime_initialVelocity","xPrev","xNow","animationPrev","animationNow","initialVelocity","deacceleration","Gravity","strength","CircleLoadingGenerator","nextParticleAngle","angleStep","ShapeGenerator","edgesOnly","getRandomPositionInsideShape","GravityWithCenter","maxPullStrengthDistance","maxPullStrengthMultiplier","minPullStrengthDistance","minPullStrengthMultiplier","toCenter","particleDistance","pullStrengthMultiplier","pullStrength","pullDirection","RandomRotation","moduleTypeRegistry","ParticleEffect","particleSystem","isInitialized","destroyParticleListeners","init","update","clbk","effectObject","options","_a","addParticleEffect","moduleObject","moduleTypeReference","fromObject","ParticleSystem","addParticleEffectListeners","removeParticleEffectListeners","toObject","ParticleSandbox","renderer","setRenderer","visibleParticlesCount","setVisibleParticlesCount","runTime","setRunTime","useEffect","container","document","getElementById","app","PIXI","resizeTo","backgroundAlpha","appendChild","view","clientHeight","unusedSprites","activeSprites","Map","effectInfo","sprite","pop","blendMode","ADD","anchor","stage","addChild","visible","set","handleParticleDestroy","get","delete","registerParticleEffect","updateRendering","tint","rgb2hex","TextureCache","reset","keys","destroy","particleEffects","runTimeCounter","ticker","elapsedMS","particlesCount","reduce","prev","cur","add","remove","fill","_","id","toFixed","globalState","createContext","defaultParticleSystemConf","loadParticleEffectDefaults","particleModulesInfo","effectResult","moduleResult","propertyKey","Editor","setEffects","loading","setLoading","promiseCoreLibraryConfig","fetch","then","json","coreLibraryConfig","log","promiseSpriteSheets","spriteSheetNames","loader","shared","resources","spritesheet","load","Promise","resolve","onComplete","once","values","resource","promisePresetEffects","all","refLoadFileInput","useRef","Provider","obj","filename","blob","Blob","stringify","url","URL","createObjectURL","elem","createElement","href","download","body","click","removeChild","downloadObject","particleSystemData","fileInput","current","ref","accept","file","files","Response","loadedParticleSystem","alert","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0a5f45fe.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NumberProperty.css\";\n\nconst NumberProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"number-layout field\">\n      <span className=\"number-name\" title={tooltip}>\n        {name}\n      </span>\n      <input\n        className=\"number-field\"\n        type={\"number\"}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={(e) => {\n          let newValue;\n          try {\n            newValue = Number(e.target.value);\n          } catch (e) {\n            console.warn(`NumberProperty could not parse Number`);\n          }\n          onChange(newValue);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default NumberProperty;\n","import React from \"react\";\nimport \"./PositionProperty.css\";\n\nconst PositionProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"field position-div\">\n      <span title={name}>{name}</span>\n      <div className=\"position-child-div\">\n        <span>X</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.x}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (min)`);\n            }\n            onChange({ x: newValue, y: value.y });\n          }}\n        ></input>\n      </div>\n      <div className=\"position-child-div\">\n        <span>Y</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.y}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (max)`);\n            }\n            onChange({ x: value.x, y: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionProperty;\n","import React from \"react\";\nimport \"./RangeProperty.css\";\n\nconst RangeProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"field range-div\">\n      <span title={tooltip}>{name}</span>\n      <div className=\"range-child-div\">\n        <span>min</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.min}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (min)`);\n            }\n            onChange({ min: newValue, max: value.max });\n          }}\n        ></input>\n      </div>\n      <div className=\"range-child-div\">\n        <span>max</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.max}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (max)`);\n            }\n            onChange({ min: value.min, max: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default RangeProperty;\n","import React from \"react\";\nimport \"./ColorPaletteProperty.css\";\n\nconst ColorPaletteProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  const within256range = (num) => {\n    if (num > 255) return 255;\n    if (num < 0) return 0;\n\n    return num;\n  };\n\n  return (\n    <div className=\"colorPalette-div field\">\n      <span>{name}</span>\n      <div className=\"colorPalette-nested-div\">\n        {value.length > 0 && (\n          <table className=\"colorPalette-table\">\n            <thead>\n              <tr>\n                <th>r</th>\n                <th>g</th>\n                <th>b</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value.map((color, i) => (\n                <tr key={`row-color-${i}`}>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.r * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          if (e.target.value > 255) e.target.value = 255;\n                          if (e.target.value < 0) e.target.value = 0;\n                          newValue = Number(e.target.value) / 255;\n                        } catch (e) {\n                          console.warn(\n                            `ColorPaletteProperty could not parse Number`\n                          );\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          r: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.g * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          g: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.b * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          b: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <div\n                      className=\"colorPalette-remove-color\"\n                      onClick={() => {\n                        const newValue = [...value];\n                        newValue.splice(i, 1);\n                        onChange(newValue);\n                      }}\n                    ></div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        <div\n          className=\"colorPalette-add-color\"\n          onClick={() => {\n            const newValue = [...value, { r: 1, g: 1, b: 1 }];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPaletteProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./EasingFunctionProperty.css\";\n\nconst EasingFunctionProperty = (props) => {\n  const { name, value, onChange } = props;\n  const { easingFunctions } = useContext(globalStateContext);\n\n  return (\n    <div className=\"easingFunction-div field\">\n      <span className=\"easingFunction-name\">{name}</span>\n      <select\n        className=\"easingFunction-dropdown\"\n        value={value}\n        onChange={(e) => {\n          const selectedEasingFunction = e.target.value;\n          onChange(selectedEasingFunction);\n        }}\n      >\n        {easingFunctions.map((easingFunction) => (\n          <option key={easingFunction} className=\"easingFunction-option\">\n            {easingFunction}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default EasingFunctionProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./ShapeProperty.css\";\nimport ModuleProperty from \"./ModuleProperty\";\n\nconst ShapeProperty = (props) => {\n  const { value, name, onChange } = props;\n  const { shapes } = useContext(globalStateContext);\n  const shape = shapes.find((el) => el.type === value.type);\n  return (\n    <div className=\"shape-div field\">\n      <div className=\"shape-headerContainer\">\n        <span className=\"shape-name\">{name}</span>\n        <select\n          className=\"shape-dropdown\"\n          value={value.type}\n          onChange={(e) => {\n            const selectedShape = shapes.find(\n              (el) => el.type === e.target.value\n            );\n            try {\n              const defaultValue = JSON.parse(selectedShape.defaultValue);\n              onChange(defaultValue);\n            } catch (e) {\n              console.error(\n                `Error parsing shape @defaultValue: ${selectedShape}`\n              );\n            }\n          }}\n        >\n          {shapes.map((shape) => (\n            <option key={shape.type} className=\"shape-option\">\n              {shape.type}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"shape-valuesContainer\">\n        {Array.from(Object.entries(shape))\n          .filter((entry) => entry[0] !== \"type\" && entry[0] !== \"defaultValue\")\n          .map((entry, i) => {\n            return (\n              <ModuleProperty\n                name={entry[0]}\n                value={value[entry[0]]}\n                propertyInfo={{\n                  type: entry[1],\n                }}\n                key={`shape-value-${i}`}\n                onChange={(newPropertyValue) => {\n                  const newValue = { ...value };\n                  newValue[entry[0]] = newPropertyValue;\n                  onChange(newValue);\n                }}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default ShapeProperty;\n","import React from \"react\";\nimport \"./BurstListProperty.css\";\n\nconst BurstListProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"burstListProperty-div field\">\n      <span>{name}</span>\n      <div className=\"burstListProperty-nested-div\">\n        {value.length > 0 && (\n          <table className=\"burstListProperty-table\">\n            <thead>\n              <tr>\n                <th>time</th>\n                <th>count</th>\n                <th>repeat</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value\n                .sort((a, b) => a.time - b.time)\n                .map((burst, i) => (\n                  <tr key={`burst-row-${i}`}>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.time}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            time: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.count}\n                        min={0}\n                        step={10}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            count: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.repeat !== undefined ? burst.repeat : 0}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                            if (newValue === 0) newValue = undefined;\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            repeat: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <div\n                        className=\"burstListProperty-remove-burst\"\n                        onClick={() => {\n                          const newValue = [...value];\n                          newValue.splice(i, 1);\n                          onChange(newValue);\n                        }}\n                      ></div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n        <div\n          className=\"burstListProperty-add-burst\"\n          onClick={() => {\n            const newValue = [\n              ...value,\n              { time: 0, count: 20, repeat: undefined },\n            ];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default BurstListProperty;\n","import React from \"react\";\nimport \"./BooleanProperty.css\";\n\nconst BooleanProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"boolean-div field\">\n      <span>{name}</span>\n      <input\n        className=\"boolean-field\"\n        checked={value}\n        type={\"checkbox\"}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default BooleanProperty;\n","import React from \"react\";\nimport \"./ModuleProperty.css\";\nimport NumberProperty from \"./NumberProperty\";\nimport PositionProperty from \"./PositionProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport ColorPaletteProperty from \"./ColorPaletteProperty\";\nimport EasingFunctionProperty from \"./EasingFunctionProperty\";\nimport ShapeProperty from \"./ShapeProperty\";\nimport BurstListProperty from \"./BurstListProperty\";\nimport BooleanProperty from \"./BooleanProperty\";\n\nconst ModuleProperty = (props) => {\n  const { propertyInfo } = props;\n\n  switch (propertyInfo.type && propertyInfo.type.toLowerCase()) {\n    case \"number\":\n      return <NumberProperty {...props} />;\n    case \"position\":\n      return <PositionProperty {...props} />;\n    case \"range\":\n      return <RangeProperty {...props} />;\n    case \"color[]\":\n      return <ColorPaletteProperty {...props} />;\n    case \"easingfunction\":\n      return <EasingFunctionProperty {...props} />;\n    case \"shape\":\n      return <ShapeProperty {...props} />;\n    case \"burst[]\":\n      return <BurstListProperty {...props} />;\n    case \"boolean\":\n      return <BooleanProperty {...props} />;\n    default:\n      throw new Error(\n        `Unidentified module property type: ${propertyInfo.type}`\n      );\n  }\n};\n\nexport default ModuleProperty;\n","import React, { useContext } from \"react\";\nimport \"./Module.css\";\nimport { globalStateContext } from \"../Editor\";\nimport ModuleProperty from \"./ModuleProperty/ModuleProperty\";\n\nconst Module = (props) => {\n  const {\n    module,\n    nKey,\n    updateModule,\n    removeModule,\n    moveModuleUp,\n    moveModuleDown,\n  } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  const moduleInfo = particleModules.find(\n    (info) => info.moduleTypeId === module.moduleTypeId\n  );\n  if (!moduleInfo) {\n    throw new Error(`Unidentified module: ${module.moduleTypeId}`);\n  }\n\n  const moduleCategories = Array.from(\n    new Set(particleModules.map((moduleType) => moduleType.category))\n  ).filter((item) => item !== undefined);\n\n  return (\n    <div className=\"module\">\n      <div className=\"module-title-layout field\">\n        <select\n          className=\"module-typeDropdown\"\n          value={module.moduleTypeId}\n          onChange={(e) => {\n            const value = e.target.value;\n            const updatedModule = { moduleTypeId: value };\n            updateModule(updatedModule);\n          }}\n        >\n          {moduleCategories\n            .sort((a, b) => a.localeCompare(b))\n            .map((moduleCategory, i) => (\n              <optgroup label={moduleCategory} key={`module-${i}`}>\n                {particleModules\n                  .filter(\n                    (moduleType) => moduleType.category === moduleCategory\n                  )\n                  .map((moduleType, i2) => (\n                    <option\n                      value={moduleType.moduleTypeId}\n                      key={`option-${i2}`}\n                    >\n                      {moduleType.moduleTypeId}\n                    </option>\n                  ))}\n              </optgroup>\n            ))}\n        </select>\n        <div className=\"module-moveContainer\">\n          <div\n            className=\"module-move module-moveUp\"\n            title=\"Move module up\"\n            onClick={() => {\n              moveModuleUp();\n            }}\n          ></div>\n          <div\n            className=\"module-move module-moveDown\"\n            title=\"Move module down\"\n            onClick={() => {\n              moveModuleDown();\n            }}\n          ></div>\n        </div>\n        <div className=\"module-remove\" onClick={() => removeModule()}></div>\n      </div>\n      <div className=\"module-properties\">\n        {Object.entries(moduleInfo.properties).map(\n          ([key, propertyInfo], iProperty) => (\n            <ModuleProperty\n              name={key}\n              value={module[key]}\n              propertyInfo={propertyInfo}\n              key={`${nKey}_property${iProperty}`}\n              onChange={(value) => {\n                const updatedModule = { ...module };\n                updatedModule[key] = value;\n                updateModule(updatedModule);\n              }}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Module;\n","import React, { useContext } from \"react\";\nimport \"./TextureSelector.css\";\nimport { globalStateContext } from \"../Editor\";\n\nconst TextureSelector = (props) => {\n  const { selectedTextures, updateTextures } = props;\n  const { availableTextures } = useContext(globalStateContext);\n  return (\n    <select\n      className=\"textureSelector-dropdown field\"\n      onChange={(e) => {\n        const selectedTextureName = e.target.value;\n        updateTextures([selectedTextureName]);\n      }}\n      value={selectedTextures[0]}\n    >\n      {Object.entries(availableTextures)\n        .sort((a, b) => a[0].localeCompare(b[0]))\n        .map(([textureName, textureValue], iTexture) => (\n          <option\n            className=\"textureSelector-option\"\n            key={`texture-${iTexture}`}\n          >\n            {textureName}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nexport default TextureSelector;\n","import React, { useContext } from \"react\";\nimport \"./Effect.css\";\nimport Module from \"./Module\";\nimport { globalStateContext } from \"../Editor\";\nimport TextureSelector from \"./TextureSelector\";\n\nconst Effect = (props) => {\n  const { effect, title, nKey, updateEffect, removeEffect } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  return (\n    <div className=\"effect\">\n      <div className=\"effect-titleDiv\">\n        <span className=\"effect-title\">{title}</span>\n        <div\n          className=\"effect-remove\"\n          onClick={() => {\n            removeEffect();\n          }}\n        ></div>\n      </div>\n      <div className=\"effect-properties\">\n        <TextureSelector\n          selectedTextures={effect.textures}\n          updateTextures={(updatedTextures) => {\n            const updatedEffect = { ...effect, textures: updatedTextures };\n            updateEffect(updatedEffect);\n          }}\n        />\n        <div\n          className=\"effect-addModuleDiv field\"\n          onClick={() => {\n            const newModule = {\n              moduleTypeId: particleModules[0].moduleTypeId,\n            };\n            const updatedEffect = { ...effect };\n            updatedEffect.modules.unshift(newModule);\n            updateEffect(updatedEffect);\n          }}\n        >\n          <div className=\"effect-addModule\"></div>\n          <span>Add module</span>\n        </div>\n        {effect.modules.map((module, iModule) => (\n          <Module\n            module={module}\n            key={`${nKey}_module${iModule}`}\n            nKey={`${nKey}_module${iModule}`}\n            updateModule={(updatedModule) => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules[iModule] = updatedModule;\n              updateEffect(updatedEffect);\n            }}\n            removeModule={() => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(\n                updatedEffect.modules.indexOf(module),\n                1\n              );\n              updateEffect(updatedEffect);\n            }}\n            moveModuleUp={() => {\n              if (iModule <= 0) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule - 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n            moveModuleDown={() => {\n              if (iModule >= effect.modules.length - 1) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule + 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Effect;\n","import React from \"react\";\nimport \"./EffectsConfigurationPanel.css\";\nimport Effect from \"./Effect\";\n\nconst EffectsConfigurationPanel = (props) => {\n  const { effects, updateEffects } = props;\n\n  return (\n    <div className=\"effectsConfigurationPanel\">\n      <div\n        className=\"effectsConfigurationPanel-addDiv field\"\n        onClick={() => {\n          const newEffect = {\n            textures: [\"generic/ball.png\"],\n            modules: [],\n          };\n          const updatedEffects = [...effects];\n          updatedEffects.unshift(newEffect);\n          updateEffects(updatedEffects);\n        }}\n      >\n        <div className=\"effectsConfigurationPanel-add\"></div>\n        Add effect\n      </div>\n      <span className=\"effectsConfigurationPanel-titleEffects\"></span>\n      {effects.map((effect, iEffect) => (\n        <Effect\n          effect={effect}\n          title={`Effect ${iEffect + 1}`}\n          key={`effect${iEffect}`}\n          nKey={`effect${iEffect}`}\n          updateEffect={(updatedEffect) => {\n            const updatedEffects = [...effects];\n            updatedEffects[iEffect] = updatedEffect;\n            updateEffects(updatedEffects);\n          }}\n          removeEffect={() => {\n            const updatedEffects = [...effects];\n            updatedEffects.splice(updatedEffects.indexOf(effect), 1);\n            updateEffects(updatedEffects);\n          }}\n        />\n      ))}\n      <div className=\"effectsConfigurationPanel-footer\"></div>\n    </div>\n  );\n};\n\nexport default EffectsConfigurationPanel;\n","import React, { useState, useContext } from \"react\";\nimport \"./ProjectToolbar.css\";\nimport { globalStateContext } from \"./Editor\";\n\nconst ProjectToolbar = (props) => {\n  const { restart, saveToFile, loadFromFile, loadPreset } = props;\n\n  const { presetEffects } = useContext(globalStateContext);\n\n  const [presetsVisible, setPresetsVisible] = useState(false);\n\n  return (\n    <div className=\"projectToolbar\">\n      <div className=\"projectToolbar-gap\"></div>\n      <div className=\"projectToolBar-buttons\">\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-restart\"\n          onClick={() => restart()}\n        >\n          <span className=\"projectToolbar-button\">Restart</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-saveToFile\"\n          onClick={() => saveToFile()}\n        >\n          <span className=\"projectToolbar-button\">Save to file</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadPreset\"\n          onClick={() => {\n            setPresetsVisible(!presetsVisible);\n          }}\n        >\n          <span className=\"projectToolbar-button\">Load preset</span>\n          <div\n            className={`projectToolbar-preset-container${\n              presetsVisible ? \" projectToolbar-preset-container-visible\" : \"\"\n            }`}\n          >\n            {presetsVisible &&\n              presetEffects.map((presetEffect, i) => (\n                <div\n                  className=\"projectToolBar-preset-item\"\n                  key={`preset-${i}`}\n                  onClick={() => {\n                    loadPreset(presetEffect.data);\n                    setPresetsVisible(false);\n                  }}\n                >\n                  <div\n                    className=\"projectToolBar-preset-thumbnail\"\n                    style={{\n                      backgroundImage:\n                        presetEffect.thumbnail &&\n                        `url(presetThumbnails/${presetEffect.thumbnail})`,\n                    }}\n                  />\n                  <span className=\"projectToolBar-preset-label\">\n                    {presetEffect.label}\n                  </span>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadFromFile\"\n          onClick={() => loadFromFile()}\n        >\n          <span className=\"projectToolbar-button\">Load from file</span>\n        </div>\n      </div>\n      <div className=\"projectToolbar-gap\"></div>\n    </div>\n  );\n};\n\nexport default ProjectToolbar;\n","export class Module {\n    constructor(particleEffect) {\n        /**\n         * Modules with `active === true` will have frequent calls to `update()` method.\n         */\n        this.active = true;\n        this.particleEffect = particleEffect;\n    }\n    init() { }\n    update(dt) { }\n}\n","import { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose color alpha value is less or equal to 0\n *\n * @module\n * @category    Destructor\n */\nexport class AlphaDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.alpha <= 0) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaDestructor.moduleTypeId = \"AlphaDestructor\";\n","import { Module } from '../module.js';\n/**\n * @module\n * @category    Destructor\n */\nexport class LifeTimeDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.timeLived >= particle.lifeTime) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeDestructor.moduleTypeId = \"LifeTimeDestructor\";\n","export const loadSerializedProperty = (object, moduleType, module, key, deserializeValue, hideWarnings) => {\n    const value = object[key];\n    if (value === undefined) {\n        if (!hideWarnings)\n            console.warn(`Missing module property ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    const deserializedValue = deserializeValue(value);\n    if (deserializedValue === undefined) {\n        if (!hideWarnings)\n            console.warn(`Module property could not be deserialized ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    module[key] = deserializedValue;\n};\n/**\n * Function for satisfying types when deserializing a primitive data type.\n *\n * Examples of primitive data types:\n * - `property = 1.0`\n * - `property = 'hello'`\n * - `property = { x: 1.0, something: 'text' }`\n * - `property = [ 0.0, 1.0 ]`\n *\n * @param serializedPrimitiveDataType\n * @returns\n */\nexport const deserializePrimitiveDataType = (serializedPrimitiveDataType) => {\n    return serializedPrimitiveDataType;\n};\n","export const lerp = (x, y, a) => x * (1 - a) + y * a;\nexport const clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nexport const invlerp = (x, y, a) => clamp((a - x) / (y - x));\nexport const range = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n/**\n * Get random number between range [min, max].\n * @param min\n * @param max\n * @returns\n */\nexport const randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Collection of utilities for `{ x: number, y: number }` data structures.\n */\nexport const vec2 = {\n    /**\n     * Subtract two vectors.\n     * @param a     Vector\n     * @param b     Position\n     * @return      `{ x: a.x - b.x, y: a.y - b.x }`\n     */\n    subtract: (a, b) => {\n        return { x: a.x - b.x, y: a.y - b.y };\n    },\n    /**\n     * Multiply vector with a number.\n     * @param a     Vector\n     * @param b     Number\n     * @return      `{ x: a.x * b, y: a.y * b }`\n     */\n    multiply: (a, b) => {\n        return { x: a.x * b, y: a.y * b };\n    },\n    /**\n     * Get length of vector.\n     * @param v     Vector\n     * @return      Length of vector\n     */\n    length: (v) => {\n        return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\n    },\n    /**\n     * Get normalized vector.\n     * @param v     Vector\n     * @returns     Normalized vector (same direction but length = 1).\n     */\n    normalize: (v) => {\n        const length = vec2.length(v);\n        return length === 0 ? { x: 0, y: 0 } : { x: v.x / length, y: v.y / length };\n    },\n};\n/**\n * Interpolate between two colors.\n *\n * The color interpolation is done linearly in LAB color space.\n *\n * @param   a       Color 1.\n * @param   b       Color 2.\n * @param   factor  Ratio between colors 1 and 2 that will be used for the returned color.\n * @returns         Interpolated Color.\n */\nexport const lerpColor = (a, b, factor) => {\n    const aLab = rgbToLab(a);\n    const bLab = rgbToLab(b);\n    const lerpLab = {\n        l: lerp(aLab.l, bLab.l, factor),\n        a: lerp(aLab.a, bLab.a, factor),\n        b: lerp(aLab.b, bLab.b, factor),\n    };\n    const lerbRGB = labToRgb(lerpLab);\n    return {\n        r: lerbRGB.r,\n        g: lerbRGB.g,\n        b: lerbRGB.b,\n    };\n};\n/**\n * Function that transforms a RGB color to LAB.\n */\nconst rgbToLab = (rgb) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let r = rgb.r, g = rgb.g, b = rgb.b, x, y, z;\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    return { l: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n};\n/**\n * Function that transforms a LAB color to RGB.\n */\nconst labToRgb = (lab) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let y = (lab.l + 16) / 116, x = lab.a / 500 + y, z = y - lab.b / 200, r, g, b;\n    x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n    y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n    z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.204 + z * 1.057;\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n    return {\n        r: Math.max(0, Math.min(1, r)),\n        g: Math.max(0, Math.min(1, g)),\n        b: Math.max(0, Math.min(1, b)),\n    };\n};\n","import { vec2 } from '../utilities.js';\nexport const circleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = Math.sqrt(Math.random()) * shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const distFromCenter = vec2.length(vec2.subtract(position, shape.center));\n        return distFromCenter <= shape.radius;\n    },\n};\n","import { randomInRange } from '../utilities.js';\nexport const rectangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        return {\n            x: shape.v1.x + Math.random() * (shape.v2.x - shape.v1.x),\n            y: shape.v1.y + Math.random() * (shape.v2.y - shape.v1.y),\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const width = Math.abs(shape.v1.x - shape.v2.x);\n        const height = Math.abs(shape.v1.y - shape.v2.y);\n        const edgeLength = width * 2 + height * 2;\n        const randomEdgeLength = randomInRange(0, edgeLength);\n        // going from bottom left counter-clockwise\n        if (randomEdgeLength < height) {\n            return {\n                x: shape.v1.x,\n                y: shape.v1.y + randomEdgeLength,\n            };\n        }\n        else if (randomEdgeLength < width + height) {\n            return {\n                x: shape.v1.x + randomEdgeLength - height,\n                y: shape.v1.y + height,\n            };\n        }\n        else if (randomEdgeLength < 2 * height + width) {\n            return {\n                x: shape.v1.x + width,\n                y: shape.v1.y + randomEdgeLength - (height + width),\n            };\n        }\n        else {\n            return {\n                x: shape.v1.x + randomEdgeLength - (2 * height + width),\n                y: shape.v1.y,\n            };\n        }\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const minX = Math.min(shape.v1.x, shape.v2.x);\n        const minY = Math.min(shape.v1.y, shape.v2.y);\n        const maxX = Math.max(shape.v1.x, shape.v2.x);\n        const maxY = Math.max(shape.v1.y, shape.v2.y);\n        return position.x >= minX && position.x <= maxX && position.y >= minY && position.y <= maxY;\n    },\n};\n","export const triangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const s1 = Math.sqrt(r1);\n        return {\n            x: shape.v1.x * (1.0 - s1) + shape.v2.x * (1.0 - r2) * s1 + shape.v3.x * r2 * s1,\n            y: shape.v1.y * (1.0 - s1) + shape.v2.y * (1.0 - r2) * s1 + shape.v3.y * r2 * s1,\n        };\n        //alternative version that might be faster, something to benchmark for you\n        /*\n        const s = Math.abs(r1 - r2);\n        const t = 0.5 * (r1 + r2 - s);\n        const u = 1 - 0.5 * (s + r1 + r2);\n\n        return {\n            x: s * shape.v1.x + t * shape.v2.x + u * shape.v3.x,\n            y: s * shape.v1.y + t * shape.v2.y + u * shape.v3.y,\n        };\n        */\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        // Source: https://stackoverflow.com/a/2049593/9288063\n        const d1 = sign(position, shape.v1, shape.v2);\n        const d2 = sign(position, shape.v2, shape.v3);\n        const d3 = sign(position, shape.v3, shape.v1);\n        const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n        const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n        return !(has_neg && has_pos);\n    },\n    getRandomEdgePosition: function (shape) {\n        throw new Error(\"Function not implemented.\");\n    },\n};\n/**\n * Internal convenience function used in `containsPosition` implementation.\n *\n * Source: https://stackoverflow.com/a/2049593/9288063\n */\nconst sign = (p1, p2, p3) => {\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n};\n","import { circleLogic } from './circle.js';\nimport { rectangleLogic } from './rectangle.js';\nimport { triangleLogic } from './triangle.js';\nexport const serializeShape = (shape) => {\n    // Shapes are just primitive data types, can be serialized as they are.\n    return shape;\n};\nexport const deserializeShape = (serializedShape) => {\n    // Shapes are just primitive data types, can be deserialized as they are.\n    return serializedShape;\n};\nexport const getRandomPositionInsideShape = (shape) => {\n    return selectShapeLogic(shape).getRandomPosition(shape);\n};\nexport const getRandomPositionOnEdge = (shape) => {\n    return selectShapeLogic(shape).getRandomEdgePosition(shape);\n};\nexport const shapeContainsPosition = (shape, position) => {\n    return selectShapeLogic(shape).containsPosition(shape, position);\n};\nconst selectShapeLogic = (shape) => {\n    switch (shape.type) {\n        case \"triangle\":\n            return triangleLogic;\n        case \"rectangle\":\n            return rectangleLogic;\n        case \"circle\":\n            return circleLogic;\n    }\n};\n","import { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { deserializeShape, serializeShape, shapeContainsPosition } from '../shapes/shape.js';\nimport { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose center location is outside generic bounds.\n *\n * ```ts\n *  // Example usage\n *  const destructor = new OutsideBoundsDestructor(particleSystem);\n *  destructor.bounds = {\n *      type: \"triangle\",\n *      v1: { x: 100, y: 400 },\n *      v2: { x: 300, y: 400 },\n *      v3: { x: 200, y: 0 },\n *  };\n *  particleSystem.modules.push(destructor);\n * ```\n *\n * @module\n * @category    Destructor\n * bounds {\n *      @tooltip        TODO\n *      @type           Shape\n *      @defaultValue   { \"type\": \"rectangle\", \"v1\": {\"x\": -50, \"y\": -50}, \"v2\": {\"x\": 50, \"y\": 50} }\n * }\n */\nexport class OutsideBoundsDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        if (!this.bounds) {\n            return;\n        }\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (!shapeContainsPosition(this.bounds, particle.position)) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: OutsideBoundsDestructor.moduleTypeId,\n            bounds: this.bounds && serializeShape(this.bounds),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new OutsideBoundsDestructor(particleEffect);\n        loadSerializedProperty(object, OutsideBoundsDestructor, module, \"bounds\", deserializeShape, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nOutsideBoundsDestructor.moduleTypeId = \"OutsideBoundsDestructor\";\n","export class Particle {\n    constructor() {\n        /**\n         * Unspecified unit. Depends on separate graphics implementation\n         */\n        this.position = { x: 0, y: 0 };\n        /**\n         * Unspecified units per second. Depends on separate graphics implementation\n         */\n        this.velocity = { x: 0, y: 0 };\n        /**\n         * [0, 1]\n         */\n        this.color = { r: 1, g: 1, b: 1 };\n        /**\n         * [0, 1]\n         */\n        this.alpha = 1.0;\n        /**\n         * Radians\n         */\n        this.rotation = 0;\n        /**\n         * Radians per second\n         */\n        this.rotationalVelocity = 0;\n        /**\n         * Seconds\n         */\n        this.timeLived = 0;\n        /**\n         * Seconds\n         */\n        this.lifeTime = 2;\n        this.scale = 0.1;\n        this.destroyed = false;\n        this.texture = \"\";\n    }\n}\n","import { Module } from '../module.js';\nexport class ParticleGenerator extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Interval between generated particles as milliseconds\n         * (as long as `Generator.active === true`)\n         */\n        this.interval = 0.1;\n        this._timer = 0;\n        /**\n         * List of timestamps when a batch of particles can be generated.\n         *\n         * `time` is seconds since the particle effect was created,\n         * and `count` is number of particles to generate.\n         *\n         * Optional `repeat` property can be supplied to supply a second interval which the batch is automatically repeated with afterwards.\n         */\n        this.bursts = [];\n        this._updateCounter = 0;\n    }\n    update(dt) {\n        const tPrev = this._updateCounter;\n        const tNow = this._updateCounter + dt;\n        // Trigger all bursts that are between tPrev and tNow\n        this.bursts.forEach((burst) => {\n            const burstTimestamp = burst.repeat === undefined || burst.repeat <= 0 || burst.time > tPrev\n                ? burst.time\n                : burst.time + burst.repeat * Math.ceil((tPrev - burst.time) / burst.repeat);\n            if (burstTimestamp >= tPrev && burstTimestamp <= tNow) {\n                for (let i = 0; i < burst.count; i += 1) {\n                    this.generateParticle();\n                }\n            }\n        });\n        this._updateCounter = tNow;\n        if (this.interval <= 0) {\n            return;\n        }\n        this._timer += dt;\n        while (this._timer >= this.interval) {\n            this._timer -= this.interval;\n            this.generateParticle();\n        }\n    }\n}\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\n/**\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * position {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n */\nexport class PointGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.position = { x: 0, y: 0 };\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.position.x;\n        particle.position.y = this.position.y;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: PointGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            position: this.position,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new PointGenerator(particleEffect);\n        loadSerializedProperty(object, PointGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"position\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nPointGenerator.moduleTypeId = \"PointGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module which overrides `Particle.color.a` property from a configurable random value range.\n *\n * Range can be configured with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   1\n * }\n */\nexport class AlphaRange extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.min = 0;\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.max = 1;\n        this.handleParticleAdd = (particle) => {\n            particle.alpha = randomInRange(this.min, this.max);\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaRange(particleEffect);\n        loadSerializedProperty(object, AlphaRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, AlphaRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaRange.moduleTypeId = \"AlphaRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   1.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   5.0\n * }\n */\nexport class LifeTimeRange extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 1.5;\n        this.max = 2.5;\n        this.handleParticleAdd = (particle) => {\n            particle.lifeTime = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeRange(particleEffect);\n        loadSerializedProperty(object, LifeTimeRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, LifeTimeRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeRange.moduleTypeId = \"LifeTimeRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random velocity to each particle along a random direction.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class RandomAngleVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Minimum velocity\n         */\n        this.min = 0;\n        /**\n         * Maximum velocity\n         */\n        this.max = 100;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = Math.random() * 2 * Math.PI;\n            const velocity = randomInRange(this.min, this.max);\n            particle.velocity.x = Math.cos(angleRad) * velocity;\n            particle.velocity.y = Math.sin(angleRad) * velocity;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomAngleVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomAngleVelocity(particleEffect);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomAngleVelocity.moduleTypeId = \"RandomAngleVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns a random scale to each particle upon its creation.\n *\n * Scale range can be customized with properties: `min` and `max`.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   0.5\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   1.5\n * }\n */\nexport class RandomScale extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 0.5;\n        this.max = 1.5;\n        this.handleParticleAdd = (particle) => {\n            particle.scale = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomScale.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomScale(particleEffect);\n        loadSerializedProperty(object, RandomScale, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomScale, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomScale.moduleTypeId = \"RandomScale\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerpColor } from '../utilities.js';\n/**\n * Module that assigns each particle a random color.\n *\n * Color range can be customized to some degree using `palette` property.\n *\n * It is a array of Colors. Any interpolated step between the colors in this array can be assigned to particles.\n * For example, the following configuration results in particles varying from Red to Green colors:\n *\n * ```ts\n *  const color = new RandomColor(effect)\n *  color.palette = [\n *      { r: 1, g: 0, b: 0 },\n *      { r: 0, g: 1, b: 0 }\n *  ]\n * ```\n *\n * Color interpolation can be disabled by setting `interpolate` to `false`.\n *\n * @module\n * @category    Initializer\n * palette {\n *      @tooltip        TODO\n *      @type           Color[]\n *      @defaultValue   [{ \"r\": 1, \"g\": 0, \"b\": 0 }, { \"r\": 0, \"g\": 1, \"b\": 0 }, { \"r\": 0, \"g\": 0, \"b\": 1 }]\n * }\n * interpolate {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   true\n * }\n */\nexport class RandomColor extends Module {\n    constructor() {\n        super(...arguments);\n        this.palette = [\n            { r: 1, g: 0, b: 0 },\n            { r: 0, g: 1, b: 0 },\n            { r: 0, g: 0, b: 1 },\n        ];\n        this.interpolate = true;\n        this.handleParticleAdd = (particle) => {\n            if (this.interpolate && this.palette.length >= 2) {\n                const randomPalettePosition = Math.random() * (this.palette.length - 1);\n                const iPaletteStart = Math.floor(randomPalettePosition);\n                const colorA = this.palette[iPaletteStart];\n                const colorB = this.palette[iPaletteStart + 1];\n                particle.color = lerpColor(colorA, colorB, randomPalettePosition - iPaletteStart);\n            }\n            else if (this.palette.length >= 1) {\n                particle.color = this.palette[Math.round(Math.random() * (this.palette.length - 1))];\n            }\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomColor.moduleTypeId,\n            palette: this.palette,\n            interpolate: this.interpolate,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomColor(particleEffect);\n        loadSerializedProperty(object, RandomColor, module, \"palette\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomColor, module, \"interpolate\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomColor.moduleTypeId = \"RandomColor\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns each particle random _rotational velocity_.\n * This causes the particle to continuously rotate with a static speed along its lifetime.\n *\n * Rotational velocity range can be customized with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   -5.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   5.0\n * }\n */\nexport class RandomRotationalVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotational velocity as **Radians per second**\n         */\n        this.min = -2 * Math.PI;\n        /**\n         * Max rotational velocity as **Radians per second**\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            particle.rotationalVelocity = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotationalVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotationalVelocity(particleEffect);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotationalVelocity.moduleTypeId = \"RandomRotationalVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * randomX {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n * randomY {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n */\nexport class RandomVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        this.randomX = { min: -100, max: 100 };\n        this.randomY = { min: -100, max: 100 };\n        this.handleParticleAdd = (particle) => {\n            particle.velocity.x = lerp(this.randomX.min, this.randomX.max, Math.random());\n            particle.velocity.y = lerp(this.randomY.min, this.randomY.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomVelocity.moduleTypeId,\n            randomX: this.randomX,\n            randomY: this.randomY,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomVelocity(particleEffect);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomX\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomY\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomVelocity.moduleTypeId = \"RandomVelocity\";\n","// Easing functions for animations\n// See https://easings.net/#\n/**\n * Collection of all implemented _Easing functions_.\n */\nexport const EasingFunctions = {\n    /**\n     * @easingFunction\n     */\n    linear: ((x) => {\n        return x;\n    }),\n    /**\n     * https://easings.net/#easeOutSine\n     *\n     * @easingFunction\n     */\n    easeOutSine: ((x) => {\n        return Math.sin((x * Math.PI) / 2);\n    }),\n    /**\n     * https://easings.net/#easeOutCubic\n     *\n     * @easingFunction\n     */\n    easeOutCubic: ((x) => {\n        return 1 - Math.pow(1 - x, 3);\n    }),\n    /**\n     * https://easings.net/#easeOutExpo\n     *\n     * @easingFunction\n     */\n    easeOutExpo: ((x) => {\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n    }),\n    /**\n     * https://easings.net/#easeOutCirc\n     *\n     * @easingFunction\n     */\n    easeOutCirc: ((x) => {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }),\n    /**\n     * https://easings.net/#easeOutBack\n     *\n     * @easingFunction\n     */\n    easeOutBack: ((x) => {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    }),\n    /**\n     * https://easings.net/#easeOutElastic\n     *\n     * @easingFunction\n     */\n    easeOutElastic: ((x) => {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    }),\n};\n/**\n * Serialize easing function to a primitive data type that can be later deserialized.\n */\nexport const serializeEasing = (easingFunction) => {\n    const entry = Object.entries(EasingFunctions).find((entry) => entry[1] === easingFunction);\n    if (!entry) {\n        throw new Error(`serializeEasing supplied value is not an EasingFunction`);\n    }\n    // Return key in EasingFunctions. For example \"linear\", \"easeOutElastic\", etc.\n    return entry[0];\n};\n/**\n * Deserialize an easing function that was serialized using `serializeEasing`.\n */\nexport const deserializeEasing = (serializedEasing) => {\n    if (typeof serializedEasing !== \"string\")\n        return undefined;\n    const easingFunction = Object.entries(EasingFunctions).find((entry) => entry[0] === serializedEasing);\n    return easingFunction ? easingFunction[1] : undefined;\n};\n","import { deserializeEasing, EasingFunctions, serializeEasing } from '../easing.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { clamp } from '../utilities.js';\nimport { Module } from '../module.js';\n/**\n * Module that decays particles alpha over their lifetime.\n *\n * Alpha animation can be customized with `easing` property.\n *\n * This module modifies `Particle.alpha` property and can not be combined with any other modifier that does so.\n * It can however be combined with modules that alter the alpha during initialization, but these modules must be defined before `AlphaOverLifetime`!\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class AlphaOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of alpha.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._alphaOverLifetime_initialAlpha = particle.alpha;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            const initialAlpha = particle._alphaOverLifetime_initialAlpha;\n            const alpha = initialAlpha - initialAlpha * this.easing(clamp(particle.timeLived / particle.lifeTime, 0, 1));\n            particle.alpha = alpha;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaOverLifetime.moduleTypeId,\n            easing: serializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaOverLifetime(particleEffect);\n        loadSerializedProperty(object, AlphaOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaOverLifetime.moduleTypeId = \"AlphaOverLifetime\";\n","import { EasingFunctions, deserializeEasing } from '../easing.js';\nimport { Module } from '../module.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { vec2 } from '../utilities.js';\n/**\n * Module that deaccelerates particle velocity over its lifetime.\n *\n * The direction of the deacceleration is based on the initial velocity of each particle.\n * For this reason, you should ensure that the module that initializes particle velocity is listed BEFORE this module!\n *\n * Deacceleration animation can be customized with `easing` property.\n *\n * This module modifies `Particle.velocity` property, but does not reassign it so this can be combined with other modules which affect particle velocity.\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class DeaccelerationOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of velocity.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._velocityOverLifetime_initialVelocity = {\n                x: particle.velocity.x,\n                y: particle.velocity.y,\n            };\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            // NOTE: Velocity difference for each frame is calculated to avoid completely reassigning particle velocity.\n            // This is great because it allows combining deacceleration module with other velocity affecting modules.\n            const xPrev = (particle.timeLived - dt) / particle.lifeTime;\n            const xNow = particle.timeLived / particle.lifeTime;\n            const animationPrev = this.easing(xPrev);\n            const animationNow = this.easing(xNow);\n            const initialVelocity = particle._velocityOverLifetime_initialVelocity;\n            const deacceleration = vec2.multiply(initialVelocity, animationNow - animationPrev);\n            particle.velocity.x -= deacceleration.x;\n            particle.velocity.y -= deacceleration.y;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: DeaccelerationOverLifetime.moduleTypeId,\n            easing: deserializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new DeaccelerationOverLifetime(particleEffect);\n        loadSerializedProperty(object, DeaccelerationOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nDeaccelerationOverLifetime.moduleTypeId = \"DeaccelerationOverLifetime\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class Gravity extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n    }\n    update(dt) {\n        // pull particles down at a constant speed depending on configured strength.\n        this.particleEffect.particles.forEach((particle) => {\n            particle.velocity.y += this.strength * dt;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: Gravity.moduleTypeId,\n            strength: this.strength,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new Gravity(particleEffect);\n        loadSerializedProperty(object, Gravity, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravity.moduleTypeId = \"Gravity\";\n","import { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * Generator module that creates particles along the exterior of a circular area.\n *\n * Each particle is generated next to each other, so that when particles are regularly generated they move around the circle.\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * radius {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   50\n * }\n * nextParticleAngle {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   0\n * }\n * angleStep {\n *      @tooltip        Radians\n *      @type           Number\n *      @defaultValue   0.5\n * }\n */\nexport class CircleLoadingGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n        /**\n         * The angle at which the next particle will be generated at.\n         *\n         * Unit is in _radians_.\n         */\n        this.nextParticleAngle = 0;\n        /**\n         * The angle that is incremented between each generated particle.\n         *\n         * Unit is in _radians_.\n         */\n        this.angleStep = 0.5;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.center.x + Math.cos(this.nextParticleAngle) * this.radius;\n        particle.position.y = this.center.y + Math.sin(this.nextParticleAngle) * this.radius;\n        this.nextParticleAngle += this.angleStep;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleLoadingGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            center: this.center,\n            radius: this.radius,\n            nextParticleAngle: this.nextParticleAngle,\n            angleStep: this.angleStep,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleLoadingGenerator(particleEffect);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"radius\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"nextParticleAngle\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"angleStep\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleLoadingGenerator.moduleTypeId = \"CircleLoadingGenerator\";\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { deserializeShape, getRandomPositionInsideShape, getRandomPositionOnEdge, serializeShape, } from '../shapes/shape.js';\n/**\n * Module that can be used to generate particles with an initial position inside a generic _Shape_.\n *\n * Shape is assigned via `ShapeGenerator.shape` property, for example:\n *\n * ```ts\n *  const generator = new ShapeGenerator(particleEffect)\n *  generator.shape = {\n *      type: 'rectangle',\n *      v1: { x: 100, y: 100 },\n *      v2: { x: 300, y: 500 }\n *  }\n * ```\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * shape {\n *      @tooltip        TODO\n *      @type           Shape\n *      @defaultValue   { \"type\": \"rectangle\", \"v1\": {\"x\": -50, \"y\": -50}, \"v2\": {\"x\": 50, \"y\": 50} }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * edgesOnly {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   false\n * }\n */\nexport class ShapeGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.edgesOnly = false;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        if (this.shape) {\n            if (this.edgesOnly) {\n                particle.position = getRandomPositionOnEdge(this.shape);\n            }\n            else {\n                particle.position = getRandomPositionInsideShape(this.shape);\n            }\n        }\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: ShapeGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            shape: this.shape ? serializeShape(this.shape) : undefined,\n            edgesOnly: this.edgesOnly,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new ShapeGenerator(particleEffect);\n        loadSerializedProperty(object, ShapeGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"shape\", deserializeShape, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"edgesOnly\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nShapeGenerator.moduleTypeId = \"ShapeGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { clamp, lerp, vec2 } from '../utilities.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * minPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   0.2\n * }\n * maxPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   1.0\n * }\n * minPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   500\n * }\n * maxPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   100\n * }\n */\nexport class GravityWithCenter extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n        /**\n         * Center of gravity. Pulls particles towards that location with varying strength\n         * based on how close the particle is to the location (closer = stronger pull).\n         * The pull strength can be further configured with properties: `maxPullStrengthDistance`, `maxPullStrengthMultiplier`, `minPullStrengthDistance` and `minPullStrengthMultiplier`\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `maxPullStrengthMultiplier`\n         */\n        this.maxPullStrengthDistance = 100;\n        /**\n         * `strength` multiplier that is used when particle is `maxPullStrengthDistance` away from `center`.\n         */\n        this.maxPullStrengthMultiplier = 1;\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `minPullStrengthMultiplier`\n         */\n        this.minPullStrengthDistance = 500;\n        /**\n         * `strength` multiplier that is used when particle is `minPullStrengthDistance` away from `center`.\n         */\n        this.minPullStrengthMultiplier = 0.25;\n    }\n    update(dt) {\n        const center = this.center;\n        // Pull particles towards the gravity center, with varying strength based on how close the particles are to the location (closer = stronger pull)\n        this.particleEffect.particles.forEach((particle) => {\n            const toCenter = vec2.subtract(center, particle.position);\n            const particleDistance = vec2.length(toCenter);\n            const pullStrengthMultiplier = lerp(this.minPullStrengthMultiplier, this.maxPullStrengthMultiplier, clamp((particleDistance - this.minPullStrengthDistance) /\n                (this.maxPullStrengthDistance - this.minPullStrengthDistance), 0, 1));\n            const pullStrength = dt * this.strength * pullStrengthMultiplier;\n            const pullDirection = vec2.normalize(toCenter);\n            particle.velocity.x += pullDirection.x * pullStrength;\n            particle.velocity.y += pullDirection.y * pullStrength;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: GravityWithCenter.moduleTypeId,\n            strength: this.strength,\n            center: this.center,\n            maxPullStrengthDistance: this.maxPullStrengthDistance,\n            maxPullStrengthMultiplier: this.maxPullStrengthMultiplier,\n            minPullStrengthDistance: this.minPullStrengthDistance,\n            minPullStrengthMultiplier: this.minPullStrengthMultiplier,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new GravityWithCenter(particleEffect);\n        loadSerializedProperty(object, GravityWithCenter, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravityWithCenter.moduleTypeId = \"GravityWithCenter\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random initial rotation to each particle.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   6.2832\n * }\n */\nexport class RandomRotation extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotation as radians.\n         */\n        this.min = 0;\n        /**\n         * Max rotation as radians.\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = randomInRange(this.min, this.max);\n            particle.rotation = angleRad;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotation.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotation(particleEffect);\n        loadSerializedProperty(object, RandomRotation, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotation, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotation.moduleTypeId = \"RandomRotation\";\n","import { AlphaDestructor } from '../destructors/alphaDestructor.js';\nimport { LifeTimeDestructor } from '../destructors/lifeTimeDestructor.js';\nimport { OutsideBoundsDestructor } from '../destructors/outsideBoundsDestructor.js';\nimport { PointGenerator } from '../generators/pointGenerator.js';\nimport { AlphaRange } from '../initializers/alphaRange.js';\nimport { LifeTimeRange } from '../initializers/lifeTimeRange.js';\nimport { RandomAngleVelocity } from '../initializers/randomAngleVelocity.js';\nimport { RandomScale } from '../initializers/randomScale.js';\nimport { RandomColor } from '../initializers/randomColor.js';\nimport { RandomRotationalVelocity } from '../initializers/randomRotationalVelocity.js';\nimport { RandomVelocity } from '../initializers/randomVelocity.js';\nimport { AlphaOverLifetime } from '../modifiers/alphaOverLifetime.js';\nimport { DeaccelerationOverLifetime } from '../modifiers/deaccelerationOverLifetime.js';\nimport { Gravity } from '../modifiers/gravity.js';\nimport { CircleLoadingGenerator } from '../generators/circleLoadingGenerator.js';\nimport { ShapeGenerator } from '../generators/shapeGenerator.js';\nimport { GravityWithCenter } from '../modifiers/gravityWithCenter.js';\nimport { RandomRotation } from '../initializers/randomRotation.js';\n/**\n * This list should contain all Modules in the library.\n *\n * It is required for deserializing Modules from JS objects.\n */\nexport const moduleTypeRegistry = [\n    AlphaDestructor,\n    LifeTimeDestructor,\n    OutsideBoundsDestructor,\n    PointGenerator,\n    AlphaRange,\n    LifeTimeRange,\n    RandomAngleVelocity,\n    RandomVelocity,\n    AlphaOverLifetime,\n    DeaccelerationOverLifetime,\n    Gravity,\n    RandomScale,\n    RandomColor,\n    RandomRotationalVelocity,\n    CircleLoadingGenerator,\n    ShapeGenerator,\n    GravityWithCenter,\n    RandomRotation,\n];\n","import { moduleTypeRegistry } from \"./serialization/moduleRegistry\";\nexport class ParticleEffect {\n    /**\n     * **NOTE: ParticleEffects should be created with `ParticleSystem.addParticleEffect()` instead of using the constructor directly**\n     */\n    constructor(particleSystem) {\n        this.modules = [];\n        this.particles = [];\n        this.isInitialized = false;\n        /**\n         * List of texture names that are randomly assigned to particles of this effect.\n         */\n        this.textures = [];\n        this.addParticleListeners = [];\n        this.destroyParticleListeners = [];\n        this.particleSystem = particleSystem;\n    }\n    init() {\n        this.modules.forEach((module) => {\n            module.init();\n        });\n    }\n    update(dt) {\n        const len = this.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particles[i];\n            particle.timeLived += dt;\n            particle.position.x += particle.velocity.x * dt;\n            particle.position.y += particle.velocity.y * dt;\n            particle.rotation += particle.rotationalVelocity * dt;\n        }\n        this.modules.forEach((module) => {\n            if (module.active) {\n                module.update(dt);\n            }\n        });\n        // Remove destroyed particles\n        for (let i = 0; i < this.particles.length; i += 1) {\n            const particle = this.particles[i];\n            if (particle.destroyed) {\n                this.particles.splice(i, 1);\n                i -= 1;\n            }\n        }\n    }\n    addParticle(particle) {\n        this.particles.push(particle);\n        if (this.textures.length > 0) {\n            // Assign particle texture.\n            particle.texture = this.textures[Math.round(Math.random() * (this.textures.length - 1))];\n        }\n        this.addParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    /**\n     * Destroy a particle, removing it from further updates.\n     *\n     * This can be safely called while iterating over `particles`, the array is not modified immediately.\n     */\n    destroyParticle(particle) {\n        // Modifying particle arrays can be heavy, better mark particles that should be removed and modify array just once during update.\n        particle.destroyed = true;\n        this.destroyParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    static fromObject(particleSystem, effectObject, options) {\n        var _a;\n        const hideWarnings = (options === null || options === void 0 ? void 0 : options.hideWarnings) || false;\n        const effect = particleSystem.addParticleEffect();\n        effect.textures = effectObject.textures;\n        (_a = effectObject.modules) === null || _a === void 0 ? void 0 : _a.forEach((moduleObject) => {\n            const moduleTypeReference = moduleTypeRegistry.find((moduleType) => moduleType.moduleTypeId === moduleObject.moduleTypeId);\n            if (!moduleTypeReference) {\n                // The module type can't be identified. This probably means that it was saved with a different library version than the active one.\n                if (!hideWarnings)\n                    console.warn(`fromObject unidentified module type: \"${moduleObject.moduleTypeId}\"`);\n                return;\n            }\n            const module = moduleTypeReference.fromObject(effect, moduleObject, hideWarnings);\n            effect.modules.push(module);\n        });\n        return effect;\n    }\n}\n","import { ParticleEffect } from \"./particleEffect\";\nexport class ParticleSystem {\n    constructor() {\n        this.effects = [];\n        this.addParticleEffectListeners = [];\n        this.removeParticleEffectListeners = [];\n    }\n    update(dt) {\n        this.effects.forEach((effect) => {\n            if (!effect.isInitialized) {\n                effect.init();\n                effect.isInitialized = true;\n            }\n            effect.update(dt);\n        });\n    }\n    addParticleEffect() {\n        const particleEffect = new ParticleEffect(this);\n        this.effects.push(particleEffect);\n        this.addParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        return particleEffect;\n    }\n    removeParticleEffect(particleEffect) {\n        const i = this.effects.indexOf(particleEffect);\n        if (i <= 0) {\n            this.effects.splice(i, 1);\n            this.removeParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        }\n    }\n    /**\n     * Wrap the properties of the whole particle system into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            effects: this.effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules.map((module) => module.toObject()),\n            })),\n        };\n    }\n    static fromObject(object, options) {\n        const particleSystem = new ParticleSystem();\n        const effectObjects = object.effects;\n        effectObjects.forEach((effectObject) => {\n            ParticleEffect.fromObject(particleSystem, effectObject, options);\n        });\n        return particleSystem;\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./ParticleSandbox.css\";\nimport * as PIXI from \"pixi.js\";\nimport { ParticleSystem } from \"modular-particle-system/particleSystem\";\n\nconst ParticleSandbox = (props) => {\n  const { effects } = props;\n\n  const [renderer, setRenderer] = useState(undefined);\n\n  const [visibleParticlesCount, setVisibleParticlesCount] = useState(0);\n\n  const [runTime, setRunTime] = useState(0);\n\n  useEffect(() => {\n    const container = document.getElementById(\"particleSandbox\");\n    const app = new PIXI.Application({\n      resizeTo: container,\n      backgroundAlpha: 0,\n    });\n    container.appendChild(app.view);\n    app.view.height = container.clientHeight;\n    // #region PIXI Renderer\n\n    const unusedSprites = [];\n    const activeSprites = new Map();\n    const registerParticleEffect = (particleEffect, effectInfo) => {\n      particleEffect.addParticleListeners.push((particle) =>\n        handleParticleAdd(effectInfo, particle)\n      );\n      particleEffect.destroyParticleListeners.push((particle) =>\n        handleParticleDestroy(particle)\n      );\n    };\n    const handleParticleAdd = (effectInfo, particle) => {\n      // Get sprite for rendering particle.\n      let sprite = unusedSprites.pop();\n      if (!sprite) {\n        // No sprites, make a new one.\n        sprite = new PIXI.Sprite();\n        sprite.blendMode = PIXI.BLEND_MODES.ADD;\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        app.stage.addChild(sprite);\n      }\n      // Prepare sprite for rendering.\n      sprite.visible = true;\n\n      // Save the relation between the particle and sprite.\n      activeSprites.set(particle, sprite);\n    };\n    const handleParticleDestroy = (particle) => {\n      // Get sprite that is used to render the destroyed particle.\n      const sprite = activeSprites.get(particle);\n      if (sprite) {\n        // Remove sprite from rendering.\n        sprite.visible = false;\n        // Remove sprite and particle from list of active sprites.\n        activeSprites.delete(particle);\n        // Add sprite to list of unused sprites.\n        unusedSprites.push(sprite);\n      }\n    };\n    const updateRendering = () => {\n      const width = app.view.width;\n      const height = app.view.height;\n      const center = { x: width / 2, y: height / 2 };\n\n      activeSprites.forEach((sprite, particle) => {\n        sprite.x = center.x + particle.position.x;\n        sprite.y = center.y + particle.position.y;\n        sprite.scale.x = particle.scale;\n        sprite.scale.y = particle.scale;\n        sprite.alpha = particle.alpha;\n        sprite.tint = PIXI.utils.rgb2hex([\n          particle.color.r,\n          particle.color.g,\n          particle.color.b,\n        ]);\n        sprite.rotation = particle.rotation;\n        sprite.texture = PIXI.utils.TextureCache[particle.texture];\n      });\n    };\n    const reset = () => {\n      const allParticles = Array.from(activeSprites.keys());\n      allParticles.forEach(handleParticleDestroy);\n    };\n    // #endregion\n\n    setRenderer({ app, registerParticleEffect, updateRendering, reset });\n\n    return () => {\n      app.destroy(true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!renderer) {\n      return;\n    }\n    const { app, updateRendering, registerParticleEffect, reset } = renderer;\n\n    reset();\n\n    const particleSystem = ParticleSystem.fromObject(\n      {\n        effects,\n      },\n      { hideWarnings: true }\n    );\n    const particleEffects = particleSystem.effects;\n\n    particleEffects.forEach((particleEffect, i) =>\n      registerParticleEffect(particleEffect, effects[i])\n    );\n\n    let runTimeCounter = 0;\n    const update = () => {\n      const dt = app.ticker.elapsedMS / 1000;\n      runTimeCounter += dt;\n      setRunTime(runTimeCounter);\n      particleSystem.update(dt);\n      updateRendering();\n\n      const particlesCount = particleEffects.reduce(\n        (prev, cur) => prev + cur.particles.length,\n        0\n      );\n      setVisibleParticlesCount(particlesCount);\n    };\n    app.ticker?.add(update);\n\n    return () => {\n      app.ticker?.remove(update);\n    };\n  }, [effects, renderer]);\n\n  return (\n    <div className=\"particleSandbox\">\n      <div className=\"particleSandbox-gridColumns\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridColumn\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-gridRows\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridRow\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-canvas\" id=\"particleSandbox\"></div>\n      <div className={`particleSandbox-stats`}>\n        <span>{`Run time ${runTime.toFixed(2)}`}</span>\n        <span>{`Particles ${visibleParticlesCount}`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ParticleSandbox;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport EffectsConfigurationPanel from \"./EffectsConfigurationPanel/EffectsConfigurationPanel\";\nimport ProjectToolbar from \"./ProjectToolbar\";\nimport ParticleSandbox from \"./ParticleSandbox\";\nimport \"./Editor.css\";\nimport * as PIXI from \"pixi.js\";\nimport { downloadObject } from \"../other/utils\";\n\nconst globalState = {\n  particleModules: [],\n  easingFunctions: [],\n  shapes: [],\n  /**\n   * Object where key = name of sprite and value = PIXI.js Texture\n   */\n  availableTextures: {},\n  presetEffects: [],\n};\nexport const globalStateContext = createContext(globalState);\n\nconst Editor = (props) => {\n  const [effects, setEffects] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const { particleModules } = useContext(globalStateContext);\n\n  useEffect(() => {\n    // Load config files.\n    const promiseCoreLibraryConfig = fetch(\"config.modularParticleSystem.json\")\n      .then((r) => r.json())\n      .then((coreLibraryConfig) => {\n        console.log(\"loaded core library config\");\n        const { particleModules, easingFunctions, shapes } = coreLibraryConfig;\n        globalState.particleModules = particleModules;\n        globalState.easingFunctions = easingFunctions;\n        globalState.shapes = shapes;\n\n        setEffects(\n          defaultParticleSystemConf.map((effect) =>\n            loadParticleEffectDefaults(effect, particleModules)\n          )\n        );\n      });\n\n    const promiseSpriteSheets = fetch(\"config.spritesheets.json\")\n      .then((r) => r.json())\n      .then((spriteSheetNames) => {\n        console.log(\"loaded spritesheet names\");\n        const loader = PIXI.Loader.shared;\n        if (!loader.resources.spritesheet) {\n          spriteSheetNames.forEach((name) => {\n            loader.add(name, `sprites/${name}`);\n          });\n          loader.load();\n\n          return new Promise((resolve) => {\n            loader.onComplete.once((_, resources) => {\n              console.log(\"loaded spritesheets\");\n              const availableTexturesList = Object.values(resources).map(\n                (resource) => resource.textures\n              );\n              const availableTextures = availableTexturesList.reduce(\n                (prev, cur) => ({ ...prev, ...cur }),\n                {}\n              );\n\n              globalState.availableTextures = availableTextures;\n\n              resolve();\n            });\n          });\n        }\n      });\n\n    const promisePresetEffects = fetch(\"config.presetParticleEffects.json\")\n      .then((r) => r.json())\n      .then((presetEffects) => {\n        console.log(\"loaded preset effects\");\n        globalState.presetEffects = presetEffects;\n      });\n\n    Promise.all([\n      promiseCoreLibraryConfig,\n      promiseSpriteSheets,\n      promisePresetEffects,\n    ]).then((_) => {\n      setLoading(false);\n    });\n  }, []);\n\n  const refLoadFileInput = useRef(null);\n\n  return loading ? (\n    <div className=\"editor-loading\">Loading...</div>\n  ) : (\n    <globalStateContext.Provider value={globalState}>\n      <div className=\"editor\">\n        <ProjectToolbar\n          restart={() => {\n            setEffects([...effects]);\n          }}\n          saveToFile={() => {\n            const particleSystemObject = {\n              effects: effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules,\n              })),\n            };\n            downloadObject(particleSystemObject, \"particleSystem.json\");\n          }}\n          loadPreset={(particleSystemData) => {\n            setEffects(particleSystemData.effects);\n          }}\n          loadFromFile={() => {\n            const fileInput = refLoadFileInput.current;\n            if (!fileInput) return;\n            fileInput.click();\n          }}\n        />\n        <div className=\"editor-workspace\">\n          <ParticleSandbox effects={effects} />\n          <EffectsConfigurationPanel\n            effects={effects}\n            updateEffects={(updatedEffects) => {\n              updatedEffects = updatedEffects.map((effect) =>\n                loadParticleEffectDefaults(effect, particleModules)\n              );\n              setEffects(updatedEffects);\n            }}\n          />\n        </div>\n      </div>\n      <input\n        className=\"editor-fileInput\"\n        type={\"file\"}\n        ref={refLoadFileInput}\n        accept={\".json\"}\n        onChange={async (e) => {\n          try {\n            const file = e.target.files[0];\n            const loadedParticleSystem = await new Response(file).json();\n            setEffects(loadedParticleSystem.effects);\n          } catch (e) {\n            alert(`Unexpected error while loading file.\\n${e.message}`);\n          }\n        }}\n      />\n    </globalStateContext.Provider>\n  );\n};\n\nconst defaultParticleSystemConf = [\n  {\n    textures: [\"generic/ball.png\"],\n    modules: [\n      {\n        moduleTypeId: \"PointGenerator\",\n      },\n      {\n        moduleTypeId: \"RandomAngleVelocity\",\n        min: 50,\n        max: 100,\n      },\n      {\n        moduleTypeId: \"RandomScale\",\n        min: 0.5,\n        max: 0.8,\n      },\n      {\n        moduleTypeId: \"RandomColor\",\n      },\n      {\n        moduleTypeId: \"LifeTimeRange\",\n      },\n      {\n        moduleTypeId: \"AlphaOverLifetime\",\n      },\n      {\n        moduleTypeId: \"LifeTimeDestructor\",\n      },\n    ],\n  },\n];\n\nconst loadParticleEffectDefaults = (effect, particleModulesInfo) => {\n  // Assign any missing properties to their defaultValue\n  // Show warning for any missing defaultValues\n\n  const effectResult = { textures: effect.textures, modules: [] };\n  effect.modules.forEach((module) => {\n    const moduleResult = { ...module };\n    const moduleInfo = particleModulesInfo.find(\n      (info) => info.moduleTypeId === module.moduleTypeId\n    );\n    Object.entries(moduleInfo.properties).forEach(\n      ([propertyKey, propertyInfo]) => {\n        const curValue = moduleResult[propertyKey];\n        if (curValue !== undefined) return;\n        if (!(\"defaultValue\" in propertyInfo)) {\n          console.warn(\n            `Missing property @defaultValue ${module.moduleTypeId}: ${propertyKey}`\n          );\n          return;\n        }\n\n        let defaultValue = propertyInfo.defaultValue;\n        // defaultValue info is always parsed as strings\n        // Casting to the proper JS data type is important here so that \"save to file\" works correctly.\n\n        if (propertyInfo.type === \"Number\") {\n          try {\n            defaultValue = Number(defaultValue);\n          } catch (e) {\n            console.error(`Number defaultValue parsing error ${defaultValue}`);\n          }\n        } else if (propertyInfo.type === \"Boolean\") {\n          defaultValue = defaultValue.toLowerCase() === \"true\" ? true : false;\n        } else if (propertyInfo.type === \"EasingFunction\") {\n          // Load default value as string\n          if (typeof defaultValue !== \"string\")\n            throw new Error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n        } else if (\n          propertyInfo.type === \"Range\" ||\n          propertyInfo.type === \"Burst[]\" ||\n          propertyInfo.type === \"Position\" ||\n          propertyInfo.type === \"Color[]\" ||\n          propertyInfo.type === \"Shape\"\n        ) {\n          try {\n            defaultValue = JSON.parse(defaultValue);\n          } catch (e) {\n            console.error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n          }\n        } else {\n          throw new Error(`Unhandled defaultValue type: ${propertyInfo.type}`);\n        }\n\n        moduleResult[propertyKey] = defaultValue;\n      }\n    );\n    effectResult.modules.push(moduleResult);\n  });\n  return effectResult;\n};\n\nexport default Editor;\n","export const downloadObject = (obj, filename) => {\n  var blob = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  var url = URL.createObjectURL(blob);\n  var elem = document.createElement(\"a\");\n  elem.href = url;\n  elem.download = filename;\n  document.body.appendChild(elem);\n  elem.click();\n  document.body.removeChild(elem);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/Editor\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}