{"version":3,"sources":["components/EffectsConfigurationPanel/ModuleProperty/NumberProperty.js","components/EffectsConfigurationPanel/ModuleProperty/PositionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/RangeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ColorPaletteProperty.js","components/EffectsConfigurationPanel/ModuleProperty/EasingFunctionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ShapeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BurstListProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BooleanProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ModuleProperty.js","components/EffectsConfigurationPanel/Module.js","components/EffectsConfigurationPanel/TextureSelector.js","components/EffectsConfigurationPanel/Effect.js","components/EffectsConfigurationPanel/EffectsConfigurationPanel.js","components/ProjectToolbar.js","../../modular-particle-system-webgl-renderer/release/index.js","../../modular-particle-system/release/module.js","../../modular-particle-system/release/destructors/alphaDestructor.js","../../modular-particle-system/release/destructors/lifeTimeDestructor.js","../../modular-particle-system/release/serialization/moduleSerialization.js","../../modular-particle-system/release/utilities.js","../../modular-particle-system/release/shapes/circle.js","../../modular-particle-system/release/shapes/rectangle.js","../../modular-particle-system/release/shapes/triangle.js","../../modular-particle-system/release/shapes/shape.js","../../modular-particle-system/release/destructors/outsideBoundsDestructor.js","../../modular-particle-system/release/particle.js","../../modular-particle-system/release/generators/generator.js","../../modular-particle-system/release/generators/pointGenerator.js","../../modular-particle-system/release/initializers/alphaRange.js","../../modular-particle-system/release/initializers/lifeTimeRange.js","../../modular-particle-system/release/initializers/randomAngleVelocity.js","../../modular-particle-system/release/initializers/randomScale.js","../../modular-particle-system/release/initializers/randomColor.js","../../modular-particle-system/release/initializers/randomRotationalVelocity.js","../../modular-particle-system/release/initializers/randomVelocity.js","../../modular-particle-system/release/easing.js","../../modular-particle-system/release/modifiers/alphaOverLifetime.js","../../modular-particle-system/release/modifiers/deaccelerationOverLifetime.js","../../modular-particle-system/release/modifiers/gravity.js","../../modular-particle-system/release/generators/circleLoadingGenerator.js","../../modular-particle-system/release/generators/shapeGenerator.js","../../modular-particle-system/release/modifiers/gravityWithCenter.js","../../modular-particle-system/release/initializers/randomRotation.js","../../modular-particle-system/release/serialization/moduleRegistry.js","../../modular-particle-system/release/particleEffect.js","../../modular-particle-system/release/particleSystem.js","components/ParticleSandbox.js","components/Editor.js","other/utils.js","reportWebVitals.js","index.js"],"names":["NumberProperty","props","value","name","propertyInfo","onChange","tooltip","min","max","step","className","title","type","e","newValue","Number","target","console","warn","PositionProperty","x","y","RangeProperty","ColorPaletteProperty","within256range","num","length","map","color","i","r","newPropertyValue","g","b","onClick","splice","EasingFunctionProperty","easingFunctions","useContext","globalStateContext","selectedEasingFunction","easingFunction","ShapeProperty","shapes","shape","find","el","selectedShape","defaultValue","JSON","parse","error","Array","from","Object","entries","filter","entry","BurstListProperty","sort","a","time","burst","count","undefined","repeat","BooleanProperty","checked","ModuleProperty","toLowerCase","Error","Module","module","nKey","updateModule","removeModule","moveModuleUp","moveModuleDown","particleModules","moduleInfo","info","moduleTypeId","moduleCategories","Set","moduleType","category","item","localeCompare","moduleCategory","label","i2","properties","iProperty","key","updatedModule","TextureSelector","selectedTextures","updateTextures","availableTextures","selectedTextureName","textureName","iTexture","Effect","effect","updateEffect","removeEffect","textures","updatedTextures","updatedEffect","newModule","modules","unshift","iModule","indexOf","EffectsConfigurationPanel","effects","updateEffects","updatedEffects","iEffect","ProjectToolbar","restart","saveToFile","loadFromFile","loadPreset","presetEffects","useState","presetsVisible","setPresetsVisible","presetEffect","data","style","backgroundImage","thumbnail","coordsPixels","defaultOpts","autoUpdate","maxParticlesCount","loggingEnabled","coordinateSystem","Renderer","opts","assign","particleSystem","container","canvas","document","createElement","position","left","top","append","gl","getContext","vertexShaderSrc","maxParticlesDataBufferSize","MAX_SAFE_INTEGER","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","infoLog","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","shader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","useProgram","locViewportSize","getUniformLocation","locTexture","vertexBufferRectangle","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribDivisor","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","particlesDataBuffer","particlesDataBufferSize","particlesData","STREAM_DRAW","loadedTextures","keys","forEach","loadTextureData","textureData","index","texture","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","push","timeEnd","desiredTextureIndex","findIndex","uniform1i","HTMLImageElement","complete","addEventListener","loadImage","removeEventListener","message","update","tPrev","window","performance","now","rFrame","particlesCountPrev","requestAnimationFrame","frame","tNow","tDelta","Math","particlesCount","reduce","prev","cur","particles","bounds","getBoundingClientRect","width","floor","height","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","flat","particleCount","particlesDataSize","increasedSize","renderedParticlesCount","particle","dataPos","alpha","rotation","scale","uniform2f","drawArraysInstanced","TRIANGLE_FAN","render","isDestroyed","destroy","cancelAnimationFrame","removeChild","deleteProgram","deleteBuffer","deleteTexture","particleEffect","this","active","dt","AlphaDestructor","len","destroyParticle","object","hideWarnings","LifeTimeDestructor","timeLived","lifeTime","loadSerializedProperty","deserializeValue","deserializedValue","deserializePrimitiveDataType","serializedPrimitiveDataType","lerp","clamp","randomInRange","random","vec2","subtract","multiply","v","sqrt","pow","normalize","lengthBetween","v1","v2","lerpColor","factor","aLab","rgbToLab","bLab","lerpLab","l","lerbRGB","labToRgb","rgb","z","lab","circleLogic","getRandomPosition","angle","PI","radius","center","cos","sin","getRandomEdgePosition","containsPosition","rectangleLogic","abs","randomEdgeLength","minX","minY","maxX","maxY","triangleLogic","r1","r2","s1","v3","d1","sign","d2","d3","ab","bc","ac","positionOnSegment","positionA","positionB","lengthAB","lengthAK","ratio","p1","p2","p3","deserializeShape","serializedShape","selectShapeLogic","OutsideBoundsDestructor","Particle","velocity","rotationalVelocity","destroyed","ParticleGenerator","arguments","interval","_timer","bursts","_updateCounter","burstTimestamp","ceil","generateParticle","PointGenerator","addParticle","AlphaRange","handleParticleAdd","addParticleListeners","LifeTimeRange","RandomAngleVelocity","angleRad","RandomScale","RandomColor","palette","interpolate","randomPalettePosition","iPaletteStart","colorA","colorB","round","RandomRotationalVelocity","RandomVelocity","randomX","randomY","EasingFunctions","linear","easeOutSine","easeOutCubic","easeOutExpo","easeOutCirc","easeOutBack","c1","easeOutElastic","c4","serializeEasing","deserializeEasing","serializedEasing","AlphaOverLifetime","easing","_alphaOverLifetime_initialAlpha","initialAlpha","DeaccelerationOverLifetime","_velocityOverLifetime_initialVelocity","xPrev","xNow","animationPrev","animationNow","initialVelocity","deacceleration","Gravity","strength","CircleLoadingGenerator","nextParticleAngle","angleStep","ShapeGenerator","edgesOnly","getRandomPositionInsideShape","GravityWithCenter","maxPullStrengthDistance","maxPullStrengthMultiplier","minPullStrengthDistance","minPullStrengthMultiplier","toCenter","particleDistance","pullStrengthMultiplier","pullStrength","pullDirection","RandomRotation","moduleTypeRegistry","ParticleEffect","isInitialized","destroyParticleListeners","init","clbk","effectObject","options","_a","addParticleEffect","moduleObject","moduleTypeReference","fromObject","ParticleSystem","addParticleEffectListeners","removeParticleEffectListeners","toObject","ParticleSandbox","setTextures","setParticleSystem","refRuntime","useRef","refParticleCount","useEffect","runTimeCounter","tPrevUpdate","requestUpdate","current","innerHTML","toFixed","getElementById","textureSources","img","Image","src","webglRenderer","fill","_","id","ref","globalState","createContext","defaultParticleSystemConf","loadParticleEffectDefaults","particleModulesInfo","effectResult","moduleResult","propertyKey","Editor","setEffects","loading","setLoading","promiseCoreLibraryConfig","fetch","then","json","coreLibraryConfig","log","promiseTextures","textureNames","promisePresetEffects","Promise","all","refLoadFileInput","Provider","obj","filename","blob","Blob","stringify","url","URL","createObjectURL","elem","href","download","body","appendChild","click","downloadObject","particleSystemData","fileInput","accept","file","files","Response","loadedParticleSystem","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9e058281.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NumberProperty.css\";\n\nconst NumberProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"number-layout field\">\n      <span className=\"number-name\" title={tooltip}>\n        {name}\n      </span>\n      <input\n        className=\"number-field\"\n        type={\"number\"}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={(e) => {\n          let newValue;\n          try {\n            newValue = Number(e.target.value);\n          } catch (e) {\n            console.warn(`NumberProperty could not parse Number`);\n          }\n          onChange(newValue);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default NumberProperty;\n","import React from \"react\";\nimport \"./PositionProperty.css\";\n\nconst PositionProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"field position-div\">\n      <span title={name}>{name}</span>\n      <div className=\"position-child-div\">\n        <span>X</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.x}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (min)`);\n            }\n            onChange({ x: newValue, y: value.y });\n          }}\n        ></input>\n      </div>\n      <div className=\"position-child-div\">\n        <span>Y</span>\n        <input\n          className=\"position-number-field\"\n          type={\"number\"}\n          value={value.y}\n          step={10}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`positionProperty could not parse Number (max)`);\n            }\n            onChange({ x: value.x, y: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionProperty;\n","import React from \"react\";\nimport \"./RangeProperty.css\";\n\nconst RangeProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"field range-div\">\n      <span title={tooltip}>{name}</span>\n      <div className=\"range-child-div\">\n        <span>min</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.min}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (min)`);\n            }\n            onChange({ min: newValue, max: value.max });\n          }}\n        ></input>\n      </div>\n      <div className=\"range-child-div\">\n        <span>max</span>\n        <input\n          className=\"range-number-field\"\n          type={\"number\"}\n          value={value.max}\n          min={min}\n          max={max}\n          step={step}\n          onChange={(e) => {\n            let newValue;\n            try {\n              newValue = Number(e.target.value);\n            } catch (e) {\n              console.warn(`RangeProperty could not parse Number (max)`);\n            }\n            onChange({ min: value.min, max: newValue });\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default RangeProperty;\n","import React from \"react\";\nimport \"./ColorPaletteProperty.css\";\n\nconst ColorPaletteProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  const within256range = (num) => {\n    if (num > 255) return 255;\n    if (num < 0) return 0;\n\n    return num;\n  };\n\n  return (\n    <div className=\"colorPalette-div field\">\n      <span>{name}</span>\n      <div className=\"colorPalette-nested-div\">\n        {value.length > 0 && (\n          <table className=\"colorPalette-table\">\n            <thead>\n              <tr>\n                <th>r</th>\n                <th>g</th>\n                <th>b</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value.map((color, i) => (\n                <tr key={`row-color-${i}`}>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.r * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          if (e.target.value > 255) e.target.value = 255;\n                          if (e.target.value < 0) e.target.value = 0;\n                          newValue = Number(e.target.value) / 255;\n                        } catch (e) {\n                          console.warn(\n                            `ColorPaletteProperty could not parse Number`\n                          );\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          r: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.g * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          g: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"colorPalette-number-field\"\n                      type=\"number\"\n                      value={color.b * 255}\n                      min={0}\n                      max={255}\n                      step={1}\n                      onChange={(e) => {\n                        let newValue;\n                        try {\n                          newValue =\n                            within256range(Number(e.target.value)) / 255;\n                        } catch (e) {\n                          console.warn(`ColorProperty could not parse Number`);\n                        }\n                        const newPropertyValue = [...value];\n                        newPropertyValue[i] = {\n                          ...newPropertyValue[i],\n                          b: newValue,\n                        };\n                        onChange(newPropertyValue);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <div\n                      className=\"colorPalette-remove-color\"\n                      onClick={() => {\n                        const newValue = [...value];\n                        newValue.splice(i, 1);\n                        onChange(newValue);\n                      }}\n                    ></div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        <div\n          className=\"colorPalette-add-color\"\n          onClick={() => {\n            const newValue = [...value, { r: 1, g: 1, b: 1 }];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPaletteProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./EasingFunctionProperty.css\";\n\nconst EasingFunctionProperty = (props) => {\n  const { name, value, onChange } = props;\n  const { easingFunctions } = useContext(globalStateContext);\n\n  return (\n    <div className=\"easingFunction-div field\">\n      <span className=\"easingFunction-name\">{name}</span>\n      <select\n        className=\"easingFunction-dropdown\"\n        value={value}\n        onChange={(e) => {\n          const selectedEasingFunction = e.target.value;\n          onChange(selectedEasingFunction);\n        }}\n      >\n        {easingFunctions.map((easingFunction) => (\n          <option key={easingFunction} className=\"easingFunction-option\">\n            {easingFunction}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default EasingFunctionProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./ShapeProperty.css\";\nimport ModuleProperty from \"./ModuleProperty\";\n\nconst ShapeProperty = (props) => {\n  const { value, name, onChange } = props;\n  const { shapes } = useContext(globalStateContext);\n  const shape = shapes.find((el) => el.type === value.type);\n  return (\n    <div className=\"shape-div field\">\n      <div className=\"shape-headerContainer\">\n        <span className=\"shape-name\">{name}</span>\n        <select\n          className=\"shape-dropdown\"\n          value={value.type}\n          onChange={(e) => {\n            const selectedShape = shapes.find(\n              (el) => el.type === e.target.value\n            );\n            try {\n              const defaultValue = JSON.parse(selectedShape.defaultValue);\n              onChange(defaultValue);\n            } catch (e) {\n              console.error(\n                `Error parsing shape @defaultValue: ${selectedShape}`\n              );\n            }\n          }}\n        >\n          {shapes.map((shape) => (\n            <option key={shape.type} className=\"shape-option\">\n              {shape.type}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"shape-valuesContainer\">\n        {Array.from(Object.entries(shape))\n          .filter((entry) => entry[0] !== \"type\" && entry[0] !== \"defaultValue\")\n          .map((entry, i) => {\n            return (\n              <ModuleProperty\n                name={entry[0]}\n                value={value[entry[0]]}\n                propertyInfo={{\n                  type: entry[1],\n                }}\n                key={`shape-value-${i}`}\n                onChange={(newPropertyValue) => {\n                  const newValue = { ...value };\n                  newValue[entry[0]] = newPropertyValue;\n                  onChange(newValue);\n                }}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default ShapeProperty;\n","import React from \"react\";\nimport \"./BurstListProperty.css\";\n\nconst BurstListProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"burstListProperty-div field\">\n      <span>{name}</span>\n      <div className=\"burstListProperty-nested-div\">\n        {value.length > 0 && (\n          <table className=\"burstListProperty-table\">\n            <thead>\n              <tr>\n                <th>time</th>\n                <th>count</th>\n                <th>repeat</th>\n              </tr>\n            </thead>\n            <tbody>\n              {value\n                .sort((a, b) => a.time - b.time)\n                .map((burst, i) => (\n                  <tr key={`burst-row-${i}`}>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.time}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            time: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.count}\n                        min={0}\n                        step={10}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            count: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className=\"burstListProperty-number-field\"\n                        type=\"number\"\n                        value={burst.repeat !== undefined ? burst.repeat : 0}\n                        min={0}\n                        step={0.5}\n                        onChange={(e) => {\n                          let newValue;\n                          try {\n                            newValue = Number(e.target.value);\n                            if (newValue === 0) newValue = undefined;\n                          } catch (e) {\n                            console.warn(\n                              `BurstListProperty could not parse Number`\n                            );\n                          }\n                          const newPropertyValue = [...value];\n                          newPropertyValue[i] = {\n                            ...newPropertyValue[i],\n                            repeat: newValue,\n                          };\n                          onChange(newPropertyValue);\n                        }}\n                      ></input>\n                    </td>\n                    <td>\n                      <div\n                        className=\"burstListProperty-remove-burst\"\n                        onClick={() => {\n                          const newValue = [...value];\n                          newValue.splice(i, 1);\n                          onChange(newValue);\n                        }}\n                      ></div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n        <div\n          className=\"burstListProperty-add-burst\"\n          onClick={() => {\n            const newValue = [\n              ...value,\n              { time: 0, count: 20, repeat: undefined },\n            ];\n            onChange(newValue);\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default BurstListProperty;\n","import React from \"react\";\nimport \"./BooleanProperty.css\";\n\nconst BooleanProperty = (props) => {\n  const { value, name, onChange } = props;\n\n  return (\n    <div className=\"boolean-div field\">\n      <span>{name}</span>\n      <input\n        className=\"boolean-field\"\n        checked={value}\n        type={\"checkbox\"}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default BooleanProperty;\n","import React from \"react\";\nimport \"./ModuleProperty.css\";\nimport NumberProperty from \"./NumberProperty\";\nimport PositionProperty from \"./PositionProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport ColorPaletteProperty from \"./ColorPaletteProperty\";\nimport EasingFunctionProperty from \"./EasingFunctionProperty\";\nimport ShapeProperty from \"./ShapeProperty\";\nimport BurstListProperty from \"./BurstListProperty\";\nimport BooleanProperty from \"./BooleanProperty\";\n\nconst ModuleProperty = (props) => {\n  const { propertyInfo } = props;\n\n  switch (propertyInfo.type && propertyInfo.type.toLowerCase()) {\n    case \"number\":\n      return <NumberProperty {...props} />;\n    case \"position\":\n      return <PositionProperty {...props} />;\n    case \"range\":\n      return <RangeProperty {...props} />;\n    case \"color[]\":\n      return <ColorPaletteProperty {...props} />;\n    case \"easingfunction\":\n      return <EasingFunctionProperty {...props} />;\n    case \"shape\":\n      return <ShapeProperty {...props} />;\n    case \"burst[]\":\n      return <BurstListProperty {...props} />;\n    case \"boolean\":\n      return <BooleanProperty {...props} />;\n    default:\n      throw new Error(\n        `Unidentified module property type: ${propertyInfo.type}`\n      );\n  }\n};\n\nexport default ModuleProperty;\n","import React, { useContext } from \"react\";\nimport \"./Module.css\";\nimport { globalStateContext } from \"../Editor\";\nimport ModuleProperty from \"./ModuleProperty/ModuleProperty\";\n\nconst Module = (props) => {\n  const {\n    module,\n    nKey,\n    updateModule,\n    removeModule,\n    moveModuleUp,\n    moveModuleDown,\n  } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  const moduleInfo = particleModules.find(\n    (info) => info.moduleTypeId === module.moduleTypeId\n  );\n  if (!moduleInfo) {\n    throw new Error(`Unidentified module: ${module.moduleTypeId}`);\n  }\n\n  const moduleCategories = Array.from(\n    new Set(particleModules.map((moduleType) => moduleType.category))\n  ).filter((item) => item !== undefined);\n\n  return (\n    <div className=\"module\">\n      <div className=\"module-title-layout field\">\n        <select\n          className=\"module-typeDropdown\"\n          value={module.moduleTypeId}\n          onChange={(e) => {\n            const value = e.target.value;\n            const updatedModule = { moduleTypeId: value };\n            updateModule(updatedModule);\n          }}\n        >\n          {moduleCategories\n            .sort((a, b) => a.localeCompare(b))\n            .map((moduleCategory, i) => (\n              <optgroup label={moduleCategory} key={`module-${i}`}>\n                {particleModules\n                  .filter(\n                    (moduleType) => moduleType.category === moduleCategory\n                  )\n                  .map((moduleType, i2) => (\n                    <option\n                      value={moduleType.moduleTypeId}\n                      key={`option-${i2}`}\n                    >\n                      {moduleType.moduleTypeId}\n                    </option>\n                  ))}\n              </optgroup>\n            ))}\n        </select>\n        <div className=\"module-moveContainer\">\n          <div\n            className=\"module-move module-moveUp\"\n            title=\"Move module up\"\n            onClick={() => {\n              moveModuleUp();\n            }}\n          ></div>\n          <div\n            className=\"module-move module-moveDown\"\n            title=\"Move module down\"\n            onClick={() => {\n              moveModuleDown();\n            }}\n          ></div>\n        </div>\n        <div className=\"module-remove\" onClick={() => removeModule()}></div>\n      </div>\n      <div className=\"module-properties\">\n        {Object.entries(moduleInfo.properties).map(\n          ([key, propertyInfo], iProperty) => (\n            <ModuleProperty\n              name={key}\n              value={module[key]}\n              propertyInfo={propertyInfo}\n              key={`${nKey}_property${iProperty}`}\n              onChange={(value) => {\n                const updatedModule = { ...module };\n                updatedModule[key] = value;\n                updateModule(updatedModule);\n              }}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Module;\n","import React, { useContext } from \"react\";\nimport \"./TextureSelector.css\";\nimport { globalStateContext } from \"../Editor\";\n\nconst TextureSelector = (props) => {\n  const { selectedTextures, updateTextures } = props;\n  const { availableTextures } = useContext(globalStateContext);\n  return (\n    <select\n      className=\"textureSelector-dropdown field\"\n      onChange={(e) => {\n        const selectedTextureName = e.target.value;\n        updateTextures([selectedTextureName]);\n      }}\n      value={selectedTextures[0]}\n    >\n      {availableTextures\n        .sort((a, b) => a[0].localeCompare(b[0]))\n        .map((textureName, iTexture) => (\n          <option\n            className=\"textureSelector-option\"\n            key={`texture-${iTexture}`}\n          >\n            {textureName}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nexport default TextureSelector;\n","import React, { useContext } from \"react\";\nimport \"./Effect.css\";\nimport Module from \"./Module\";\nimport { globalStateContext } from \"../Editor\";\nimport TextureSelector from \"./TextureSelector\";\n\nconst Effect = (props) => {\n  const { effect, title, nKey, updateEffect, removeEffect } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  return (\n    <div className=\"effect\">\n      <div className=\"effect-titleDiv\">\n        <span className=\"effect-title\">{title}</span>\n        <div\n          className=\"effect-remove\"\n          onClick={() => {\n            removeEffect();\n          }}\n        ></div>\n      </div>\n      <div className=\"effect-properties\">\n        <TextureSelector\n          selectedTextures={effect.textures}\n          updateTextures={(updatedTextures) => {\n            const updatedEffect = { ...effect, textures: updatedTextures };\n            updateEffect(updatedEffect);\n          }}\n        />\n        <div\n          className=\"effect-addModuleDiv field\"\n          onClick={() => {\n            const newModule = {\n              moduleTypeId: particleModules[0].moduleTypeId,\n            };\n            const updatedEffect = { ...effect };\n            updatedEffect.modules.unshift(newModule);\n            updateEffect(updatedEffect);\n          }}\n        >\n          <div className=\"effect-addModule\"></div>\n          <span>Add module</span>\n        </div>\n        {effect.modules.map((module, iModule) => (\n          <Module\n            module={module}\n            key={`${nKey}_module${iModule}`}\n            nKey={`${nKey}_module${iModule}`}\n            updateModule={(updatedModule) => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules[iModule] = updatedModule;\n              updateEffect(updatedEffect);\n            }}\n            removeModule={() => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(\n                updatedEffect.modules.indexOf(module),\n                1\n              );\n              updateEffect(updatedEffect);\n            }}\n            moveModuleUp={() => {\n              if (iModule <= 0) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule - 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n            moveModuleDown={() => {\n              if (iModule >= effect.modules.length - 1) return;\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(iModule, 1);\n              updatedEffect.modules.splice(iModule + 1, 0, module);\n              updateEffect(updatedEffect);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Effect;\n","import React from \"react\";\nimport \"./EffectsConfigurationPanel.css\";\nimport Effect from \"./Effect\";\n\nconst EffectsConfigurationPanel = (props) => {\n  const { effects, updateEffects } = props;\n\n  return (\n    <div className=\"effectsConfigurationPanel\">\n      <div\n        className=\"effectsConfigurationPanel-addDiv field\"\n        onClick={() => {\n          const newEffect = {\n            textures: [\"ball.png\"],\n            modules: [],\n          };\n          const updatedEffects = [...effects];\n          updatedEffects.unshift(newEffect);\n          updateEffects(updatedEffects);\n        }}\n      >\n        <div className=\"effectsConfigurationPanel-add\"></div>\n        Add effect\n      </div>\n      <span className=\"effectsConfigurationPanel-titleEffects\"></span>\n      {effects.map((effect, iEffect) => (\n        <Effect\n          effect={effect}\n          title={`Effect ${iEffect + 1}`}\n          key={`effect${iEffect}`}\n          nKey={`effect${iEffect}`}\n          updateEffect={(updatedEffect) => {\n            const updatedEffects = [...effects];\n            updatedEffects[iEffect] = updatedEffect;\n            updateEffects(updatedEffects);\n          }}\n          removeEffect={() => {\n            const updatedEffects = [...effects];\n            updatedEffects.splice(updatedEffects.indexOf(effect), 1);\n            updateEffects(updatedEffects);\n          }}\n        />\n      ))}\n      <div className=\"effectsConfigurationPanel-footer\"></div>\n    </div>\n  );\n};\n\nexport default EffectsConfigurationPanel;\n","import React, { useState, useContext } from \"react\";\nimport \"./ProjectToolbar.css\";\nimport { globalStateContext } from \"./Editor\";\n\nconst ProjectToolbar = (props) => {\n  const { restart, saveToFile, loadFromFile, loadPreset } = props;\n\n  const { presetEffects } = useContext(globalStateContext);\n\n  const [presetsVisible, setPresetsVisible] = useState(false);\n\n  return (\n    <div className=\"projectToolbar\">\n      <div className=\"projectToolbar-gap\"></div>\n      <div className=\"projectToolBar-buttons\">\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-restart\"\n          onClick={() => restart()}\n        >\n          <span className=\"projectToolbar-button\">Restart</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-saveToFile\"\n          onClick={() => saveToFile()}\n        >\n          <span className=\"projectToolbar-button\">Save to file</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadPreset\"\n          onClick={() => {\n            setPresetsVisible(!presetsVisible);\n          }}\n        >\n          <span className=\"projectToolbar-button\">Load preset</span>\n          <div\n            className={`projectToolbar-preset-container${\n              presetsVisible ? \" projectToolbar-preset-container-visible\" : \"\"\n            }`}\n          >\n            {presetsVisible &&\n              presetEffects.map((presetEffect, i) => (\n                <div\n                  className=\"projectToolBar-preset-item\"\n                  key={`preset-${i}`}\n                  onClick={() => {\n                    loadPreset(presetEffect.data);\n                    setPresetsVisible(false);\n                  }}\n                >\n                  <div\n                    className=\"projectToolBar-preset-thumbnail\"\n                    style={{\n                      backgroundImage:\n                        presetEffect.thumbnail &&\n                        `url(presetThumbnails/${presetEffect.thumbnail})`,\n                    }}\n                  />\n                  <span className=\"projectToolBar-preset-label\">\n                    {presetEffect.label}\n                  </span>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadFromFile\"\n          onClick={() => loadFromFile()}\n        >\n          <span className=\"projectToolbar-button\">Load from file</span>\n        </div>\n      </div>\n      <div className=\"projectToolbar-gap\"></div>\n    </div>\n  );\n};\n\nexport default ProjectToolbar;\n","// WebGL 2 renderer for \"modular-particle-system\" developed by Niilo Keinänen 2022\n\nconst coordsPixelsCentered = \"pixels-centered\";\nconst coordsPixels = \"pixels\";\n\nconst defaultOpts = {\n  autoUpdate: true,\n  maxParticlesCount: 50000,\n  loggingEnabled: true,\n  coordinateSystem: coordsPixels,\n};\n\nexport const Renderer = (opts) => {\n  const {\n    particleSystem,\n    container,\n    textures,\n    autoUpdate,\n    maxParticlesCount,\n    loggingEnabled,\n    coordinateSystem,\n  } = Object.assign({}, defaultOpts, opts);\n\n  // #region Init\n  if (!particleSystem) {\n    throw new Error(`particleSystem parameter must be supplied!`);\n  }\n\n  if (!container) {\n    throw new Error(`container parameter must be supplied!`);\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.style.left = \"0px\";\n  canvas.style.top = \"0px\";\n  container.append(canvas);\n\n  const gl = canvas.getContext(\"webgl2\");\n\n  // #endregion\n\n  // #region Shader source code\n\n  const locGeometry = 0;\n  const locTexCoord = 1;\n  const locPos = 2;\n  const locColor = 3;\n  const locRotation = 4;\n  const locScale = 5;\n\n  const vertexShaderSrc = `#version 300 es\n  precision mediump float;\n  precision mediump int;\n  layout(location=${locGeometry}) in vec2 aPosGeometry;\n  layout(location=${locTexCoord}) in vec2 aTexCoord;\n  layout(location=${locPos}) in vec2 aPos;\n  layout(location=${locColor}) in vec4 aColor;\n  layout(location=${locRotation}) in float aRotationRad;\n  layout(location=${locScale}) in float aScale;\n  uniform vec2 uViewportSizePx;\n  uniform sampler2D uTexture;\n  out vec4 vColor;\n  out vec2 vTexCoord;\n  void main(void) {\n    ivec2 size = textureSize(uTexture, 0);\n    float rotX = cos(aRotationRad);\n    float rotY = sin(aRotationRad);\n    vec2 rotGeometry = vec2(\n      aPosGeometry.x * rotY + aPosGeometry.y * rotX,\n      aPosGeometry.y * rotY - aPosGeometry.x * rotX\n    );\n    ${\n      coordinateSystem === coordsPixels\n        ? \"gl_Position = vec4(vec2(-1.0, 1.0) + (vec2(aPos.x, -aPos.y) + rotGeometry * vec2(size) * aScale) * 2.0 / uViewportSizePx, 0.0, 1.0);\"\n        : coordinateSystem === coordsPixelsCentered\n        ? \"gl_Position = vec4((vec2(aPos.x, -aPos.y) + rotGeometry * vec2(size) * aScale) * 2.0 / uViewportSizePx, 0.0, 1.0);\"\n        : (() => {\n            console.error(\n              `Unidentified 'coordinateSystem': ${coordinateSystem}`\n            );\n            return \"\";\n          })()\n    }\n    vColor = aColor;\n    vTexCoord = aTexCoord;\n  }`;\n\n  const fragmentShaderSrc = `#version 300 es\n  precision mediump float;\n  precision mediump int;\n  in vec4 vColor;\n  in vec2 vTexCoord;\n  uniform sampler2D uTexture;\n  out vec4 fragColor;\n  void main(void) {\n    vec4 texSample = texture(uTexture, vTexCoord);\n    fragColor = vec4(vColor.rgb, vColor.a * texSample.a);\n  }`;\n\n  // #endregion\n\n  // #region Init shaders and other static render resources\n\n  const attributesPerParticle = 8;\n  const isParticleCountLimited =\n    typeof maxParticlesCount === \"number\" && maxParticlesCount > 0;\n  const maxParticlesDataBufferSize = isParticleCountLimited\n    ? maxParticlesCount * attributesPerParticle\n    : Number.MAX_SAFE_INTEGER;\n\n  gl.enable(gl.BLEND);\n  gl.blendFuncSeparate(\n    gl.SRC_ALPHA,\n    gl.ONE_MINUS_SRC_ALPHA,\n    gl.ONE,\n    gl.ONE_MINUS_SRC_ALPHA\n  );\n\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexShaderSrc);\n  gl.compileShader(vertexShader);\n  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n    const infoLog = gl.getShaderInfoLog(vertexShader);\n    console.error(`Vertex shader compilation error\\n${infoLog}`);\n  }\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentShaderSrc);\n  gl.compileShader(fragmentShader);\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n    const infoLog = gl.getShaderInfoLog(fragmentShader);\n    console.error(`Fragment shader compilation error\\n${infoLog}`);\n  }\n\n  const shader = gl.createProgram();\n  gl.attachShader(shader, vertexShader);\n  gl.attachShader(shader, fragmentShader);\n  gl.linkProgram(shader);\n  if (!gl.getProgramParameter(shader, gl.LINK_STATUS)) {\n    console.error(`Shader program link error\\n${gl.getProgramInfoLog(shader)}`);\n  }\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n  gl.useProgram(shader);\n\n  const locViewportSize = gl.getUniformLocation(shader, \"uViewportSizePx\");\n  const locTexture = gl.getUniformLocation(shader, \"uTexture\");\n\n  const vertexBufferRectangle = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBufferRectangle);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([\n      -0.5, -0.5, 0.0, 0.0, -0.5, 0.5, 0.0, 1.0, 0.5, 0.5, 1.0, 1.0, 0.5, -0.5,\n      1.0, 0.0,\n    ]),\n    gl.STATIC_DRAW\n  );\n  gl.enableVertexAttribArray(locGeometry);\n  gl.vertexAttribDivisor(locGeometry, 0);\n  gl.vertexAttribPointer(\n    locGeometry,\n    2,\n    gl.FLOAT,\n    false,\n    4 * Float32Array.BYTES_PER_ELEMENT,\n    0\n  );\n  gl.enableVertexAttribArray(locTexCoord);\n  gl.vertexAttribDivisor(locTexCoord, 0);\n  gl.vertexAttribPointer(\n    locTexCoord,\n    2,\n    gl.FLOAT,\n    false,\n    4 * Float32Array.BYTES_PER_ELEMENT,\n    2 * Float32Array.BYTES_PER_ELEMENT\n  );\n\n  const particlesDataBuffer = gl.createBuffer();\n  let particlesDataBufferSize = 10000;\n  let particlesData = new Float32Array(particlesDataBufferSize);\n  gl.bindBuffer(gl.ARRAY_BUFFER, particlesDataBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, particlesData, gl.STREAM_DRAW);\n\n  // #endregion\n\n  // #region Load texture sources\n  const loadedTextures = [];\n  if (textures) {\n    const keys = Object.keys(textures);\n    keys.forEach((key) => {\n      const value = textures[key];\n      if (!value) {\n        return;\n      }\n      if (loggingEnabled) console.time(`load texture ${key}`);\n      try {\n        const loadTextureData = (textureData) => {\n          const index = loadedTextures.length;\n          const texture = gl.createTexture();\n          gl.activeTexture(gl.TEXTURE0 + index);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n\n          const level = 0;\n          const internalFormat = gl.RGBA;\n          const srcFormat = gl.RGBA;\n          const srcType = gl.UNSIGNED_BYTE;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            level,\n            internalFormat,\n            srcFormat,\n            srcType,\n            textureData\n          );\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          loadedTextures.push({ texture, index, name: key });\n          if (loggingEnabled) console.timeEnd(`load texture ${key}`);\n\n          // Select active texture for rendering.\n          let desiredTextureIndex = undefined;\n          particleSystem.effects.forEach((effect) => {\n            effect.textures.forEach((texture) => {\n              const i = loadedTextures.findIndex(\n                (item) => item.name === texture\n              );\n              if (i >= 0) {\n                desiredTextureIndex = i;\n              }\n            });\n          });\n          if (desiredTextureIndex >= 0) {\n            gl.uniform1i(locTexture, desiredTextureIndex);\n          }\n        };\n\n        if (value instanceof HTMLImageElement) {\n          if (value.complete) {\n            loadTextureData(value);\n          } else {\n            const loadImage = () => {\n              loadTextureData(value);\n              value.removeEventListener(\"load\", loadImage);\n            };\n            value.addEventListener(\"load\", loadImage);\n          }\n        } else {\n          // Unidentified texture data. Just attempt to load it and hope it works :)\n          loadTextureData(value);\n        }\n      } catch (e) {\n        console.error(`Couldn't load texture ${key}\\n\\t${e.message}`);\n      }\n    });\n  }\n  // #endregion\n\n  const render = () => {\n    const bounds = container.getBoundingClientRect();\n    const width = Math.floor(bounds.width);\n    const height = Math.floor(bounds.height);\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    gl.viewport(0, 0, width, height);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    const particles = particleSystem.effects\n      .map((effect) => effect.particles)\n      .flat();\n    const particleCount = particles.length;\n    const particlesDataSize = attributesPerParticle * particleCount;\n\n    if (\n      particlesDataSize > particlesDataBufferSize &&\n      particlesDataBufferSize < maxParticlesDataBufferSize\n    ) {\n      let increasedSize = Math.max(\n        particlesDataSize,\n        particlesDataBufferSize * 2\n      );\n      if (increasedSize > maxParticlesDataBufferSize) {\n        console.warn(\n          `Maximum particle data buffer size exceeded - some particles might not be rendered!`\n        );\n        increasedSize = maxParticlesDataBufferSize;\n      }\n      if (loggingEnabled)\n        console.info(\n          `Increasing particle data buffer size ${particlesDataBufferSize} -> ${increasedSize}`\n        );\n      particlesData = new Float32Array(increasedSize);\n      particlesDataBufferSize = increasedSize;\n    }\n\n    const renderedParticlesCount = Math.min(\n      particleCount,\n      particlesDataBufferSize / attributesPerParticle\n    );\n    for (let i = 0; i < renderedParticlesCount; i += 1) {\n      const particle = particles[i];\n      const dataPos = i * attributesPerParticle;\n      particlesData[dataPos + 0] = particle.position.x;\n      particlesData[dataPos + 1] = particle.position.y;\n      particlesData[dataPos + 2] = particle.color.r;\n      particlesData[dataPos + 3] = particle.color.g;\n      particlesData[dataPos + 4] = particle.color.b;\n      particlesData[dataPos + 5] = particle.alpha;\n      particlesData[dataPos + 6] = particle.rotation;\n      particlesData[dataPos + 7] = particle.scale;\n    }\n\n    gl.uniform2f(locViewportSize, width, height);\n\n    gl.bufferData(gl.ARRAY_BUFFER, particlesData, gl.STREAM_DRAW);\n\n    gl.enableVertexAttribArray(locPos);\n    gl.vertexAttribDivisor(locPos, 1);\n    gl.vertexAttribPointer(\n      locPos,\n      2,\n      gl.FLOAT,\n      false,\n      attributesPerParticle * Float32Array.BYTES_PER_ELEMENT,\n      0 * Float32Array.BYTES_PER_ELEMENT\n    );\n\n    gl.enableVertexAttribArray(locColor);\n    gl.vertexAttribDivisor(locColor, 1);\n    gl.vertexAttribPointer(\n      locColor,\n      4,\n      gl.FLOAT,\n      false,\n      attributesPerParticle * Float32Array.BYTES_PER_ELEMENT,\n      2 * Float32Array.BYTES_PER_ELEMENT\n    );\n\n    gl.enableVertexAttribArray(locRotation);\n    gl.vertexAttribDivisor(locRotation, 1);\n    gl.vertexAttribPointer(\n      locRotation,\n      1,\n      gl.FLOAT,\n      false,\n      attributesPerParticle * Float32Array.BYTES_PER_ELEMENT,\n      6 * Float32Array.BYTES_PER_ELEMENT\n    );\n\n    gl.enableVertexAttribArray(locScale);\n    gl.vertexAttribDivisor(locScale, 1);\n    gl.vertexAttribPointer(\n      locScale,\n      1,\n      gl.FLOAT,\n      false,\n      attributesPerParticle * Float32Array.BYTES_PER_ELEMENT,\n      7 * Float32Array.BYTES_PER_ELEMENT\n    );\n\n    gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, renderedParticlesCount);\n  };\n\n  particleSystem.update(0);\n\n  let tPrev = window.performance.now();\n  let rFrame = undefined;\n  let particlesCountPrev = 0;\n  const frame = () => {\n    const tNow = window.performance.now();\n    if (autoUpdate) {\n      const tDelta = Math.min(tNow - tPrev, 10000);\n      particleSystem.update(tDelta / 1000);\n    }\n    const particlesCount = particleSystem.effects.reduce(\n      (prev, cur) => prev + cur.particles.length,\n      0\n    );\n\n    if (particlesCountPrev !== 0 || particlesCount !== 0) {\n      render();\n    }\n\n    tPrev = tNow;\n    particlesCountPrev = particlesCount;\n    rFrame = requestAnimationFrame(frame);\n  };\n  rFrame = requestAnimationFrame(frame);\n\n  let isDestroyed = false;\n  const rendererHandle = {\n    destroy: () => {\n      if (isDestroyed) return;\n      isDestroyed = true;\n      if (rFrame) {\n        cancelAnimationFrame(rFrame);\n        rFrame = undefined;\n        container.removeChild(canvas);\n      }\n\n      gl.deleteProgram(shader);\n      gl.deleteBuffer(vertexBufferRectangle);\n      gl.deleteBuffer(particlesDataBuffer);\n      loadedTextures.forEach((texture) => {\n        gl.deleteTexture(texture.texture);\n      });\n    },\n  };\n  return rendererHandle;\n};\n","export class Module {\n    constructor(particleEffect) {\n        /**\n         * Modules with `active === true` will have frequent calls to `update()` method.\n         */\n        this.active = true;\n        this.particleEffect = particleEffect;\n    }\n    init() { }\n    update(dt) { }\n}\n","import { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose color alpha value is less or equal to 0\n *\n * @module\n * @category    Destructor\n */\nexport class AlphaDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.alpha <= 0) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaDestructor.moduleTypeId = \"AlphaDestructor\";\n","import { Module } from '../module.js';\n/**\n * @module\n * @category    Destructor\n */\nexport class LifeTimeDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.timeLived >= particle.lifeTime) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeDestructor.moduleTypeId = \"LifeTimeDestructor\";\n","export const loadSerializedProperty = (object, moduleType, module, key, deserializeValue, hideWarnings) => {\n    const value = object[key];\n    if (value === undefined) {\n        if (!hideWarnings)\n            console.warn(`Missing module property ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    const deserializedValue = deserializeValue(value);\n    if (deserializedValue === undefined) {\n        if (!hideWarnings)\n            console.warn(`Module property could not be deserialized ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    module[key] = deserializedValue;\n};\n/**\n * Function for satisfying types when deserializing a primitive data type.\n *\n * Examples of primitive data types:\n * - `property = 1.0`\n * - `property = 'hello'`\n * - `property = { x: 1.0, something: 'text' }`\n * - `property = [ 0.0, 1.0 ]`\n *\n * @param serializedPrimitiveDataType\n * @returns\n */\nexport const deserializePrimitiveDataType = (serializedPrimitiveDataType) => {\n    return serializedPrimitiveDataType;\n};\n","export const lerp = (x, y, a) => x * (1 - a) + y * a;\nexport const clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nexport const invlerp = (x, y, a) => clamp((a - x) / (y - x));\nexport const range = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n/**\n * Get random number between range [min, max].\n * @param min\n * @param max\n * @returns\n */\nexport const randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Collection of utilities for `{ x: number, y: number }` data structures.\n */\nexport const vec2 = {\n    /**\n     * Subtract two vectors.\n     * @param a     Vector\n     * @param b     Position\n     * @return      `{ x: a.x - b.x, y: a.y - b.x }`\n     */\n    subtract: (a, b) => {\n        return { x: a.x - b.x, y: a.y - b.y };\n    },\n    /**\n     * Multiply vector with a number.\n     * @param a     Vector\n     * @param b     Number\n     * @return      `{ x: a.x * b, y: a.y * b }`\n     */\n    multiply: (a, b) => {\n        return { x: a.x * b, y: a.y * b };\n    },\n    /**\n     * Get length of vector.\n     * @param v     Vector\n     * @return      Length of vector\n     */\n    length: (v) => {\n        return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\n    },\n    /**\n     * Get normalized vector.\n     * @param v     Vector\n     * @returns     Normalized vector (same direction but length = 1).\n     */\n    normalize: (v) => {\n        const length = vec2.length(v);\n        return length === 0 ? { x: 0, y: 0 } : { x: v.x / length, y: v.y / length };\n    },\n    /**\n     * Get length between 2 positions.\n     * @param v1    Position 1\n     * @param v2    Position 2\n     *\n     * @returns     Length between 2 positions\n     */\n    lengthBetween: (v1, v2) => {\n        return Math.sqrt(Math.pow((v2.x - v1.x), 2) + Math.pow((v2.y - v1.y), 2));\n    },\n};\n/**\n * Interpolate between two colors.\n *\n * The color interpolation is done linearly in LAB color space.\n *\n * @param   a       Color 1.\n * @param   b       Color 2.\n * @param   factor  Ratio between colors 1 and 2 that will be used for the returned color.\n * @returns         Interpolated Color.\n */\nexport const lerpColor = (a, b, factor) => {\n    const aLab = rgbToLab(a);\n    const bLab = rgbToLab(b);\n    const lerpLab = {\n        l: lerp(aLab.l, bLab.l, factor),\n        a: lerp(aLab.a, bLab.a, factor),\n        b: lerp(aLab.b, bLab.b, factor),\n    };\n    const lerbRGB = labToRgb(lerpLab);\n    return {\n        r: lerbRGB.r,\n        g: lerbRGB.g,\n        b: lerbRGB.b,\n    };\n};\n/**\n * Function that transforms a RGB color to LAB.\n */\nconst rgbToLab = (rgb) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let r = rgb.r, g = rgb.g, b = rgb.b, x, y, z;\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    return { l: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n};\n/**\n * Function that transforms a LAB color to RGB.\n */\nconst labToRgb = (lab) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let y = (lab.l + 16) / 116, x = lab.a / 500 + y, z = y - lab.b / 200, r, g, b;\n    x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n    y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n    z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.204 + z * 1.057;\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n    return {\n        r: Math.max(0, Math.min(1, r)),\n        g: Math.max(0, Math.min(1, g)),\n        b: Math.max(0, Math.min(1, b)),\n    };\n};\n","import { vec2 } from '../utilities.js';\nexport const circleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = Math.sqrt(Math.random()) * shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = shape.radius;\n        return {\n            x: shape.center.x + Math.cos(angle) * radius,\n            y: shape.center.y + Math.sin(angle) * radius,\n        };\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const distFromCenter = vec2.length(vec2.subtract(position, shape.center));\n        return distFromCenter <= shape.radius;\n    },\n};\n","import { randomInRange } from '../utilities.js';\nexport const rectangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        return {\n            x: shape.v1.x + Math.random() * (shape.v2.x - shape.v1.x),\n            y: shape.v1.y + Math.random() * (shape.v2.y - shape.v1.y),\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const width = Math.abs(shape.v1.x - shape.v2.x);\n        const height = Math.abs(shape.v1.y - shape.v2.y);\n        const edgeLength = width * 2 + height * 2;\n        const randomEdgeLength = randomInRange(0, edgeLength);\n        // going from bottom left counter-clockwise\n        if (randomEdgeLength < height) {\n            return {\n                x: shape.v1.x,\n                y: shape.v1.y + randomEdgeLength,\n            };\n        }\n        else if (randomEdgeLength < width + height) {\n            return {\n                x: shape.v1.x + randomEdgeLength - height,\n                y: shape.v1.y + height,\n            };\n        }\n        else if (randomEdgeLength < 2 * height + width) {\n            return {\n                x: shape.v1.x + width,\n                y: shape.v1.y + randomEdgeLength - (height + width),\n            };\n        }\n        else {\n            return {\n                x: shape.v1.x + randomEdgeLength - (2 * height + width),\n                y: shape.v1.y,\n            };\n        }\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const minX = Math.min(shape.v1.x, shape.v2.x);\n        const minY = Math.min(shape.v1.y, shape.v2.y);\n        const maxX = Math.max(shape.v1.x, shape.v2.x);\n        const maxY = Math.max(shape.v1.y, shape.v2.y);\n        return position.x >= minX && position.x <= maxX && position.y >= minY && position.y <= maxY;\n    },\n};\n","import { randomInRange, vec2 } from '../utilities.js';\nexport const triangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const s1 = Math.sqrt(r1);\n        return {\n            x: shape.v1.x * (1.0 - s1) + shape.v2.x * (1.0 - r2) * s1 + shape.v3.x * r2 * s1,\n            y: shape.v1.y * (1.0 - s1) + shape.v2.y * (1.0 - r2) * s1 + shape.v3.y * r2 * s1,\n        };\n        //alternative version that might be faster, something to benchmark for you\n        /*\n        const s = Math.abs(r1 - r2);\n        const t = 0.5 * (r1 + r2 - s);\n        const u = 1 - 0.5 * (s + r1 + r2);\n\n        return {\n            x: s * shape.v1.x + t * shape.v2.x + u * shape.v3.x,\n            y: s * shape.v1.y + t * shape.v2.y + u * shape.v3.y,\n        };\n        */\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        // Source: https://stackoverflow.com/a/2049593/9288063\n        const d1 = sign(position, shape.v1, shape.v2);\n        const d2 = sign(position, shape.v2, shape.v3);\n        const d3 = sign(position, shape.v3, shape.v1);\n        const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n        const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n        return !(has_neg && has_pos);\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const ab = vec2.lengthBetween(shape.v1, shape.v2);\n        const bc = vec2.lengthBetween(shape.v2, shape.v3);\n        const ac = vec2.lengthBetween(shape.v3, shape.v1);\n        const edgeLength = ab + bc + ac;\n        const randomEdgeLength = randomInRange(0, edgeLength);\n        const positionOnSegment = (positionA, positionB, lengthAB, lengthAK) => {\n            const ratio = lengthAK / lengthAB;\n            return {\n                x: positionA.x + (positionB.x - positionA.x) * ratio,\n                y: positionA.y + (positionB.y - positionA.y) * ratio,\n            };\n        };\n        if (randomEdgeLength < ab) {\n            return positionOnSegment(shape.v1, shape.v2, ab, randomEdgeLength);\n        }\n        else if (randomEdgeLength < ab + bc) {\n            return positionOnSegment(shape.v2, shape.v3, bc, randomEdgeLength - ab);\n        }\n        else {\n            return positionOnSegment(shape.v3, shape.v1, ac, randomEdgeLength - ab - bc);\n        }\n    },\n};\n/**\n * Internal convenience function used in `containsPosition` implementation.\n *\n * Source: https://stackoverflow.com/a/2049593/9288063\n */\nconst sign = (p1, p2, p3) => {\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n};\n","import { circleLogic } from './circle.js';\nimport { rectangleLogic } from './rectangle.js';\nimport { triangleLogic } from './triangle.js';\nexport const serializeShape = (shape) => {\n    // Shapes are just primitive data types, can be serialized as they are.\n    return shape;\n};\nexport const deserializeShape = (serializedShape) => {\n    // Shapes are just primitive data types, can be deserialized as they are.\n    return serializedShape;\n};\nexport const getRandomPositionInsideShape = (shape) => {\n    return selectShapeLogic(shape).getRandomPosition(shape);\n};\nexport const getRandomPositionOnEdge = (shape) => {\n    return selectShapeLogic(shape).getRandomEdgePosition(shape);\n};\nexport const shapeContainsPosition = (shape, position) => {\n    return selectShapeLogic(shape).containsPosition(shape, position);\n};\nconst selectShapeLogic = (shape) => {\n    switch (shape.type) {\n        case \"triangle\":\n            return triangleLogic;\n        case \"rectangle\":\n            return rectangleLogic;\n        case \"circle\":\n            return circleLogic;\n    }\n};\n","import { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { deserializeShape, serializeShape, shapeContainsPosition } from '../shapes/shape.js';\nimport { Module } from '../module.js';\n/**\n * `Module` that destroys all particles whose center location is outside generic bounds.\n *\n * ```ts\n *  // Example usage\n *  const destructor = new OutsideBoundsDestructor(particleSystem);\n *  destructor.bounds = {\n *      type: \"triangle\",\n *      v1: { x: 100, y: 400 },\n *      v2: { x: 300, y: 400 },\n *      v3: { x: 200, y: 0 },\n *  };\n *  particleSystem.modules.push(destructor);\n * ```\n *\n * @module\n * @category    Destructor\n * bounds {\n *      @tooltip        TODO\n *      @type           Shape\n *      @defaultValue   { \"type\": \"rectangle\", \"v1\": {\"x\": -50, \"y\": -50}, \"v2\": {\"x\": 50, \"y\": 50} }\n * }\n */\nexport class OutsideBoundsDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        if (!this.bounds) {\n            return;\n        }\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (!shapeContainsPosition(this.bounds, particle.position)) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: OutsideBoundsDestructor.moduleTypeId,\n            bounds: this.bounds && serializeShape(this.bounds),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new OutsideBoundsDestructor(particleEffect);\n        loadSerializedProperty(object, OutsideBoundsDestructor, module, \"bounds\", deserializeShape, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nOutsideBoundsDestructor.moduleTypeId = \"OutsideBoundsDestructor\";\n","export class Particle {\n    constructor() {\n        /**\n         * Unspecified unit. Depends on separate graphics implementation\n         */\n        this.position = { x: 0, y: 0 };\n        /**\n         * Unspecified units per second. Depends on separate graphics implementation\n         */\n        this.velocity = { x: 0, y: 0 };\n        /**\n         * [0, 1]\n         */\n        this.color = { r: 1, g: 1, b: 1 };\n        /**\n         * [0, 1]\n         */\n        this.alpha = 1.0;\n        /**\n         * Radians\n         */\n        this.rotation = 0;\n        /**\n         * Radians per second\n         */\n        this.rotationalVelocity = 0;\n        /**\n         * Seconds\n         */\n        this.timeLived = 0;\n        /**\n         * Seconds\n         */\n        this.lifeTime = 2;\n        this.scale = 0.1;\n        this.destroyed = false;\n        this.texture = \"\";\n    }\n}\n","import { Module } from '../module.js';\nexport class ParticleGenerator extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Interval between generated particles as milliseconds\n         * (as long as `Generator.active === true`)\n         */\n        this.interval = 0.1;\n        this._timer = 0;\n        /**\n         * List of timestamps when a batch of particles can be generated.\n         *\n         * `time` is seconds since the particle effect was created,\n         * and `count` is number of particles to generate.\n         *\n         * Optional `repeat` property can be supplied to supply a second interval which the batch is automatically repeated with afterwards.\n         */\n        this.bursts = [];\n        this._updateCounter = 0;\n    }\n    update(dt) {\n        const tPrev = this._updateCounter;\n        const tNow = this._updateCounter + dt;\n        // Trigger all bursts that are between tPrev and tNow\n        this.bursts.forEach((burst) => {\n            const burstTimestamp = burst.repeat === undefined || burst.repeat <= 0 || burst.time > tPrev\n                ? burst.time\n                : burst.time + burst.repeat * Math.ceil((tPrev - burst.time) / burst.repeat);\n            if (burstTimestamp >= tPrev && burstTimestamp <= tNow) {\n                for (let i = 0; i < burst.count; i += 1) {\n                    this.generateParticle();\n                }\n            }\n        });\n        this._updateCounter = tNow;\n        if (this.interval <= 0) {\n            return;\n        }\n        this._timer += dt;\n        while (this._timer >= this.interval) {\n            this._timer -= this.interval;\n            this.generateParticle();\n        }\n    }\n}\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\n/**\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * position {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n */\nexport class PointGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.position = { x: 0, y: 0 };\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.position.x;\n        particle.position.y = this.position.y;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: PointGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            position: this.position,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new PointGenerator(particleEffect);\n        loadSerializedProperty(object, PointGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"position\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nPointGenerator.moduleTypeId = \"PointGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module which overrides `Particle.color.a` property from a configurable random value range.\n *\n * Range can be configured with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   1\n * }\n */\nexport class AlphaRange extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.min = 0;\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.max = 1;\n        this.handleParticleAdd = (particle) => {\n            particle.alpha = randomInRange(this.min, this.max);\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaRange(particleEffect);\n        loadSerializedProperty(object, AlphaRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, AlphaRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaRange.moduleTypeId = \"AlphaRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   1.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   5.0\n * }\n */\nexport class LifeTimeRange extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 1.5;\n        this.max = 2.5;\n        this.handleParticleAdd = (particle) => {\n            particle.lifeTime = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeRange(particleEffect);\n        loadSerializedProperty(object, LifeTimeRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, LifeTimeRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeRange.moduleTypeId = \"LifeTimeRange\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random velocity to each particle along a random direction.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class RandomAngleVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Minimum velocity\n         */\n        this.min = 0;\n        /**\n         * Maximum velocity\n         */\n        this.max = 100;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = Math.random() * 2 * Math.PI;\n            const velocity = randomInRange(this.min, this.max);\n            particle.velocity.x = Math.cos(angleRad) * velocity;\n            particle.velocity.y = Math.sin(angleRad) * velocity;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomAngleVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomAngleVelocity(particleEffect);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomAngleVelocity.moduleTypeId = \"RandomAngleVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns a random scale to each particle upon its creation.\n *\n * Scale range can be customized with properties: `min` and `max`.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   0.5\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   1.5\n * }\n */\nexport class RandomScale extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 0.5;\n        this.max = 1.5;\n        this.handleParticleAdd = (particle) => {\n            particle.scale = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomScale.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomScale(particleEffect);\n        loadSerializedProperty(object, RandomScale, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomScale, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomScale.moduleTypeId = \"RandomScale\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerpColor } from '../utilities.js';\n/**\n * Module that assigns each particle a random color.\n *\n * Color range can be customized to some degree using `palette` property.\n *\n * It is a array of Colors. Any interpolated step between the colors in this array can be assigned to particles.\n * For example, the following configuration results in particles varying from Red to Green colors:\n *\n * ```ts\n *  const color = new RandomColor(effect)\n *  color.palette = [\n *      { r: 1, g: 0, b: 0 },\n *      { r: 0, g: 1, b: 0 }\n *  ]\n * ```\n *\n * Color interpolation can be disabled by setting `interpolate` to `false`.\n *\n * @module\n * @category    Initializer\n * palette {\n *      @tooltip        TODO\n *      @type           Color[]\n *      @defaultValue   [{ \"r\": 1, \"g\": 0, \"b\": 0 }, { \"r\": 0, \"g\": 1, \"b\": 0 }, { \"r\": 0, \"g\": 0, \"b\": 1 }]\n * }\n * interpolate {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   true\n * }\n */\nexport class RandomColor extends Module {\n    constructor() {\n        super(...arguments);\n        this.palette = [\n            { r: 1, g: 0, b: 0 },\n            { r: 0, g: 1, b: 0 },\n            { r: 0, g: 0, b: 1 },\n        ];\n        this.interpolate = true;\n        this.handleParticleAdd = (particle) => {\n            if (this.interpolate && this.palette.length >= 2) {\n                const randomPalettePosition = Math.random() * (this.palette.length - 1);\n                const iPaletteStart = Math.floor(randomPalettePosition);\n                const colorA = this.palette[iPaletteStart];\n                const colorB = this.palette[iPaletteStart + 1];\n                particle.color = lerpColor(colorA, colorB, randomPalettePosition - iPaletteStart);\n            }\n            else if (this.palette.length >= 1) {\n                particle.color = this.palette[Math.round(Math.random() * (this.palette.length - 1))];\n            }\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomColor.moduleTypeId,\n            palette: this.palette,\n            interpolate: this.interpolate,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomColor(particleEffect);\n        loadSerializedProperty(object, RandomColor, module, \"palette\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomColor, module, \"interpolate\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomColor.moduleTypeId = \"RandomColor\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * Module that assigns each particle random _rotational velocity_.\n * This causes the particle to continuously rotate with a static speed along its lifetime.\n *\n * Rotational velocity range can be customized with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   -5.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   5.0\n * }\n */\nexport class RandomRotationalVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotational velocity as **Radians per second**\n         */\n        this.min = -2 * Math.PI;\n        /**\n         * Max rotational velocity as **Radians per second**\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            particle.rotationalVelocity = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotationalVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotationalVelocity(particleEffect);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotationalVelocity.moduleTypeId = \"RandomRotationalVelocity\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { lerp } from '../utilities.js';\n/**\n * @module\n * @category    Initializer\n * randomX {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n * randomY {\n *      @tooltip        TODO\n *      @type           Range\n *      @defaultValue   { \"min\": -100, \"max\": 100 }\n *      @step           10\n * }\n */\nexport class RandomVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        this.randomX = { min: -100, max: 100 };\n        this.randomY = { min: -100, max: 100 };\n        this.handleParticleAdd = (particle) => {\n            particle.velocity.x = lerp(this.randomX.min, this.randomX.max, Math.random());\n            particle.velocity.y = lerp(this.randomY.min, this.randomY.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomVelocity.moduleTypeId,\n            randomX: this.randomX,\n            randomY: this.randomY,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomVelocity(particleEffect);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomX\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomY\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomVelocity.moduleTypeId = \"RandomVelocity\";\n","// Easing functions for animations\n// See https://easings.net/#\n/**\n * Collection of all implemented _Easing functions_.\n */\nexport const EasingFunctions = {\n    /**\n     * @easingFunction\n     */\n    linear: ((x) => {\n        return x;\n    }),\n    /**\n     * https://easings.net/#easeOutSine\n     *\n     * @easingFunction\n     */\n    easeOutSine: ((x) => {\n        return Math.sin((x * Math.PI) / 2);\n    }),\n    /**\n     * https://easings.net/#easeOutCubic\n     *\n     * @easingFunction\n     */\n    easeOutCubic: ((x) => {\n        return 1 - Math.pow(1 - x, 3);\n    }),\n    /**\n     * https://easings.net/#easeOutExpo\n     *\n     * @easingFunction\n     */\n    easeOutExpo: ((x) => {\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n    }),\n    /**\n     * https://easings.net/#easeOutCirc\n     *\n     * @easingFunction\n     */\n    easeOutCirc: ((x) => {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }),\n    /**\n     * https://easings.net/#easeOutBack\n     *\n     * @easingFunction\n     */\n    easeOutBack: ((x) => {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    }),\n    /**\n     * https://easings.net/#easeOutElastic\n     *\n     * @easingFunction\n     */\n    easeOutElastic: ((x) => {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    }),\n};\n/**\n * Serialize easing function to a primitive data type that can be later deserialized.\n */\nexport const serializeEasing = (easingFunction) => {\n    const entry = Object.entries(EasingFunctions).find((entry) => entry[1] === easingFunction);\n    if (!entry) {\n        throw new Error(`serializeEasing supplied value is not an EasingFunction`);\n    }\n    // Return key in EasingFunctions. For example \"linear\", \"easeOutElastic\", etc.\n    return entry[0];\n};\n/**\n * Deserialize an easing function that was serialized using `serializeEasing`.\n */\nexport const deserializeEasing = (serializedEasing) => {\n    if (typeof serializedEasing !== \"string\")\n        return undefined;\n    const easingFunction = Object.entries(EasingFunctions).find((entry) => entry[0] === serializedEasing);\n    return easingFunction ? easingFunction[1] : undefined;\n};\n","import { deserializeEasing, EasingFunctions, serializeEasing } from '../easing.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { clamp } from '../utilities.js';\nimport { Module } from '../module.js';\n/**\n * Module that decays particles alpha over their lifetime.\n *\n * Alpha animation can be customized with `easing` property.\n *\n * This module modifies `Particle.alpha` property and can not be combined with any other modifier that does so.\n * It can however be combined with modules that alter the alpha during initialization, but these modules must be defined before `AlphaOverLifetime`!\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class AlphaOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of alpha.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._alphaOverLifetime_initialAlpha = particle.alpha;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            const initialAlpha = particle._alphaOverLifetime_initialAlpha;\n            const alpha = initialAlpha - initialAlpha * this.easing(clamp(particle.timeLived / particle.lifeTime, 0, 1));\n            particle.alpha = alpha;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaOverLifetime.moduleTypeId,\n            easing: serializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaOverLifetime(particleEffect);\n        loadSerializedProperty(object, AlphaOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaOverLifetime.moduleTypeId = \"AlphaOverLifetime\";\n","import { EasingFunctions, deserializeEasing } from '../easing.js';\nimport { Module } from '../module.js';\nimport { loadSerializedProperty } from '../serialization/moduleSerialization.js';\nimport { vec2 } from '../utilities.js';\n/**\n * Module that deaccelerates particle velocity over its lifetime.\n *\n * The direction of the deacceleration is based on the initial velocity of each particle.\n * For this reason, you should ensure that the module that initializes particle velocity is listed BEFORE this module!\n *\n * Deacceleration animation can be customized with `easing` property.\n *\n * This module modifies `Particle.velocity` property, but does not reassign it so this can be combined with other modules which affect particle velocity.\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n *      @defaultValue   easeOutSine\n * }\n */\nexport class DeaccelerationOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of velocity.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._velocityOverLifetime_initialVelocity = {\n                x: particle.velocity.x,\n                y: particle.velocity.y,\n            };\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            // NOTE: Velocity difference for each frame is calculated to avoid completely reassigning particle velocity.\n            // This is great because it allows combining deacceleration module with other velocity affecting modules.\n            const xPrev = (particle.timeLived - dt) / particle.lifeTime;\n            const xNow = particle.timeLived / particle.lifeTime;\n            const animationPrev = this.easing(xPrev);\n            const animationNow = this.easing(xNow);\n            const initialVelocity = particle._velocityOverLifetime_initialVelocity;\n            const deacceleration = vec2.multiply(initialVelocity, animationNow - animationPrev);\n            particle.velocity.x -= deacceleration.x;\n            particle.velocity.y -= deacceleration.y;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: DeaccelerationOverLifetime.moduleTypeId,\n            easing: deserializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new DeaccelerationOverLifetime(particleEffect);\n        loadSerializedProperty(object, DeaccelerationOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nDeaccelerationOverLifetime.moduleTypeId = \"DeaccelerationOverLifetime\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class Gravity extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n    }\n    update(dt) {\n        // pull particles down at a constant speed depending on configured strength.\n        this.particleEffect.particles.forEach((particle) => {\n            particle.velocity.y += this.strength * dt;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: Gravity.moduleTypeId,\n            strength: this.strength,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new Gravity(particleEffect);\n        loadSerializedProperty(object, Gravity, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravity.moduleTypeId = \"Gravity\";\n","import { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\n/**\n * Generator module that creates particles along the exterior of a circular area.\n *\n * Each particle is generated next to each other, so that when particles are regularly generated they move around the circle.\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * radius {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   50\n * }\n * nextParticleAngle {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   0\n * }\n * angleStep {\n *      @tooltip        Radians\n *      @type           Number\n *      @defaultValue   0.5\n * }\n */\nexport class CircleLoadingGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n        /**\n         * The angle at which the next particle will be generated at.\n         *\n         * Unit is in _radians_.\n         */\n        this.nextParticleAngle = 0;\n        /**\n         * The angle that is incremented between each generated particle.\n         *\n         * Unit is in _radians_.\n         */\n        this.angleStep = 0.5;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.center.x + Math.cos(this.nextParticleAngle) * this.radius;\n        particle.position.y = this.center.y + Math.sin(this.nextParticleAngle) * this.radius;\n        this.nextParticleAngle += this.angleStep;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleLoadingGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            center: this.center,\n            radius: this.radius,\n            nextParticleAngle: this.nextParticleAngle,\n            angleStep: this.angleStep,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleLoadingGenerator(particleEffect);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"radius\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"nextParticleAngle\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"angleStep\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleLoadingGenerator.moduleTypeId = \"CircleLoadingGenerator\";\n","import { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { Particle } from '../particle.js';\nimport { ParticleGenerator } from './generator.js';\nimport { deserializeShape, getRandomPositionInsideShape, getRandomPositionOnEdge, serializeShape, } from '../shapes/shape.js';\n/**\n * Module that can be used to generate particles with an initial position inside a generic _Shape_.\n *\n * Shape is assigned via `ShapeGenerator.shape` property, for example:\n *\n * ```ts\n *  const generator = new ShapeGenerator(particleEffect)\n *  generator.shape = {\n *      type: 'rectangle',\n *      v1: { x: 100, y: 100 },\n *      v2: { x: 300, y: 500 }\n *  }\n * ```\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * shape {\n *      @tooltip        TODO\n *      @type           Shape\n *      @defaultValue   { \"type\": \"rectangle\", \"v1\": {\"x\": -50, \"y\": -50}, \"v2\": {\"x\": 50, \"y\": 50} }\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n *      @defaultValue   []\n * }\n * edgesOnly {\n *      @tooltip        TODO\n *      @type           Boolean\n *      @defaultValue   false\n * }\n */\nexport class ShapeGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.edgesOnly = false;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        if (this.shape) {\n            if (this.edgesOnly) {\n                particle.position = getRandomPositionOnEdge(this.shape);\n            }\n            else {\n                particle.position = getRandomPositionInsideShape(this.shape);\n            }\n        }\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: ShapeGenerator.moduleTypeId,\n            interval: this.interval,\n            bursts: this.bursts,\n            shape: this.shape ? serializeShape(this.shape) : undefined,\n            edgesOnly: this.edgesOnly,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new ShapeGenerator(particleEffect);\n        loadSerializedProperty(object, ShapeGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"bursts\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"shape\", deserializeShape, hideWarnings);\n        loadSerializedProperty(object, ShapeGenerator, module, \"edgesOnly\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nShapeGenerator.moduleTypeId = \"ShapeGenerator\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { clamp, lerp, vec2 } from '../utilities.js';\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n *      @defaultValue   { \"x\": 0, \"y\": 0 }\n * }\n * minPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   0.2\n * }\n * maxPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   1.0\n * }\n * minPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   500\n * }\n * maxPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   100\n * }\n */\nexport class GravityWithCenter extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n        /**\n         * Center of gravity. Pulls particles towards that location with varying strength\n         * based on how close the particle is to the location (closer = stronger pull).\n         * The pull strength can be further configured with properties: `maxPullStrengthDistance`, `maxPullStrengthMultiplier`, `minPullStrengthDistance` and `minPullStrengthMultiplier`\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `maxPullStrengthMultiplier`\n         */\n        this.maxPullStrengthDistance = 100;\n        /**\n         * `strength` multiplier that is used when particle is `maxPullStrengthDistance` away from `center`.\n         */\n        this.maxPullStrengthMultiplier = 1;\n        /**\n         * Particle distance from `center` that will correspond to gravity strength multiplier `minPullStrengthMultiplier`\n         */\n        this.minPullStrengthDistance = 500;\n        /**\n         * `strength` multiplier that is used when particle is `minPullStrengthDistance` away from `center`.\n         */\n        this.minPullStrengthMultiplier = 0.25;\n    }\n    update(dt) {\n        const center = this.center;\n        // Pull particles towards the gravity center, with varying strength based on how close the particles are to the location (closer = stronger pull)\n        this.particleEffect.particles.forEach((particle) => {\n            const toCenter = vec2.subtract(center, particle.position);\n            const particleDistance = vec2.length(toCenter);\n            const pullStrengthMultiplier = lerp(this.minPullStrengthMultiplier, this.maxPullStrengthMultiplier, clamp((particleDistance - this.minPullStrengthDistance) /\n                (this.maxPullStrengthDistance - this.minPullStrengthDistance), 0, 1));\n            const pullStrength = dt * this.strength * pullStrengthMultiplier;\n            const pullDirection = vec2.normalize(toCenter);\n            particle.velocity.x += pullDirection.x * pullStrength;\n            particle.velocity.y += pullDirection.y * pullStrength;\n        });\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: GravityWithCenter.moduleTypeId,\n            strength: this.strength,\n            center: this.center,\n            maxPullStrengthDistance: this.maxPullStrengthDistance,\n            maxPullStrengthMultiplier: this.maxPullStrengthMultiplier,\n            minPullStrengthDistance: this.minPullStrengthDistance,\n            minPullStrengthMultiplier: this.minPullStrengthMultiplier,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new GravityWithCenter(particleEffect);\n        loadSerializedProperty(object, GravityWithCenter, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"maxPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, GravityWithCenter, module, \"minPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravityWithCenter.moduleTypeId = \"GravityWithCenter\";\n","import { Module } from '../module.js';\nimport { loadSerializedProperty, deserializePrimitiveDataType } from '../serialization/moduleSerialization.js';\nimport { randomInRange } from '../utilities.js';\n/**\n * Module that assigns a random initial rotation to each particle.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        Radians\n *      @type           Number\n *      @step           0.785\n *      @defaultValue   6.2832\n * }\n */\nexport class RandomRotation extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotation as radians.\n         */\n        this.min = 0;\n        /**\n         * Max rotation as radians.\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = randomInRange(this.min, this.max);\n            particle.rotation = angleRad;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotation.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotation(particleEffect);\n        loadSerializedProperty(object, RandomRotation, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotation, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotation.moduleTypeId = \"RandomRotation\";\n","import { AlphaDestructor } from '../destructors/alphaDestructor.js';\nimport { LifeTimeDestructor } from '../destructors/lifeTimeDestructor.js';\nimport { OutsideBoundsDestructor } from '../destructors/outsideBoundsDestructor.js';\nimport { PointGenerator } from '../generators/pointGenerator.js';\nimport { AlphaRange } from '../initializers/alphaRange.js';\nimport { LifeTimeRange } from '../initializers/lifeTimeRange.js';\nimport { RandomAngleVelocity } from '../initializers/randomAngleVelocity.js';\nimport { RandomScale } from '../initializers/randomScale.js';\nimport { RandomColor } from '../initializers/randomColor.js';\nimport { RandomRotationalVelocity } from '../initializers/randomRotationalVelocity.js';\nimport { RandomVelocity } from '../initializers/randomVelocity.js';\nimport { AlphaOverLifetime } from '../modifiers/alphaOverLifetime.js';\nimport { DeaccelerationOverLifetime } from '../modifiers/deaccelerationOverLifetime.js';\nimport { Gravity } from '../modifiers/gravity.js';\nimport { CircleLoadingGenerator } from '../generators/circleLoadingGenerator.js';\nimport { ShapeGenerator } from '../generators/shapeGenerator.js';\nimport { GravityWithCenter } from '../modifiers/gravityWithCenter.js';\nimport { RandomRotation } from '../initializers/randomRotation.js';\n/**\n * This list should contain all Modules in the library.\n *\n * It is required for deserializing Modules from JS objects.\n */\nexport const moduleTypeRegistry = [\n    AlphaDestructor,\n    LifeTimeDestructor,\n    OutsideBoundsDestructor,\n    PointGenerator,\n    AlphaRange,\n    LifeTimeRange,\n    RandomAngleVelocity,\n    RandomVelocity,\n    AlphaOverLifetime,\n    DeaccelerationOverLifetime,\n    Gravity,\n    RandomScale,\n    RandomColor,\n    RandomRotationalVelocity,\n    CircleLoadingGenerator,\n    ShapeGenerator,\n    GravityWithCenter,\n    RandomRotation,\n];\n","import { moduleTypeRegistry } from \"./serialization/moduleRegistry\";\nexport class ParticleEffect {\n    /**\n     * **NOTE: ParticleEffects should be created with `ParticleSystem.addParticleEffect()` instead of using the constructor directly**\n     */\n    constructor(particleSystem) {\n        this.modules = [];\n        this.particles = [];\n        this.isInitialized = false;\n        /**\n         * List of texture names that are randomly assigned to particles of this effect.\n         */\n        this.textures = [];\n        this.addParticleListeners = [];\n        this.destroyParticleListeners = [];\n        this.particleSystem = particleSystem;\n    }\n    init() {\n        this.modules.forEach((module) => {\n            module.init();\n        });\n    }\n    update(dt) {\n        const len = this.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particles[i];\n            particle.timeLived += dt;\n            particle.position.x += particle.velocity.x * dt;\n            particle.position.y += particle.velocity.y * dt;\n            particle.rotation += particle.rotationalVelocity * dt;\n        }\n        this.modules.forEach((module) => {\n            if (module.active) {\n                module.update(dt);\n            }\n        });\n        // Remove destroyed particles\n        for (let i = 0; i < this.particles.length; i += 1) {\n            const particle = this.particles[i];\n            if (particle.destroyed) {\n                this.particles.splice(i, 1);\n                i -= 1;\n            }\n        }\n    }\n    addParticle(particle) {\n        this.particles.push(particle);\n        if (this.textures.length > 0) {\n            // Assign particle texture.\n            particle.texture = this.textures[Math.round(Math.random() * (this.textures.length - 1))];\n        }\n        this.addParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    /**\n     * Destroy a particle, removing it from further updates.\n     *\n     * This can be safely called while iterating over `particles`, the array is not modified immediately.\n     */\n    destroyParticle(particle) {\n        // Modifying particle arrays can be heavy, better mark particles that should be removed and modify array just once during update.\n        particle.destroyed = true;\n        this.destroyParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    static fromObject(particleSystem, effectObject, options) {\n        var _a;\n        const hideWarnings = (options === null || options === void 0 ? void 0 : options.hideWarnings) || false;\n        const effect = particleSystem.addParticleEffect();\n        effect.textures = effectObject.textures;\n        (_a = effectObject.modules) === null || _a === void 0 ? void 0 : _a.forEach((moduleObject) => {\n            const moduleTypeReference = moduleTypeRegistry.find((moduleType) => moduleType.moduleTypeId === moduleObject.moduleTypeId);\n            if (!moduleTypeReference) {\n                // The module type can't be identified. This probably means that it was saved with a different library version than the active one.\n                if (!hideWarnings)\n                    console.warn(`fromObject unidentified module type: \"${moduleObject.moduleTypeId}\"`);\n                return;\n            }\n            const module = moduleTypeReference.fromObject(effect, moduleObject, hideWarnings);\n            effect.modules.push(module);\n        });\n        return effect;\n    }\n}\n","import { ParticleEffect } from \"./particleEffect\";\nexport class ParticleSystem {\n    constructor() {\n        this.effects = [];\n        this.addParticleEffectListeners = [];\n        this.removeParticleEffectListeners = [];\n    }\n    update(dt) {\n        this.effects.forEach((effect) => {\n            if (!effect.isInitialized) {\n                effect.init();\n                effect.isInitialized = true;\n            }\n            effect.update(dt);\n        });\n    }\n    addParticleEffect() {\n        const particleEffect = new ParticleEffect(this);\n        this.effects.push(particleEffect);\n        this.addParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        return particleEffect;\n    }\n    removeParticleEffect(particleEffect) {\n        const i = this.effects.indexOf(particleEffect);\n        if (i <= 0) {\n            this.effects.splice(i, 1);\n            this.removeParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        }\n    }\n    /**\n     * Wrap the properties of the whole particle system into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            effects: this.effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules.map((module) => module.toObject()),\n            })),\n        };\n    }\n    static fromObject(object, options) {\n        const particleSystem = new ParticleSystem();\n        const effectObjects = object.effects;\n        effectObjects.forEach((effectObject) => {\n            ParticleEffect.fromObject(particleSystem, effectObject, options);\n        });\n        return particleSystem;\n    }\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./ParticleSandbox.css\";\nimport { Renderer } from \"modular-particle-system-webgl-renderer\";\nimport { ParticleSystem } from \"modular-particle-system/particleSystem\";\n\nconst ParticleSandbox = (props) => {\n  const { effects } = props;\n\n  const [textures, setTextures] = useState([]);\n\n  const [particleSystem, setParticleSystem] = useState(undefined);\n\n  const refRuntime = useRef(undefined);\n\n  const refParticleCount = useRef(undefined);\n\n  useEffect(() => {\n    const particleSystem = ParticleSystem.fromObject(\n      {\n        effects,\n      },\n      { hideWarnings: true }\n    );\n    setParticleSystem(particleSystem);\n\n    const textures = effects.map((effect) => effect.textures).flat();\n    setTextures(textures);\n\n    // Monitor runtime and particles count.\n    let runTimeCounter = 0;\n    let tPrevUpdate = window.performance.now();\n    const update = () => {\n      const tNow = window.performance.now();\n      const dt = (tNow - tPrevUpdate) / 1000;\n      runTimeCounter += dt;\n      if (refRuntime.current)\n        refRuntime.current.innerHTML = `Run time ${runTimeCounter.toFixed(2)}`;\n      particleSystem.update(dt);\n\n      const particlesCount = particleSystem.effects.reduce(\n        (prev, cur) => prev + cur.particles.length,\n        0\n      );\n      if (refParticleCount.current)\n        refParticleCount.current.innerHTML = `Particles ${particlesCount}`;\n\n      requestUpdate = requestAnimationFrame(update);\n      tPrevUpdate = tNow;\n    };\n    let requestUpdate = requestAnimationFrame(update);\n\n    return () => {\n      cancelAnimationFrame(requestUpdate);\n      requestUpdate = undefined;\n    };\n  }, [effects]);\n\n  useEffect(() => {\n    if (!particleSystem) {\n      return;\n    }\n\n    const container = document.getElementById(\"particleSandbox\");\n    const textureSources = {};\n    textures.forEach((textureName) => {\n      const img = new Image();\n      img.src = `textures/${textureName}`;\n      textureSources[textureName] = img;\n    });\n\n    const webglRenderer = Renderer({\n      particleSystem,\n      container,\n      textures: textureSources,\n      coordinateSystem: \"pixels-centered\",\n      autoUpdate: false,\n      loggingEnabled: false,\n    });\n\n    return () => {\n      webglRenderer.destroy();\n    };\n  }, [particleSystem, textures]);\n\n  return (\n    <div className=\"particleSandbox\">\n      <div className=\"particleSandbox-gridColumns\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridColumn\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-gridRows\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridRow\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-canvas\" id=\"particleSandbox\"></div>\n      <div className={`particleSandbox-stats`}>\n        <span ref={refRuntime}>{`Run time`}</span>\n        <span ref={refParticleCount}>{`Particles`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ParticleSandbox;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport EffectsConfigurationPanel from \"./EffectsConfigurationPanel/EffectsConfigurationPanel\";\nimport ProjectToolbar from \"./ProjectToolbar\";\nimport ParticleSandbox from \"./ParticleSandbox\";\nimport \"./Editor.css\";\nimport { downloadObject } from \"../other/utils\";\n\nconst globalState = {\n  particleModules: [],\n  easingFunctions: [],\n  availableTextures: [],\n  shapes: [],\n  presetEffects: [],\n};\nexport const globalStateContext = createContext(globalState);\n\nconst Editor = (props) => {\n  const [effects, setEffects] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const { particleModules } = useContext(globalStateContext);\n\n  useEffect(() => {\n    // Load config files.\n    const promiseCoreLibraryConfig = fetch(\"config.modularParticleSystem.json\")\n      .then((r) => r.json())\n      .then((coreLibraryConfig) => {\n        console.log(\"loaded core library config\");\n        const { particleModules, easingFunctions, shapes } = coreLibraryConfig;\n        globalState.particleModules = particleModules;\n        globalState.easingFunctions = easingFunctions;\n        globalState.shapes = shapes;\n\n        setEffects(\n          defaultParticleSystemConf.map((effect) =>\n            loadParticleEffectDefaults(effect, particleModules)\n          )\n        );\n      });\n\n    const promiseTextures = fetch(\"config.textures.json\")\n      .then((r) => r.json())\n      .then((textureNames) => {\n        console.log(\"loaded available textures\");\n        globalState.availableTextures = textureNames;\n      });\n\n    const promisePresetEffects = fetch(\"config.presetParticleEffects.json\")\n      .then((r) => r.json())\n      .then((presetEffects) => {\n        console.log(\"loaded preset effects\");\n        globalState.presetEffects = presetEffects;\n      });\n\n    Promise.all([\n      promiseCoreLibraryConfig,\n      promiseTextures,\n      promisePresetEffects,\n    ]).then((_) => {\n      setLoading(false);\n    });\n  }, []);\n\n  const refLoadFileInput = useRef(null);\n\n  return loading ? (\n    <div className=\"editor-loading\">Loading...</div>\n  ) : (\n    <globalStateContext.Provider value={globalState}>\n      <div className=\"editor\">\n        <ProjectToolbar\n          restart={() => {\n            setEffects([...effects]);\n          }}\n          saveToFile={() => {\n            const particleSystemObject = {\n              effects: effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules,\n              })),\n            };\n            downloadObject(particleSystemObject, \"particleSystem.json\");\n          }}\n          loadPreset={(particleSystemData) => {\n            setEffects(particleSystemData.effects);\n          }}\n          loadFromFile={() => {\n            const fileInput = refLoadFileInput.current;\n            if (!fileInput) return;\n            fileInput.click();\n          }}\n        />\n        <div className=\"editor-workspace\">\n          <ParticleSandbox effects={effects} />\n          <EffectsConfigurationPanel\n            effects={effects}\n            updateEffects={(updatedEffects) => {\n              updatedEffects = updatedEffects.map((effect) =>\n                loadParticleEffectDefaults(effect, particleModules)\n              );\n              setEffects(updatedEffects);\n            }}\n          />\n        </div>\n      </div>\n      <input\n        className=\"editor-fileInput\"\n        type={\"file\"}\n        ref={refLoadFileInput}\n        accept={\".json\"}\n        onChange={async (e) => {\n          try {\n            const file = e.target.files[0];\n            const loadedParticleSystem = await new Response(file).json();\n            setEffects(loadedParticleSystem.effects);\n          } catch (e) {\n            alert(`Unexpected error while loading file.\\n${e.message}`);\n          }\n        }}\n      />\n    </globalStateContext.Provider>\n  );\n};\n\nconst defaultParticleSystemConf = [\n  {\n    textures: [\"ball.png\"],\n    modules: [\n      {\n        moduleTypeId: \"PointGenerator\",\n      },\n      {\n        moduleTypeId: \"RandomAngleVelocity\",\n        min: 50,\n        max: 100,\n      },\n      {\n        moduleTypeId: \"RandomScale\",\n        min: 0.5,\n        max: 0.8,\n      },\n      {\n        moduleTypeId: \"RandomColor\",\n      },\n      {\n        moduleTypeId: \"LifeTimeRange\",\n      },\n      {\n        moduleTypeId: \"AlphaOverLifetime\",\n      },\n      {\n        moduleTypeId: \"LifeTimeDestructor\",\n      },\n    ],\n  },\n];\n\nconst loadParticleEffectDefaults = (effect, particleModulesInfo) => {\n  // Assign any missing properties to their defaultValue\n  // Show warning for any missing defaultValues\n\n  const effectResult = { textures: effect.textures, modules: [] };\n  effect.modules.forEach((module) => {\n    const moduleResult = { ...module };\n    const moduleInfo = particleModulesInfo.find(\n      (info) => info.moduleTypeId === module.moduleTypeId\n    );\n    Object.entries(moduleInfo.properties).forEach(\n      ([propertyKey, propertyInfo]) => {\n        const curValue = moduleResult[propertyKey];\n        if (curValue !== undefined) return;\n        if (!(\"defaultValue\" in propertyInfo)) {\n          console.warn(\n            `Missing property @defaultValue ${module.moduleTypeId}: ${propertyKey}`\n          );\n          return;\n        }\n\n        let defaultValue = propertyInfo.defaultValue;\n        // defaultValue info is always parsed as strings\n        // Casting to the proper JS data type is important here so that \"save to file\" works correctly.\n\n        if (propertyInfo.type === \"Number\") {\n          try {\n            defaultValue = Number(defaultValue);\n          } catch (e) {\n            console.error(`Number defaultValue parsing error ${defaultValue}`);\n          }\n        } else if (propertyInfo.type === \"Boolean\") {\n          defaultValue = defaultValue.toLowerCase() === \"true\" ? true : false;\n        } else if (propertyInfo.type === \"EasingFunction\") {\n          // Load default value as string\n          if (typeof defaultValue !== \"string\")\n            throw new Error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n        } else if (\n          propertyInfo.type === \"Range\" ||\n          propertyInfo.type === \"Burst[]\" ||\n          propertyInfo.type === \"Position\" ||\n          propertyInfo.type === \"Color[]\" ||\n          propertyInfo.type === \"Shape\"\n        ) {\n          try {\n            defaultValue = JSON.parse(defaultValue);\n          } catch (e) {\n            console.error(\n              `defaultValue parsing error ${propertyInfo.type} (${defaultValue})`\n            );\n          }\n        } else {\n          throw new Error(`Unhandled defaultValue type: ${propertyInfo.type}`);\n        }\n\n        moduleResult[propertyKey] = defaultValue;\n      }\n    );\n    effectResult.modules.push(moduleResult);\n  });\n  return effectResult;\n};\n\nexport default Editor;\n","export const downloadObject = (obj, filename) => {\n  var blob = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  var url = URL.createObjectURL(blob);\n  var elem = document.createElement(\"a\");\n  elem.href = url;\n  elem.download = filename;\n  document.body.appendChild(elem);\n  elem.click();\n  document.body.removeChild(elem);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/Editor\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}