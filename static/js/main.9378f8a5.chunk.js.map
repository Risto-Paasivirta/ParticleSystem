{"version":3,"sources":["components/EffectsConfigurationPanel/ModuleProperty/NumberProperty.js","components/EffectsConfigurationPanel/ModuleProperty/PositionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/RangeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ColorPaletteProperty.js","components/EffectsConfigurationPanel/ModuleProperty/EasingFunctionProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ShapeProperty.js","components/EffectsConfigurationPanel/ModuleProperty/BurstListProperty.js","components/EffectsConfigurationPanel/ModuleProperty/ModuleProperty.js","components/EffectsConfigurationPanel/Module.js","components/EffectsConfigurationPanel/TextureSelector.js","components/EffectsConfigurationPanel/Effect.js","components/EffectsConfigurationPanel/EffectsConfigurationPanel.js","components/ProjectToolbar.js","../../modular-particle-system/release/module.js","../../modular-particle-system/release/destructors/alphaDestructor.js","../../modular-particle-system/release/destructors/lifeTimeDestructor.js","../../modular-particle-system/release/serialization/moduleSerialization.js","../../modular-particle-system/release/utilities.js","../../modular-particle-system/release/shapes/rectangle.js","../../modular-particle-system/release/shapes/triangle.js","../../modular-particle-system/release/shapes/shape.js","../../modular-particle-system/release/destructors/outsideBoundsDestructor.js","../../modular-particle-system/release/particle.js","../../modular-particle-system/release/generators/generator.js","../../modular-particle-system/release/generators/circleExteriorGenerator.js","../../modular-particle-system/release/generators/pointGenerator.js","../../modular-particle-system/release/initializers/alphaRange.js","../../modular-particle-system/release/initializers/lifeTimeRange.js","../../modular-particle-system/release/initializers/randomAngleVelocity.js","../../modular-particle-system/release/initializers/randomScale.js","../../modular-particle-system/release/initializers/randomColor.js","../../modular-particle-system/release/initializers/randomRotationalVelocity.js","../../modular-particle-system/release/initializers/randomVelocity.js","../../modular-particle-system/release/easing.js","../../modular-particle-system/release/modifiers/alphaOverLifetime.js","../../modular-particle-system/release/modifiers/deaccelerationOverLifetime.js","../../modular-particle-system/release/modifiers/gravity.js","../../modular-particle-system/release/generators/circleGenerator.js","../../modular-particle-system/release/generators/circleLoadingGenerator.js","../../modular-particle-system/release/serialization/moduleRegistry.js","../../modular-particle-system/release/particleEffect.js","../../modular-particle-system/release/particleSystem.js","components/ParticleSandbox.js","components/Editor.js","other/utils.js","reportWebVitals.js","index.js"],"names":["NumberProperty","props","value","name","propertyInfo","onChange","tooltip","min","max","step","className","title","type","e","newValue","Number","target","console","warn","PositionProperty","RangeProperty","ColorPaletteProperty","EasingFunctionProperty","easingFunctions","useContext","globalStateContext","selectedEasingFunction","map","easingFunction","ShapeProperty","BurstListProperty","ModuleProperty","nKey","key","Error","Module","module","updateModule","removeModule","particleModules","moduleInfo","find","info","moduleTypeId","sort","a","b","localeCompare","moduleType","i","onClick","Object","entries","properties","iProperty","updatedModule","TextureSelector","selectedTextures","updateTextures","availableTextures","selectedTextureName","iTexture","textureName","Effect","effect","updateEffect","removeEffect","textures","updatedTextures","updatedEffect","newModule","modules","unshift","iModule","splice","indexOf","EffectsConfigurationPanel","effects","updateEffects","updatedEffects","iEffect","ProjectToolbar","restart","saveToFile","particleEffect","this","active","dt","AlphaDestructor","len","particles","length","particle","alpha","destroyParticle","object","hideWarnings","LifeTimeDestructor","timeLived","lifeTime","loadSerializedProperty","deserializeValue","undefined","deserializedValue","deserializePrimitiveDataType","serializedPrimitiveDataType","lerp","x","y","clamp","Math","randomInRange","random","vec2","subtract","multiply","v","sqrt","pow","normalize","lerpColor","factor","aLab","rgbToLab","bLab","lerpLab","l","lerbRGB","labToRgb","r","g","rgb","z","lab","rectangleLogic","getRandomPosition","shape","v1","v2","getRandomEdgePosition","width","abs","height","randomEdgeLength","containsPosition","position","minX","minY","maxX","maxY","triangleLogic","r1","r2","s1","v3","d1","sign","d2","d3","p1","p2","p3","deserializeShape","serializedShape","selectShapeLogic","OutsideBoundsDestructor","bounds","Particle","velocity","color","rotation","rotationalVelocity","scale","destroyed","texture","ParticleGenerator","arguments","interval","_timer","bursts","_updateCounter","tPrev","tNow","forEach","burst","time","count","generateParticle","CircleExteriorGenerator","center","radius","nextParticleAngle","angleStep","cos","sin","addParticle","PointGenerator","AlphaRange","handleParticleAdd","addParticleListeners","push","LifeTimeRange","RandomAngleVelocity","angleRad","PI","RandomScale","RandomColor","palette","randomPalettePosition","iPaletteStart","floor","colorA","colorB","RandomRotationalVelocity","RandomVelocity","randomX","randomY","EasingFunctions","linear","easeOutSine","easeOutCubic","easeOutExpo","easeOutCirc","easeOutBack","c1","easeOutElastic","c4","serializeEasing","entry","deserializeEasing","serializedEasing","AlphaOverLifetime","easing","DeaccelerationOverLifetime","_velocityOverLifetime_initialVelocity","xPrev","xNow","animationPrev","animationNow","initialVelocity","deacceleration","Gravity","strength","maxPullStrengthDistance","maxPullStrengthMultiplier","minPullStrengthDistance","minPullStrengthMultiplier","toCenter","particleDistance","pullStrengthMultiplier","pullStrength","pullDirection","CircleGenerator","angle","CircleLoadingGenerator","moduleTypeRegistry","ParticleEffect","particleSystem","isInitialized","destroyParticleListeners","init","update","round","clbk","ParticleSystem","addParticleEffectListeners","removeParticleEffectListeners","toObject","options","effectObject","_a","addParticleEffect","moduleObject","moduleTypeReference","fromObject","ParticleSandbox","useState","renderer","setRenderer","devNoteState","setDevNoteState","useEffect","container","document","getElementById","app","PIXI","resizeTo","backgroundAlpha","appendChild","view","clientHeight","unusedSprites","activeSprites","Map","effectInfo","sprite","pop","blendMode","ADD","anchor","stage","addChild","visible","set","handleParticleDestroy","get","delete","registerParticleEffect","updateRendering","tint","rgb2hex","TextureCache","reset","Array","from","keys","destroy","ticker","elapsedMS","add","remove","timeout","setTimeout","clearTimeout","fill","_","id","globalState","createContext","defaultParticleSystemConf","window","innerWidth","innerHeight","loadParticleEffectDefaults","particleModulesInfo","effectResult","moduleResult","propertyKey","defaultValue","error","Editor","setEffects","loading","setLoading","promiseCoreLibraryConfig","fetch","then","json","coreLibraryConfig","log","promiseSpriteSheets","spriteSheetNames","loader","shared","resources","spritesheet","load","Promise","resolve","onComplete","once","values","resource","reduce","prev","cur","all","Provider","obj","filename","blob","Blob","JSON","stringify","url","URL","createObjectURL","elem","createElement","href","download","body","click","removeChild","downloadObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9378f8a5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NumberProperty.css\";\n\nconst NumberProperty = (props) => {\n  const { value, name, propertyInfo, onChange } = props;\n  const { tooltip, min, max, step } = propertyInfo;\n\n  return (\n    <div className=\"number-layout field\">\n      <span className=\"number-name\" title={tooltip}>\n        {name}\n      </span>\n      <input\n        className=\"number-field\"\n        type={\"number\"}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={(e) => {\n          let newValue;\n          try {\n            newValue = Number(e.target.value);\n          } catch (e) {\n            console.warn(`NumberProperty could not parse Number`);\n          }\n          onChange(newValue);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default NumberProperty;\n","import React from \"react\";\nimport \"./PositionProperty.css\";\n\nconst PositionProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"position-div field\">\n      <span>{name}</span>\n      <span>Position*</span>\n    </div>\n  );\n};\n\nexport default PositionProperty;\n","import React from \"react\";\nimport \"./RangeProperty.css\";\n\nconst RangeProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"range-div field\">\n      <span>{name}</span>\n      <span>Range*</span>\n    </div>\n  );\n};\n\nexport default RangeProperty;\n","import React from \"react\";\nimport \"./ColorPaletteProperty.css\";\n\nconst ColorPaletteProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"colorPalette-div field\">\n      <span>{name}</span>\n      <span>Color[]*</span>\n    </div>\n  );\n};\n\nexport default ColorPaletteProperty;\n","import React, { useContext } from \"react\";\nimport { globalStateContext } from \"../../Editor\";\nimport \"./EasingFunctionProperty.css\";\n\nconst EasingFunctionProperty = (props) => {\n  const { name, value, onChange } = props;\n  const { easingFunctions } = useContext(globalStateContext);\n\n  return (\n    <div className=\"easingFunction-div field\">\n      <span className=\"easingFunction-name\">{name}</span>\n      <select\n        className=\"easingFunction-dropdown\"\n        value={value}\n        onChange={(e) => {\n          const selectedEasingFunction = e.target.value;\n          onChange(selectedEasingFunction);\n        }}\n      >\n        {easingFunctions.map((easingFunction) => (\n          <option key={easingFunction} className=\"easingFunction-option\">\n            {easingFunction}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default EasingFunctionProperty;\n","import React from \"react\";\nimport \"./ShapeProperty.css\";\n\nconst ShapeProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"shape-div field\">\n      <span>{name}</span>\n      <span>Shape*</span>\n    </div>\n  );\n};\n\nexport default ShapeProperty;\n","import React from \"react\";\nimport \"./BurstListProperty.css\";\n\nconst BurstListProperty = (props) => {\n  const { name, propertyInfo, onChange } = props;\n\n  return (\n    <div className=\"burstListProperty-div field\">\n      <span>{name}</span>\n      <span>BurstList*</span>\n    </div>\n  );\n};\n\nexport default BurstListProperty;\n","import React from \"react\";\nimport \"./ModuleProperty.css\";\nimport NumberProperty from \"./NumberProperty\";\nimport PositionProperty from \"./PositionProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport ColorPaletteProperty from \"./ColorPaletteProperty\";\nimport EasingFunctionProperty from \"./EasingFunctionProperty\";\nimport ShapeProperty from \"./ShapeProperty\";\nimport BurstListProperty from \"./BurstListProperty\";\n\nconst ModuleProperty = (props) => {\n  const { propertyInfo, nKey } = props;\n\n  switch (propertyInfo.type) {\n    case \"Number\":\n      return <NumberProperty {...props} key={nKey} />;\n    case \"Position\":\n      return <PositionProperty {...props} key={nKey} />;\n    case \"Range\":\n      return <RangeProperty {...props} key={nKey} />;\n    case \"Color[]\":\n      return <ColorPaletteProperty {...props} key={nKey} />;\n    case \"EasingFunction\":\n      return <EasingFunctionProperty {...props} key={nKey} />;\n    case \"Shape\":\n      return <ShapeProperty {...props} key={nKey} />;\n    case \"Burst[]\":\n      return <BurstListProperty {...props} key={nKey} />;\n    default:\n      throw new Error(\n        `Unidentified module property type: ${propertyInfo.type}`\n      );\n  }\n};\n\nexport default ModuleProperty;\n","import React, { useContext } from \"react\";\nimport \"./Module.css\";\nimport { globalStateContext } from \"../Editor\";\nimport ModuleProperty from \"./ModuleProperty/ModuleProperty\";\n\nconst Module = (props) => {\n  const { module, nKey, updateModule, removeModule } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  const moduleInfo = particleModules.find(\n    (info) => info.moduleTypeId === module.moduleTypeId\n  );\n  if (!moduleInfo) {\n    throw new Error(`Unidentified module: ${module.moduleTypeId}`);\n  }\n\n  return (\n    <div className=\"module\">\n      <div className=\"module-title-layout field\">\n        <select\n          className=\"module-typeDropdown\"\n          value={module.moduleTypeId}\n          onChange={(e) => {\n            const value = e.target.value;\n            const updatedModule = { moduleTypeId: value };\n            updateModule(updatedModule);\n          }}\n        >\n          {particleModules\n            .sort((a, b) => a.moduleTypeId.localeCompare(b.moduleTypeId))\n            .map((moduleType, i) => (\n              <option value={moduleType.moduleTypeId} key={`module-${i}`}>\n                {moduleType.moduleTypeId}\n              </option>\n            ))}\n        </select>\n        <div className=\"module-remove\" onClick={() => removeModule()}></div>\n      </div>\n      <div className=\"module-properties\">\n        {Object.entries(moduleInfo.properties).map(\n          ([key, propertyInfo], iProperty) => (\n            <ModuleProperty\n              name={key}\n              value={module[key]}\n              propertyInfo={propertyInfo}\n              key={`${nKey}_property${iProperty}`}\n              nKey={`${nKey}_property${iProperty}`}\n              onChange={(value) => {\n                const updatedModule = { ...module };\n                updatedModule[key] = value;\n                updateModule(updatedModule);\n              }}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Module;\n","import React, { useContext } from \"react\";\nimport \"./TextureSelector.css\";\nimport { globalStateContext } from \"../Editor\";\n\nconst TextureSelector = (props) => {\n  const { selectedTextures, updateTextures } = props;\n  const { availableTextures } = useContext(globalStateContext);\n  return (\n    <select\n      className=\"textureSelector-dropdown field\"\n      onChange={(e) => {\n        const selectedTextureName = e.target.value;\n        updateTextures([selectedTextureName]);\n      }}\n      value={selectedTextures[0]}\n    >\n      {Object.entries(availableTextures)\n        .sort((a, b) => a[0].localeCompare(b[0]))\n        .map(([textureName, textureValue], iTexture) => (\n          <option\n            className=\"textureSelector-option\"\n            key={`texture-${iTexture}`}\n          >\n            {textureName}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nexport default TextureSelector;\n","import React, { useContext } from \"react\";\nimport \"./Effect.css\";\nimport Module from \"./Module\";\nimport { globalStateContext } from \"../Editor\";\nimport TextureSelector from \"./TextureSelector\";\n\nconst Effect = (props) => {\n  const { effect, title, nKey, updateEffect, removeEffect } = props;\n  const { particleModules } = useContext(globalStateContext);\n\n  return (\n    <div className=\"effect\">\n      <div className=\"effect-titleDiv\">\n        <span className=\"effect-title\">{title}</span>\n        <div\n          className=\"effect-remove\"\n          onClick={() => {\n            removeEffect();\n          }}\n        ></div>\n      </div>\n      <div className=\"effect-properties\">\n        <TextureSelector\n          selectedTextures={effect.textures}\n          updateTextures={(updatedTextures) => {\n            const updatedEffect = { ...effect, textures: updatedTextures };\n            updateEffect(updatedEffect);\n          }}\n        />\n        <div\n          className=\"effect-addModuleDiv field\"\n          onClick={() => {\n            const newModule = {\n              moduleTypeId: particleModules[0].moduleTypeId,\n            };\n            const updatedEffect = { ...effect };\n            updatedEffect.modules.unshift(newModule);\n            updateEffect(updatedEffect);\n          }}\n        >\n          <div className=\"effect-addModule\"></div>\n          <span>Add module</span>\n        </div>\n        {effect.modules.map((module, iModule) => (\n          <Module\n            module={module}\n            key={`${nKey}_module${iModule}`}\n            nKey={`${nKey}_module${iModule}`}\n            updateModule={(updatedModule) => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules[iModule] = updatedModule;\n              updateEffect(updatedEffect);\n            }}\n            removeModule={() => {\n              const updatedEffect = { ...effect };\n              updatedEffect.modules.splice(\n                updatedEffect.modules.indexOf(module),\n                1\n              );\n              updateEffect(updatedEffect);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Effect;\n","import React from \"react\";\nimport \"./EffectsConfigurationPanel.css\";\nimport Effect from \"./Effect\";\n\nconst EffectsConfigurationPanel = (props) => {\n  const { effects, updateEffects } = props;\n\n  return (\n    <div className=\"effectsConfigurationPanel\">\n      <div\n        className=\"effectsConfigurationPanel-addDiv field\"\n        onClick={() => {\n          const newEffect = {\n            textures: [\"generic/ball.png\"],\n            modules: [],\n          };\n          const updatedEffects = [...effects];\n          updatedEffects.unshift(newEffect);\n          updateEffects(updatedEffects);\n        }}\n      >\n        <div className=\"effectsConfigurationPanel-add\"></div>\n        Add effect\n      </div>\n      <span className=\"effectsConfigurationPanel-titleEffects\"></span>\n      {effects.map((effect, iEffect) => (\n        <Effect\n          effect={effect}\n          title={`Effect ${iEffect + 1}`}\n          key={`effect${iEffect}`}\n          nKey={`effect${iEffect}`}\n          updateEffect={(updatedEffect) => {\n            const updatedEffects = [...effects];\n            updatedEffects[iEffect] = updatedEffect;\n            updateEffects(updatedEffects);\n          }}\n          removeEffect={() => {\n            const updatedEffects = [...effects];\n            updatedEffects.splice(updatedEffects.indexOf(effect), 1);\n            updateEffects(updatedEffects);\n          }}\n        />\n      ))}\n      <div className=\"effectsConfigurationPanel-footer\"></div>\n    </div>\n  );\n};\n\nexport default EffectsConfigurationPanel;\n","import React from \"react\";\nimport \"./ProjectToolbar.css\";\n\nconst ProjectToolbar = (props) => {\n  const { restart, saveToFile } = props;\n  return (\n    <div className=\"projectToolbar\">\n      <div className=\"projectToolbar-gap\"></div>\n      <div className=\"projectToolBar-buttons\">\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-restart\"\n          onClick={() => restart()}\n        >\n          <span className=\"projectToolbar-button\">Restart</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-saveToFile\"\n          onClick={() => saveToFile()}\n        >\n          <span className=\"projectToolbar-button\">Save to file</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadPreset\"\n          onClick={() => {}}\n        >\n          <span className=\"projectToolbar-button\">Load preset</span>\n        </div>\n        <div\n          className=\"projectToolbar-buttonDiv projectToolbar-loadFromFile\"\n          onClick={() => {}}\n        >\n          <span className=\"projectToolbar-button\">Load from file</span>\n        </div>\n      </div>\n      <div className=\"projectToolbar-gap\"></div>\n    </div>\n  );\n};\n\nexport default ProjectToolbar;\n","export class Module {\n    constructor(particleEffect) {\n        /**\n         * Modules with `active === true` will have frequent calls to `update()` method.\n         */\n        this.active = true;\n        this.particleEffect = particleEffect;\n    }\n    init() { }\n    update(dt) { }\n}\n","import { Module } from \"../module\";\n/**\n * `Module` that destroys all particles whose color alpha value is less or equal to 0\n *\n * @module\n * @category    Destructor\n */\nexport class AlphaDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.alpha <= 0) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaDestructor.moduleTypeId = \"AlphaDestructor\";\n","import { Module } from \"../module\";\n/**\n * @module\n * @category    Destructor\n */\nexport class LifeTimeDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (particle.timeLived >= particle.lifeTime) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeDestructor.moduleTypeId,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeDestructor(particleEffect);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeDestructor.moduleTypeId = \"LifeTimeDestructor\";\n","export const loadSerializedProperty = (object, moduleType, module, key, deserializeValue, hideWarnings) => {\n    const value = object[key];\n    if (value === undefined) {\n        if (!hideWarnings)\n            console.warn(`Missing module property ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    const deserializedValue = deserializeValue(value);\n    if (deserializedValue === undefined) {\n        if (!hideWarnings)\n            console.warn(`Module property could not be deserialized ${moduleType.moduleTypeId}: \"${key}\"`);\n        return;\n    }\n    module[key] = deserializedValue;\n};\n/**\n * Function for satisfying types when deserializing a primitive data type.\n *\n * Examples of primitive data types:\n * - `property = 1.0`\n * - `property = 'hello'`\n * - `property = { x: 1.0, something: 'text' }`\n * - `property = [ 0.0, 1.0 ]`\n *\n * @param serializedPrimitiveDataType\n * @returns\n */\nexport const deserializePrimitiveDataType = (serializedPrimitiveDataType) => {\n    return serializedPrimitiveDataType;\n};\n","export const lerp = (x, y, a) => x * (1 - a) + y * a;\nexport const clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nexport const invlerp = (x, y, a) => clamp((a - x) / (y - x));\nexport const range = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n/**\n * Get random number between range [min, max].\n * @param min\n * @param max\n * @returns\n */\nexport const randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Collection of utilities for `{ x: number, y: number }` data structures.\n */\nexport const vec2 = {\n    /**\n     * Subtract two vectors.\n     * @param a     Vector\n     * @param b     Position\n     * @return      `{ x: a.x - b.x, y: a.y - b.x }`\n     */\n    subtract: (a, b) => {\n        return { x: a.x - b.x, y: a.y - b.y };\n    },\n    /**\n     * Multiply vector with a number.\n     * @param a     Vector\n     * @param b     Number\n     * @return      `{ x: a.x * b, y: a.y * b }`\n     */\n    multiply: (a, b) => {\n        return { x: a.x * b, y: a.y * b };\n    },\n    /**\n     * Get length of vector.\n     * @param v     Vector\n     * @return      Length of vector\n     */\n    length: (v) => {\n        return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\n    },\n    /**\n     * Get normalized vector.\n     * @param v     Vector\n     * @returns     Normalized vector (same direction but length = 1).\n     */\n    normalize: (v) => {\n        const length = vec2.length(v);\n        return length === 0 ? { x: 0, y: 0 } : { x: v.x / length, y: v.y / length };\n    },\n};\n/**\n * Interpolate between two colors.\n *\n * The color interpolation is done linearly in LAB color space.\n *\n * @param   a       Color 1.\n * @param   b       Color 2.\n * @param   factor  Ratio between colors 1 and 2 that will be used for the returned color.\n * @returns         Interpolated Color.\n */\nexport const lerpColor = (a, b, factor) => {\n    const aLab = rgbToLab(a);\n    const bLab = rgbToLab(b);\n    const lerpLab = {\n        l: lerp(aLab.l, bLab.l, factor),\n        a: lerp(aLab.a, bLab.a, factor),\n        b: lerp(aLab.b, bLab.b, factor),\n    };\n    const lerbRGB = labToRgb(lerpLab);\n    return {\n        r: lerbRGB.r,\n        g: lerbRGB.g,\n        b: lerbRGB.b,\n    };\n};\n/**\n * Function that transforms a RGB color to LAB.\n */\nconst rgbToLab = (rgb) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let r = rgb.r, g = rgb.g, b = rgb.b, x, y, z;\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    return { l: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n};\n/**\n * Function that transforms a LAB color to RGB.\n */\nconst labToRgb = (lab) => {\n    // Source: https://github.com/calibr/rgb-lab/blob/master/color.js\n    let y = (lab.l + 16) / 116, x = lab.a / 500 + y, z = y - lab.b / 200, r, g, b;\n    x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n    y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n    z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.204 + z * 1.057;\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n    return {\n        r: Math.max(0, Math.min(1, r)),\n        g: Math.max(0, Math.min(1, g)),\n        b: Math.max(0, Math.min(1, b)),\n    };\n};\n","import { randomInRange } from \"../utilities\";\nexport const rectangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        return {\n            x: shape.v1.x + Math.random() * (shape.v2.x - shape.v1.x),\n            y: shape.v1.y + Math.random() * (shape.v2.y - shape.v1.y),\n        };\n    },\n    /**\n     * Get random position on the Shape edges\n     * @returns Random position on the Shape edges\n     */\n    getRandomEdgePosition: function (shape) {\n        const width = Math.abs(shape.v1.x - shape.v2.x);\n        const height = Math.abs(shape.v1.y - shape.v2.y);\n        const edgeLength = width * 2 + height * 2;\n        const randomEdgeLength = randomInRange(0, edgeLength);\n        // going from bottom left counter-clockwise\n        if (randomEdgeLength < height) {\n            return {\n                x: shape.v1.x,\n                y: shape.v1.y + randomEdgeLength,\n            };\n        }\n        else if (randomEdgeLength < width + height) {\n            return {\n                x: shape.v1.x + randomEdgeLength - height,\n                y: shape.v1.y + height,\n            };\n        }\n        else if (randomEdgeLength < 2 * height + width) {\n            return {\n                x: shape.v1.x + width,\n                y: shape.v1.y + randomEdgeLength - (height + width),\n            };\n        }\n        else {\n            return {\n                x: shape.v1.x + randomEdgeLength - (2 * height + width),\n                y: shape.v1.y,\n            };\n        }\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        const minX = Math.min(shape.v1.x, shape.v2.x);\n        const minY = Math.min(shape.v1.y, shape.v2.y);\n        const maxX = Math.max(shape.v1.x, shape.v2.x);\n        const maxY = Math.max(shape.v1.y, shape.v2.y);\n        return position.x >= minX && position.x <= maxX && position.y >= minY && position.y <= maxY;\n    },\n};\n","export const triangleLogic = {\n    /**\n     * Get unbiased random position within the Shape.\n     * @return      Random position within the Shape.\n     */\n    getRandomPosition(shape) {\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const s1 = Math.sqrt(r1);\n        return {\n            x: shape.v1.x * (1.0 - s1) + shape.v2.x * (1.0 - r2) * s1 + shape.v3.x * r2 * s1,\n            y: shape.v1.y * (1.0 - s1) + shape.v2.y * (1.0 - r2) * s1 + shape.v3.y * r2 * s1,\n        };\n        //alternative version that might be faster, something to benchmark for you\n        /*\n        const s = Math.abs(r1 - r2);\n        const t = 0.5 * (r1 + r2 - s);\n        const u = 1 - 0.5 * (s + r1 + r2);\n\n        return {\n            x: s * shape.v1.x + t * shape.v2.x + u * shape.v3.x,\n            y: s * shape.v1.y + t * shape.v2.y + u * shape.v3.y,\n        };\n        */\n    },\n    /**\n     * Check whether a position is within the Shape or not.\n     * @param   position    Position to check.\n     * @return              `true` if `position` is inside the shape, otherwise `false`.\n     */\n    containsPosition(shape, position) {\n        // Source: https://stackoverflow.com/a/2049593/9288063\n        const d1 = sign(position, shape.v1, shape.v2);\n        const d2 = sign(position, shape.v2, shape.v3);\n        const d3 = sign(position, shape.v3, shape.v1);\n        const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n        const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n        return !(has_neg && has_pos);\n    },\n    getRandomEdgePosition: function (shape) {\n        throw new Error(\"Function not implemented.\");\n    },\n};\n/**\n * Internal convenience function used in `containsPosition` implementation.\n *\n * Source: https://stackoverflow.com/a/2049593/9288063\n */\nconst sign = (p1, p2, p3) => {\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n};\n","import { rectangleLogic } from \"./rectangle\";\nimport { triangleLogic } from \"./triangle\";\nexport const serializeShape = (shape) => {\n    // Shapes are just primitive data types, can be serialized as they are.\n    return shape;\n};\nexport const deserializeShape = (serializedShape) => {\n    // Shapes are just primitive data types, can be deserialized as they are.\n    return serializedShape;\n};\nexport const getRandomPositionInsideShape = (shape) => {\n    return selectShapeLogic(shape).getRandomPosition(shape);\n};\nexport const getRandomPositionOnEdge = (shape) => {\n    return selectShapeLogic(shape).getRandomEdgePosition(shape);\n};\nexport const shapeContainsPosition = (shape, position) => {\n    return selectShapeLogic(shape).containsPosition(shape, position);\n};\nconst selectShapeLogic = (shape) => {\n    switch (shape.type) {\n        case \"triangle\":\n            return triangleLogic;\n        case \"rectangle\":\n            return rectangleLogic;\n    }\n};\n","import { loadSerializedProperty } from \"../serialization/moduleSerialization\";\nimport { deserializeShape, serializeShape, shapeContainsPosition } from \"../shapes/shape\";\nimport { Module } from \"../module\";\n/**\n * `Module` that destroys all particles whose center location is outside generic bounds.\n *\n * ```ts\n *  // Example usage\n *  const destructor = new OutsideBoundsDestructor(particleSystem);\n *  destructor.bounds = {\n *      type: \"triangle\",\n *      v1: { x: 100, y: 400 },\n *      v2: { x: 300, y: 400 },\n *      v3: { x: 200, y: 0 },\n *  };\n *  particleSystem.modules.push(destructor);\n * ```\n *\n * @module\n * @category    Destructor\n * bounds {\n *      @tooltip        TODO\n *      @type           Shape\n * }\n */\nexport class OutsideBoundsDestructor extends Module {\n    update(dt) {\n        const len = this.particleEffect.particles.length;\n        if (!this.bounds) {\n            return;\n        }\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particleEffect.particles[i];\n            if (!shapeContainsPosition(this.bounds, particle.position)) {\n                this.particleEffect.destroyParticle(particle);\n            }\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: OutsideBoundsDestructor.moduleTypeId,\n            bounds: this.bounds && serializeShape(this.bounds),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new OutsideBoundsDestructor(particleEffect);\n        loadSerializedProperty(object, OutsideBoundsDestructor, module, \"bounds\", deserializeShape, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nOutsideBoundsDestructor.moduleTypeId = \"OutsideBoundsDestructor\";\n","export class Particle {\n    constructor() {\n        this.position = { x: 0, y: 0 };\n        this.velocity = { x: 0, y: 0 };\n        this.color = { r: 1, g: 1, b: 1 };\n        this.alpha = 1.0;\n        this.rotation = 0;\n        this.rotationalVelocity = 0;\n        this.timeLived = 0;\n        this.lifeTime = 2;\n        this.scale = 0.1;\n        this.destroyed = false;\n        this.texture = \"\";\n    }\n}\n","import { Module } from \"../module\";\nexport class ParticleGenerator extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Interval between generated particles as milliseconds\n         * (as long as `Generator.active === true`)\n         */\n        this.interval = 0.1;\n        this._timer = 0;\n        /**\n         * List of timestamps when a batch of particles can be generated.\n         *\n         * `time` is seconds since the particle effect was created,\n         * and `count` is number of particles to generate.\n         */\n        this.bursts = [];\n        this._updateCounter = 0;\n    }\n    update(dt) {\n        const tPrev = this._updateCounter;\n        const tNow = this._updateCounter + dt;\n        // Trigger all bursts that are between tPrev and tNow\n        this.bursts.forEach((burst) => {\n            if (burst.time >= tPrev && burst.time <= tNow) {\n                for (let i = 0; i < burst.count; i += 1) {\n                    this.generateParticle();\n                }\n            }\n        });\n        this._updateCounter = tNow;\n        if (this.interval <= 0) {\n            return;\n        }\n        this._timer += dt;\n        while (this._timer >= this.interval) {\n            this._timer -= this.interval;\n            this.generateParticle();\n        }\n    }\n}\n","// NOTE: Ideally we would have a class for `CircleGenerator`, where user could configure whether to generate particles inside the circle or along the exterior.\n// `generator.onlyExterior = true` or something like this.\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { Particle } from \"../particle\";\nimport { ParticleGenerator } from \"./generator\";\n/**\n * Generator module that creates particles along the exterior of a circular area.\n *\n * Each particle is generated next to each other, so that when particles are regularly generated they move around the circle.\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n * }\n * radius {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   50\n *      @min            0\n *      @step           10\n * }\n * nextParticleAngle {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   0\n *      @step           0.1\n * }\n * angleStep {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   0.5\n *      @step           0.1\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n * }\n */\nexport class CircleExteriorGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n        /**\n         * The angle at which the next particle will be generated at.\n         *\n         * Unit is in _radians_.\n         */\n        this.nextParticleAngle = 0;\n        /**\n         * The angle that is incremented between each generated particle.\n         *\n         * Unit is in _radians_.\n         */\n        this.angleStep = 0.5;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.center.x + Math.cos(this.nextParticleAngle) * this.radius;\n        particle.position.y = this.center.y + Math.sin(this.nextParticleAngle) * this.radius;\n        this.nextParticleAngle += this.angleStep;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleExteriorGenerator.moduleTypeId,\n            center: this.center,\n            radius: this.radius,\n            nextParticleAngle: this.nextParticleAngle,\n            angleStep: this.angleStep,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleExteriorGenerator(particleEffect);\n        loadSerializedProperty(object, CircleExteriorGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleExteriorGenerator, module, \"radius\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleExteriorGenerator, module, \"nextParticleAngle\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleExteriorGenerator, module, \"angleStep\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleExteriorGenerator.moduleTypeId = \"CircleExteriorGenerator\";\n","import { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { Particle } from \"../particle\";\nimport { ParticleGenerator } from \"./generator\";\n/**\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * position {\n *      @tooltip        TODO\n *      @type           Position\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n * }\n */\nexport class PointGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        this.position = { x: 0, y: 0 };\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.position.x;\n        particle.position.y = this.position.y;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: PointGenerator.moduleTypeId,\n            interval: this.interval,\n            position: this.position,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new PointGenerator(particleEffect);\n        loadSerializedProperty(object, PointGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, PointGenerator, module, \"position\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nPointGenerator.moduleTypeId = \"PointGenerator\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { randomInRange } from \"../utilities\";\n/**\n * Module which overrides `Particle.color.a` property from a configurable random value range.\n *\n * Range can be configured with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @max            1\n *      @step           0.1\n *      @defaultValue   1\n * }\n */\nexport class AlphaRange extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.min = 0;\n        /**\n         * Should be a number in range [0, 1] where 1 is fully opaque and 0 is completely invisible.\n         */\n        this.max = 1;\n        this.handleParticleAdd = (particle) => {\n            particle.alpha = randomInRange(this.min, this.max);\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaRange(particleEffect);\n        loadSerializedProperty(object, AlphaRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, AlphaRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaRange.moduleTypeId = \"AlphaRange\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { lerp } from \"../utilities\";\n/**\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   1.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0.0\n *      @step           0.5\n *      @defaultValue   5.0\n * }\n */\nexport class LifeTimeRange extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 1.5;\n        this.max = 2.5;\n        this.handleParticleAdd = (particle) => {\n            particle.lifeTime = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.active = false; //not used in update\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: LifeTimeRange.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new LifeTimeRange(particleEffect);\n        loadSerializedProperty(object, LifeTimeRange, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, LifeTimeRange, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nLifeTimeRange.moduleTypeId = \"LifeTimeRange\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { randomInRange } from \"../utilities\";\n/**\n * Module that assigns a random velocity to each particle along a random direction.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           10\n *      @defaultValue   100\n * }\n */\nexport class RandomAngleVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Minimum velocity\n         */\n        this.min = 0;\n        /**\n         * Maximum velocity\n         */\n        this.max = 100;\n        this.handleParticleAdd = (particle) => {\n            const angleRad = Math.random() * 2 * Math.PI;\n            const velocity = randomInRange(this.min, this.max);\n            particle.velocity.x = Math.cos(angleRad) * velocity;\n            particle.velocity.y = Math.sin(angleRad) * velocity;\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomAngleVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomAngleVelocity(particleEffect);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomAngleVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomAngleVelocity.moduleTypeId = \"RandomAngleVelocity\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { lerp } from \"../utilities\";\n/**\n * Module that assigns a random scale to each particle upon its creation.\n *\n * Scale range can be customized with properties: `min` and `max`.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   0.5\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.1\n *      @defaultValue   1.5\n * }\n */\nexport class RandomScale extends Module {\n    constructor() {\n        super(...arguments);\n        this.min = 0.5;\n        this.max = 1.5;\n        this.handleParticleAdd = (particle) => {\n            particle.scale = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomScale.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomScale(particleEffect);\n        loadSerializedProperty(object, RandomScale, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomScale, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomScale.moduleTypeId = \"RandomScale\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { lerpColor } from \"../utilities\";\n/**\n * Module that assigns each particle a random color.\n *\n * Color range can be customized to some degree using `palette` property.\n *\n * It is a array of Colors. Any interpolated step between the colors in this array can be assigned to particles.\n * For example, the following configuration results in particles varying from Red to Green colors:\n *\n * ```ts\n *  const color = new RandomColor(effect)\n *  color.palette = [\n *      { r: 1, g: 0, b: 0 },\n *      { r: 0, g: 1, b: 0 }\n *  ]\n * ```\n *\n * @module\n * @category    Initializer\n * palette {\n *      @tooltip        TODO\n *      @type           Color[]\n * }\n */\nexport class RandomColor extends Module {\n    constructor() {\n        super(...arguments);\n        this.palette = [\n            { r: 1, g: 0, b: 0 },\n            { r: 0, g: 1, b: 0 },\n            { r: 0, g: 0, b: 1 },\n            { r: 1, g: 0, b: 0 },\n        ];\n        this.handleParticleAdd = (particle) => {\n            const randomPalettePosition = Math.random() * (this.palette.length - 1);\n            const iPaletteStart = Math.floor(randomPalettePosition);\n            const colorA = this.palette[iPaletteStart];\n            const colorB = this.palette[iPaletteStart + 1];\n            particle.color = lerpColor(colorA, colorB, randomPalettePosition - iPaletteStart);\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomColor.moduleTypeId,\n            palette: this.palette,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomColor(particleEffect);\n        loadSerializedProperty(object, RandomColor, module, \"palette\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomColor.moduleTypeId = \"RandomColor\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { lerp } from \"../utilities\";\n/**\n * Module that assigns each particle random _rotational velocity_.\n * This causes the particle to continuously rotate with a static speed along its lifetime.\n *\n * Rotational velocity range can be customized with `min` and `max` properties.\n *\n * @module\n * @category    Initializer\n * min {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   -5.0\n * }\n * max {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.25\n *      @defaultValue   5.0\n * }\n */\nexport class RandomRotationalVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Min rotational velocity as **Radians per second**\n         */\n        this.min = -2 * Math.PI;\n        /**\n         * Max rotational velocity as **Radians per second**\n         */\n        this.max = 2 * Math.PI;\n        this.handleParticleAdd = (particle) => {\n            particle.rotationalVelocity = lerp(this.min, this.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n        this.active = false;\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomRotationalVelocity.moduleTypeId,\n            min: this.min,\n            max: this.max,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomRotationalVelocity(particleEffect);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"min\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomRotationalVelocity, module, \"max\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomRotationalVelocity.moduleTypeId = \"RandomRotationalVelocity\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { lerp } from \"../utilities\";\n/**\n * @module\n * @category    Initializer\n * randomX {\n *      @tooltip        TODO\n *      @type           Range\n * }\n * randomY {\n *      @tooltip        TODO\n *      @type           Range\n * }\n */\nexport class RandomVelocity extends Module {\n    constructor() {\n        super(...arguments);\n        this.randomX = { min: 100, max: 100 };\n        this.randomY = { min: -50, max: 50 };\n        this.handleParticleAdd = (particle) => {\n            particle.velocity.x = lerp(this.randomX.min, this.randomX.max, Math.random());\n            particle.velocity.y = lerp(this.randomY.min, this.randomY.max, Math.random());\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: RandomVelocity.moduleTypeId,\n            randomX: this.randomX,\n            randomY: this.randomY,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new RandomVelocity(particleEffect);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomX\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, RandomVelocity, module, \"randomY\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nRandomVelocity.moduleTypeId = \"RandomVelocity\";\n","// Easing functions for animations\n// See https://easings.net/#\n/**\n * Collection of all implemented _Easing functions_.\n */\nexport const EasingFunctions = {\n    /**\n     * @easingFunction\n     */\n    linear: ((x) => {\n        return x;\n    }),\n    /**\n     * https://easings.net/#easeOutSine\n     *\n     * @easingFunction\n     */\n    easeOutSine: ((x) => {\n        return Math.sin((x * Math.PI) / 2);\n    }),\n    /**\n     * https://easings.net/#easeOutCubic\n     *\n     * @easingFunction\n     */\n    easeOutCubic: ((x) => {\n        return 1 - Math.pow(1 - x, 3);\n    }),\n    /**\n     * https://easings.net/#easeOutExpo\n     *\n     * @easingFunction\n     */\n    easeOutExpo: ((x) => {\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n    }),\n    /**\n     * https://easings.net/#easeOutCirc\n     *\n     * @easingFunction\n     */\n    easeOutCirc: ((x) => {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }),\n    /**\n     * https://easings.net/#easeOutBack\n     *\n     * @easingFunction\n     */\n    easeOutBack: ((x) => {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    }),\n    /**\n     * https://easings.net/#easeOutElastic\n     *\n     * @easingFunction\n     */\n    easeOutElastic: ((x) => {\n        const c4 = (2 * Math.PI) / 3;\n        return x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    }),\n};\n/**\n * Serialize easing function to a primitive data type that can be later deserialized.\n */\nexport const serializeEasing = (easingFunction) => {\n    const entry = Object.entries(EasingFunctions).find((entry) => entry[1] === easingFunction);\n    if (!entry) {\n        throw new Error(`serializeEasing supplied value is not an EasingFunction`);\n    }\n    // Return key in EasingFunctions. For example \"linear\", \"easeOutElastic\", etc.\n    return entry[0];\n};\n/**\n * Deserialize an easing function that was serialized using `serializeEasing`.\n */\nexport const deserializeEasing = (serializedEasing) => {\n    if (typeof serializedEasing !== \"string\")\n        return undefined;\n    const easingFunction = Object.entries(EasingFunctions).find((entry) => entry[0] === serializedEasing);\n    return easingFunction ? easingFunction[1] : undefined;\n};\n","import { deserializeEasing, EasingFunctions, serializeEasing } from \"../easing\";\nimport { loadSerializedProperty } from \"../serialization/moduleSerialization\";\nimport { clamp } from \"../utilities\";\nimport { Module } from \"../module\";\n/**\n * Module that decays particles alpha over their lifetime.\n *\n * Alpha animation can be customized with `easing` property.\n *\n * This module modifies `Particle.alpha` property and can not be combined with any other modifier that does so.\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n * }\n */\nexport class AlphaOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of alpha.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            const alpha = 1 - this.easing(clamp(particle.timeLived / particle.lifeTime, 0, 1));\n            particle.alpha = alpha;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: AlphaOverLifetime.moduleTypeId,\n            easing: serializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new AlphaOverLifetime(particleEffect);\n        loadSerializedProperty(object, AlphaOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nAlphaOverLifetime.moduleTypeId = \"AlphaOverLifetime\";\n","import { EasingFunctions, deserializeEasing } from \"../easing\";\nimport { Module } from \"../module\";\nimport { loadSerializedProperty } from \"../serialization/moduleSerialization\";\nimport { vec2 } from \"../utilities\";\n/**\n * Module that deaccelerates particle velocity over its lifetime.\n *\n * The direction of the deacceleration is based on the initial velocity of each particle.\n * For this reason, you should ensure that the module that initializes particle velocity is listed BEFORE this module!\n *\n * Deacceleration animation can be customized with `easing` property.\n *\n * This module modifies `Particle.velocity` property, but does not reassign it so this can be combined with other modules which affect particle velocity.\n *\n * @module\n * @category    Modifier\n * easing {\n *      @tooltip        TODO\n *      @type           EasingFunction\n * }\n */\nexport class DeaccelerationOverLifetime extends Module {\n    constructor() {\n        super(...arguments);\n        /**\n         * Easing function that controls the animation of velocity.\n         *\n         * Assign via `EasingFunctions` export.\n         */\n        this.easing = EasingFunctions.easeOutSine;\n        this.handleParticleAdd = (particle) => {\n            particle._velocityOverLifetime_initialVelocity = {\n                x: particle.velocity.x,\n                y: particle.velocity.y,\n            };\n        };\n    }\n    init() {\n        this.particleEffect.addParticleListeners.push(this.handleParticleAdd);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    update(dt) {\n        const particles = this.particleEffect.particles;\n        const len = particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = particles[i];\n            // NOTE: Velocity difference for each frame is calculated to avoid completely reassigning particle velocity.\n            // This is great because it allows combining deacceleration module with other velocity affecting modules.\n            const xPrev = (particle.timeLived - dt) / particle.lifeTime;\n            const xNow = particle.timeLived / particle.lifeTime;\n            const animationPrev = this.easing(xPrev);\n            const animationNow = this.easing(xNow);\n            const initialVelocity = particle._velocityOverLifetime_initialVelocity;\n            const deacceleration = vec2.multiply(initialVelocity, animationNow - animationPrev);\n            particle.velocity.x -= deacceleration.x;\n            particle.velocity.y -= deacceleration.y;\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: DeaccelerationOverLifetime.moduleTypeId,\n            easing: deserializeEasing(this.easing),\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new DeaccelerationOverLifetime(particleEffect);\n        loadSerializedProperty(object, DeaccelerationOverLifetime, module, \"easing\", deserializeEasing, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nDeaccelerationOverLifetime.moduleTypeId = \"DeaccelerationOverLifetime\";\n","import { Module } from \"../module\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\nimport { clamp, lerp, vec2 } from \"../utilities\";\n/**\n * @module\n * @category    Modifier\n * strength {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   0.2\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n * }\n * minPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   0.2\n * }\n * maxPullStrengthMultiplier {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           0.1\n *      @defaultValue   1.0\n * }\n * minPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   500\n * }\n * maxPullStrengthDistance {\n *      @tooltip        TODO\n *      @type           Number\n *      @step           50\n *      @defaultValue   100\n * }\n */\nexport class Gravity extends Module {\n    constructor() {\n        super(...arguments);\n        this.strength = 100.0;\n        /**\n         * **Does not affect anything when `center` is `undefined`**\n         *\n         * Particle distance from `center` that will correspond to gravity strength multiplier `maxPullStrengthMultiplier`\n         */\n        this.maxPullStrengthDistance = 100;\n        /**\n         * **Does not affect anything when `center` is `undefined`**\n         *\n         * `strength` multiplier that is used when particle is `maxPullStrengthDistance` away from `center`.\n         */\n        this.maxPullStrengthMultiplier = 1;\n        /**\n         * **Does not affect anything when `center` is `undefined`**\n         *\n         * Particle distance from `center` that will correspond to gravity strength multiplier `minPullStrengthMultiplier`\n         */\n        this.minPullStrengthDistance = 500;\n        /**\n         * **Does not affect anything when `center` is `undefined`**\n         *\n         * `strength` multiplier that is used when particle is `minPullStrengthDistance` away from `center`.\n         */\n        this.minPullStrengthMultiplier = 0.25;\n    }\n    update(dt) {\n        const center = this.center;\n        if (center) {\n            // Pull particles towards the gravity center, with varying strength based on how close the particles are to the location (closer = stronger pull)\n            this.particleEffect.particles.forEach((particle) => {\n                const toCenter = vec2.subtract(center, particle.position);\n                const particleDistance = vec2.length(toCenter);\n                const pullStrengthMultiplier = lerp(this.minPullStrengthMultiplier, this.maxPullStrengthMultiplier, clamp((particleDistance - this.minPullStrengthDistance) /\n                    (this.maxPullStrengthDistance - this.minPullStrengthDistance), 0, 1));\n                const pullStrength = dt * this.strength * pullStrengthMultiplier;\n                const pullDirection = vec2.normalize(toCenter);\n                particle.velocity.x += pullDirection.x * pullStrength;\n                particle.velocity.y += pullDirection.y * pullStrength;\n            });\n        }\n        else {\n            // \"Natural gravity\", pull particles down at a constant speed depending on configured strength.\n            this.particleEffect.particles.forEach((particle) => {\n                particle.velocity.y += this.strength * dt;\n            });\n        }\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: Gravity.moduleTypeId,\n            strength: this.strength,\n            center: this.center,\n            maxPullStrengthDistance: this.maxPullStrengthDistance,\n            maxPullStrengthMultiplier: this.maxPullStrengthMultiplier,\n            minPullStrengthDistance: this.minPullStrengthDistance,\n            minPullStrengthMultiplier: this.minPullStrengthMultiplier,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new Gravity(particleEffect);\n        loadSerializedProperty(object, Gravity, module, \"strength\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, Gravity, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, Gravity, module, \"maxPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, Gravity, module, \"maxPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, Gravity, module, \"minPullStrengthDistance\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, Gravity, module, \"minPullStrengthMultiplier\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nGravity.moduleTypeId = \"Gravity\";\n","import { Particle } from \"../particle\";\nimport { ParticleGenerator } from \"./generator\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\n/**\n * Generator module that creates particles at random inside a circular area.\n *\n * @module\n * @category    Generator\n * interval {\n *      @tooltip        TODO\n *      @type           Number\n *      @min            0\n *      @step           0.01\n *      @defaultValue   0.1\n * }\n * center {\n *      @tooltip        TODO\n *      @type           Position\n * }\n * radius {\n *      @tooltip        TODO\n *      @type           Number\n *      @defaultValue   50\n *      @min            0\n *      @step           10\n * }\n * bursts {\n *      @tooltip        TODO\n *      @type           Burst[]\n * }\n */\nexport class CircleGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        const angle = Math.random() * 2 * Math.PI;\n        const radius = Math.sqrt(Math.random()) * this.radius;\n        particle.position.x = this.center.x + Math.cos(angle) * radius;\n        particle.position.y = this.center.y + Math.sin(angle) * radius;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleGenerator.moduleTypeId,\n            interval: this.interval,\n            center: this.center,\n            radius: this.radius,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleGenerator(particleEffect);\n        loadSerializedProperty(object, CircleGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleGenerator, module, \"radius\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleGenerator.moduleTypeId = \"CircleGenerator\";\n","import { Particle } from \"../particle\";\nimport { ParticleGenerator } from \"./generator\";\nimport { loadSerializedProperty, deserializePrimitiveDataType } from \"../serialization/moduleSerialization\";\n/**\n * Generator module that creates particles along the exterior of a circular area.\n *\n * Each particle is generated next to each other, so that when particles are regularly generated they move around the circle.\n *\n * @module\n * @category    Generator\n */\nexport class CircleLoadingGenerator extends ParticleGenerator {\n    constructor() {\n        super(...arguments);\n        /**\n         * Center location of the circle.\n         */\n        this.center = { x: 0, y: 0 };\n        /**\n         * Radius of the circle as pixels.\n         */\n        this.radius = 50;\n        /**\n         * The angle at which the next particle will be generated at.\n         *\n         * Unit is in _radians_.\n         */\n        this.nextParticleAngle = 0;\n        /**\n         * The angle that is incremented between each generated particle.\n         *\n         * Unit is in _radians_.\n         */\n        this.angleStep = 0.5;\n    }\n    generateParticle() {\n        const particle = new Particle();\n        particle.position.x = this.center.x + Math.cos(this.nextParticleAngle) * this.radius;\n        particle.position.y = this.center.y + Math.sin(this.nextParticleAngle) * this.radius;\n        this.nextParticleAngle += this.angleStep;\n        this.particleEffect.addParticle(particle);\n    }\n    /**\n     * Wrap the properties of the module into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            moduleTypeId: CircleLoadingGenerator.moduleTypeId,\n            interval: this.interval,\n            center: this.center,\n            nextParticleAngle: this.nextParticleAngle,\n            angleStep: this.angleStep,\n        };\n    }\n    static fromObject(particleEffect, object, hideWarnings) {\n        const module = new CircleLoadingGenerator(particleEffect);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"interval\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"center\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"nextParticleAngle\", deserializePrimitiveDataType, hideWarnings);\n        loadSerializedProperty(object, CircleLoadingGenerator, module, \"angleStep\", deserializePrimitiveDataType, hideWarnings);\n        return module;\n    }\n}\n/**\n * Serializable identifier for the module.\n *\n * This must be unique between all existing Modules in the library.\n */\nCircleLoadingGenerator.moduleTypeId = \"CircleLoadingGenerator\";\n","import { AlphaDestructor } from \"../destructors/alphaDestructor\";\nimport { LifeTimeDestructor } from \"../destructors/lifeTimeDestructor\";\nimport { OutsideBoundsDestructor } from \"../destructors/outsideBoundsDestructor\";\nimport { CircleExteriorGenerator } from \"../generators/circleExteriorGenerator\";\nimport { PointGenerator } from \"../generators/pointGenerator\";\nimport { AlphaRange } from \"../initializers/alphaRange\";\nimport { LifeTimeRange } from \"../initializers/lifeTimeRange\";\nimport { RandomAngleVelocity } from \"../initializers/randomAngleVelocity\";\nimport { RandomScale } from \"../initializers/randomScale\";\nimport { RandomColor } from \"../initializers/randomColor\";\nimport { RandomRotationalVelocity } from \"../initializers/randomRotationalVelocity\";\nimport { RandomVelocity } from \"../initializers/randomVelocity\";\nimport { AlphaOverLifetime } from \"../modifiers/alphaOverLifetime\";\nimport { DeaccelerationOverLifetime } from \"../modifiers/deaccelerationOverLifetime\";\nimport { Gravity } from \"../modifiers/gravity\";\nimport { CircleGenerator } from \"../generators/circleGenerator\";\nimport { CircleLoadingGenerator } from \"../generators/circleLoadingGenerator\";\n/**\n * This list should contain all Modules in the library.\n *\n * It is required for deserializing Modules from JS objects.\n */\nexport const moduleTypeRegistry = [\n    AlphaDestructor,\n    LifeTimeDestructor,\n    OutsideBoundsDestructor,\n    CircleExteriorGenerator,\n    PointGenerator,\n    AlphaRange,\n    LifeTimeRange,\n    RandomAngleVelocity,\n    RandomVelocity,\n    AlphaOverLifetime,\n    DeaccelerationOverLifetime,\n    Gravity,\n    RandomScale,\n    RandomColor,\n    RandomRotationalVelocity,\n    CircleGenerator,\n    CircleExteriorGenerator,\n    CircleLoadingGenerator,\n];\n","export class ParticleEffect {\n    /**\n     * **NOTE: ParticleEffects should be created with `ParticleSystem.addParticleEffect()` instead of using the constructor directly**\n     */\n    constructor(particleSystem) {\n        this.modules = [];\n        this.particles = [];\n        this.isInitialized = false;\n        /**\n         * List of texture names that are randomly assigned to particles of this effect.\n         */\n        this.textures = [];\n        this.addParticleListeners = [];\n        this.destroyParticleListeners = [];\n        this.particleSystem = particleSystem;\n    }\n    init() {\n        this.modules.forEach((module) => {\n            module.init();\n        });\n    }\n    update(dt) {\n        const len = this.particles.length;\n        for (let i = 0; i < len; i += 1) {\n            const particle = this.particles[i];\n            particle.timeLived += dt;\n            particle.position.x += particle.velocity.x * dt;\n            particle.position.y += particle.velocity.y * dt;\n            particle.rotation += particle.rotationalVelocity * dt;\n        }\n        this.modules.forEach((module) => {\n            if (module.active) {\n                module.update(dt);\n            }\n        });\n        // Remove destroyed particles\n        for (let i = 0; i < this.particles.length; i += 1) {\n            const particle = this.particles[i];\n            if (particle.destroyed) {\n                this.particles.splice(i, 1);\n                i -= 1;\n            }\n        }\n    }\n    addParticle(particle) {\n        this.particles.push(particle);\n        if (this.textures.length > 0) {\n            // Assign particle texture.\n            particle.texture = this.textures[Math.round(Math.random() * (this.textures.length - 1))];\n        }\n        this.addParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n    /**\n     * Destroy a particle, removing it from further updates.\n     *\n     * This can be safely called while iterating over `particles`, the array is not modified immediately.\n     */\n    destroyParticle(particle) {\n        // Modifying particle arrays can be heavy, better mark particles that should be removed and modify array just once during update.\n        particle.destroyed = true;\n        this.destroyParticleListeners.forEach((clbk) => {\n            clbk(particle);\n        });\n    }\n}\n","import { moduleTypeRegistry } from \"./serialization/moduleRegistry\";\nimport { ParticleEffect } from \"./particleEffect\";\nexport class ParticleSystem {\n    constructor() {\n        this.effects = [];\n        this.addParticleEffectListeners = [];\n        this.removeParticleEffectListeners = [];\n    }\n    update(dt) {\n        this.effects.forEach((effect) => {\n            if (!effect.isInitialized) {\n                effect.init();\n                effect.isInitialized = true;\n            }\n            effect.update(dt);\n        });\n    }\n    addParticleEffect() {\n        const particleEffect = new ParticleEffect(this);\n        this.effects.push(particleEffect);\n        this.addParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        return particleEffect;\n    }\n    removeParticleEffect(particleEffect) {\n        const i = this.effects.indexOf(particleEffect);\n        if (i <= 0) {\n            this.effects.splice(i, 1);\n            this.removeParticleEffectListeners.forEach((clbk) => clbk(particleEffect));\n        }\n    }\n    /**\n     * Wrap the properties of the whole particle system into a JSON containing only primitive JavaScript data types\n     * (such as numbers, strings, etc.) that can be serialized into strings natively.\n     */\n    toObject() {\n        return {\n            effects: this.effects.map((effect) => ({\n                textures: effect.textures,\n                modules: effect.modules.map((module) => module.toObject()),\n            })),\n        };\n    }\n    static fromObject(object, options) {\n        const hideWarnings = (options === null || options === void 0 ? void 0 : options.hideWarnings) || false;\n        const particleSystem = new ParticleSystem();\n        const effectObjects = object.effects;\n        effectObjects.forEach((effectObject) => {\n            var _a;\n            const effect = particleSystem.addParticleEffect();\n            effect.textures = effectObject.textures;\n            (_a = effectObject.modules) === null || _a === void 0 ? void 0 : _a.forEach((moduleObject) => {\n                const moduleTypeReference = moduleTypeRegistry.find((moduleType) => moduleType.moduleTypeId === moduleObject.moduleTypeId);\n                if (!moduleTypeReference) {\n                    // The module type can't be identified. This probably means that the particle system was saved with a different library version than the active one.\n                    if (!hideWarnings)\n                        console.warn(`ParticleSystem.fromObject unidentified module type: \"${moduleObject.moduleTypeId}\"`);\n                    return;\n                }\n                const module = moduleTypeReference.fromObject(effect, moduleObject, hideWarnings);\n                effect.modules.push(module);\n            });\n        });\n        return particleSystem;\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./ParticleSandbox.css\";\nimport * as PIXI from \"pixi.js\";\nimport { ParticleSystem } from \"modular-particle-system/particleSystem\";\n\nconst ParticleSandbox = (props) => {\n  const { effects } = props;\n\n  const [renderer, setRenderer] = useState(undefined);\n\n  const [devNoteState, setDevNoteState] = useState(false);\n\n  useEffect(() => {\n    const container = document.getElementById(\"particleSandbox\");\n    const app = new PIXI.Application({\n      resizeTo: container,\n      backgroundAlpha: 0,\n    });\n    container.appendChild(app.view);\n    app.view.height = container.clientHeight;\n    // #region PIXI Renderer\n\n    const unusedSprites = [];\n    const activeSprites = new Map();\n    const registerParticleEffect = (particleEffect, effectInfo) => {\n      particleEffect.addParticleListeners.push((particle) =>\n        handleParticleAdd(effectInfo, particle)\n      );\n      particleEffect.destroyParticleListeners.push((particle) =>\n        handleParticleDestroy(particle)\n      );\n    };\n    const handleParticleAdd = (effectInfo, particle) => {\n      // Get sprite for rendering particle.\n      let sprite = unusedSprites.pop();\n      if (!sprite) {\n        // No sprites, make a new one.\n        sprite = new PIXI.Sprite();\n        sprite.blendMode = PIXI.BLEND_MODES.ADD;\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        app.stage.addChild(sprite);\n      }\n      // Prepare sprite for rendering.\n      sprite.visible = true;\n\n      // Save the relation between the particle and sprite.\n      activeSprites.set(particle, sprite);\n    };\n    const handleParticleDestroy = (particle) => {\n      // Get sprite that is used to render the destroyed particle.\n      const sprite = activeSprites.get(particle);\n      if (sprite) {\n        // Remove sprite from rendering.\n        sprite.visible = false;\n        // Remove sprite and particle from list of active sprites.\n        activeSprites.delete(particle);\n        // Add sprite to list of unused sprites.\n        unusedSprites.push(sprite);\n      }\n    };\n    const updateRendering = () => {\n      activeSprites.forEach((sprite, particle) => {\n        sprite.x = particle.position.x;\n        sprite.y = particle.position.y;\n        sprite.scale.x = particle.scale;\n        sprite.scale.y = particle.scale;\n        sprite.alpha = particle.alpha;\n        sprite.tint = PIXI.utils.rgb2hex([\n          particle.color.r,\n          particle.color.g,\n          particle.color.b,\n        ]);\n        sprite.rotation = particle.rotation;\n        sprite.texture = PIXI.utils.TextureCache[particle.texture];\n      });\n    };\n    const reset = () => {\n      const allParticles = Array.from(activeSprites.keys());\n      allParticles.forEach(handleParticleDestroy);\n    };\n    // #endregion\n\n    setRenderer({ app, registerParticleEffect, updateRendering, reset });\n\n    return () => {\n      app.destroy(true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!renderer) {\n      return;\n    }\n    const { app, updateRendering, registerParticleEffect, reset } = renderer;\n\n    reset();\n\n    // TODO: Should disable warnings from ParticleSystem deserialization\n    const particleSystem = ParticleSystem.fromObject({\n      effects,\n    });\n    const particleEffects = particleSystem.effects;\n    particleEffects.forEach((particleEffect, i) =>\n      registerParticleEffect(particleEffect, effects[i])\n    );\n\n    const update = () => {\n      const dt = app.ticker.elapsedMS / 1000;\n      particleSystem.update(dt);\n      updateRendering();\n    };\n    app.ticker?.add(update);\n\n    return () => {\n      app.ticker?.remove(update);\n    };\n  }, [effects, renderer]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDevNoteState(true);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <div className=\"particleSandbox\">\n      <div className=\"particleSandbox-gridColumns\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridColumn\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-gridRows\">\n        {new Array(10).fill(0).map((_, i) => (\n          <div className=\"particleSandbox-gridRow\" key={`col${i}`}></div>\n        ))}\n      </div>\n      <div className=\"particleSandbox-canvas\" id=\"particleSandbox\"></div>\n      <div\n        className={`particleSandbox-devNotification ${\n          devNoteState ? \"particleSandbox-devNotification-active\" : \"\"\n        }`}\n        onClick={() => setDevNoteState(false)}\n      >\n        <p>\n          <b>Work in progress!</b>\n        </p>\n        <p>Some features are still unimplemented.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ParticleSandbox;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport EffectsConfigurationPanel from \"./EffectsConfigurationPanel/EffectsConfigurationPanel\";\nimport ProjectToolbar from \"./ProjectToolbar\";\nimport ParticleSandbox from \"./ParticleSandbox\";\nimport \"./Editor.css\";\nimport * as PIXI from \"pixi.js\";\nimport { downloadObject } from \"../other/utils\";\n\nconst globalState = {\n  particleModules: [],\n  easingFunctions: [],\n  /**\n   * Object where key = name of sprite and value = PIXI.js Texture\n   */\n  availableTextures: {},\n};\nexport const globalStateContext = createContext(globalState);\n\nconst Editor = (props) => {\n  const [effects, setEffects] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const { particleModules } = useContext(globalStateContext);\n\n  useEffect(() => {\n    // Load config files.\n    const promiseCoreLibraryConfig = fetch(\"config.modularParticleSystem.json\")\n      .then((r) => r.json())\n      .then((coreLibraryConfig) => {\n        console.log(\"loaded core library config\");\n        const { particleModules, easingFunctions } = coreLibraryConfig;\n        globalState.particleModules = particleModules;\n        globalState.easingFunctions = easingFunctions;\n\n        setEffects(\n          defaultParticleSystemConf.map((effect) =>\n            loadParticleEffectDefaults(effect, particleModules)\n          )\n        );\n      });\n\n    const promiseSpriteSheets = fetch(\"config.spritesheets.json\")\n      .then((r) => r.json())\n      .then((spriteSheetNames) => {\n        console.log(\"loaded spritesheet names\");\n        const loader = PIXI.Loader.shared;\n        if (!loader.resources.spritesheet) {\n          spriteSheetNames.forEach((name) => {\n            loader.add(name, `sprites/${name}`);\n          });\n          loader.load();\n\n          return new Promise((resolve) => {\n            loader.onComplete.once((_, resources) => {\n              console.log(\"loaded spritesheets\");\n              const availableTexturesList = Object.values(resources).map(\n                (resource) => resource.textures\n              );\n              const availableTextures = availableTexturesList.reduce(\n                (prev, cur) => ({ ...prev, ...cur }),\n                {}\n              );\n\n              globalState.availableTextures = availableTextures;\n\n              resolve();\n            });\n          });\n        }\n      });\n\n    Promise.all([promiseCoreLibraryConfig, promiseSpriteSheets]).then((_) => {\n      setLoading(false);\n    });\n  }, []);\n\n  return loading ? (\n    <div className=\"editor-loading\">Loading...</div>\n  ) : (\n    <globalStateContext.Provider value={globalState}>\n      <div className=\"editor\">\n        <ProjectToolbar\n          restart={() => {\n            setEffects([...effects]);\n          }}\n          saveToFile={() => {\n            const particleSystemObject = {\n              effects: effects.map((effect) => ({ modules: effect.modules })),\n            };\n            downloadObject(particleSystemObject, \"particleSystem.json\");\n          }}\n        />\n        <div className=\"editor-workspace\">\n          <ParticleSandbox effects={effects} />\n          <EffectsConfigurationPanel\n            effects={effects}\n            updateEffects={(updatedEffects) => {\n              updatedEffects = updatedEffects.map((effect) =>\n                loadParticleEffectDefaults(effect, particleModules)\n              );\n              setEffects(updatedEffects);\n            }}\n          />\n        </div>\n      </div>\n    </globalStateContext.Provider>\n  );\n};\n\nconst defaultParticleSystemConf = [\n  {\n    textures: [\"generic/ball.png\"],\n    modules: [\n      {\n        moduleTypeId: \"PointGenerator\",\n        position: {\n          x: (window.innerWidth - 200) / 2,\n          y: (window.innerHeight - 24) / 2,\n        },\n      },\n      {\n        moduleTypeId: \"RandomAngleVelocity\",\n        min: 50,\n        max: 100,\n      },\n      {\n        moduleTypeId: \"RandomScale\",\n        min: 0.5,\n        max: 0.8,\n      },\n      {\n        moduleTypeId: \"RandomColor\",\n      },\n      {\n        moduleTypeId: \"LifeTimeRange\",\n      },\n      {\n        moduleTypeId: \"AlphaOverLifetime\",\n      },\n      {\n        moduleTypeId: \"LifeTimeDestructor\",\n      },\n    ],\n  },\n];\n\nconst loadParticleEffectDefaults = (effect, particleModulesInfo) => {\n  // Assign any missing properties to their defaultValue\n  // Show warning for any missing defaultValues\n\n  const effectResult = { textures: effect.textures, modules: [] };\n  effect.modules.forEach((module) => {\n    const moduleResult = { ...module };\n    const moduleInfo = particleModulesInfo.find(\n      (info) => info.moduleTypeId === module.moduleTypeId\n    );\n    Object.entries(moduleInfo.properties).forEach(\n      ([propertyKey, propertyInfo]) => {\n        const curValue = moduleResult[propertyKey];\n        if (curValue !== undefined) return;\n        if (!(\"defaultValue\" in propertyInfo)) {\n          console.warn(\n            `Missing property @defaultValue ${module.moduleTypeId}: ${propertyKey}`\n          );\n          return;\n        }\n\n        let defaultValue = propertyInfo.defaultValue;\n        // defaultValue info is always parsed as strings\n        // Casting to the proper JS data type is important here so that \"save to file\" works correctly.\n\n        if (propertyInfo.type === \"Number\") {\n          try {\n            defaultValue = Number(defaultValue);\n          } catch (e) {\n            console.error(`Number defaultValue parsing error ${defaultValue}`);\n          }\n        } else {\n          throw new Error(`Unhandled defaultValue type: ${propertyInfo.type}`);\n        }\n\n        moduleResult[propertyKey] = defaultValue;\n      }\n    );\n    effectResult.modules.push(moduleResult);\n  });\n  return effectResult;\n};\n\nexport default Editor;\n","export const downloadObject = (obj, filename) => {\n  var blob = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  var url = URL.createObjectURL(blob);\n  var elem = document.createElement(\"a\");\n  elem.href = url;\n  elem.download = filename;\n  document.body.appendChild(elem);\n  elem.click();\n  document.body.removeChild(elem);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/Editor\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}